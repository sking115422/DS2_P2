readFileIntoArray: C:\Users\Tango\Desktop\Projects\DS2_P2\scala\scalation\data\forestfires_cleaned.csv
load: read 99 data rows so far ...
load: read 199 data rows so far ...
load: read 299 data rows so far ...
load: read 399 data rows so far ...
load: read 499 data rows so far ...
load: read in an 517-by-13 matrix from forestfires_cleaned.csv
ox_fname = Array(intercept, X, Y, month, day, FFMC, DMC, DC, ISI, temp, RH, wind, rain)
------------------------------------------
| NeuralNet_3L for ForestFires with reLU |
------------------------------------------
 scaled: x = 
MatrixD(1.00000,	1.00734,	0.569309,	-1.96654,	0.357375,	-0.805180,	-1.32205,	-1.82871,	-0.860113,	-1.84086,	0.411326,	1.49716,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	1.10905,	-1.08985,	-0.00809419,	-1.17840,	0.488418,	-0.509195,	-0.153130,	-0.691786,	-1.74007,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	1.10905,	0.839784,	-0.00809419,	-1.04881,	0.560173,	-0.509195,	-0.738668,	-0.691786,	-1.51681,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	-1.96654,	0.357375,	0.191177,	-1.21119,	-1.89643,	-0.00475130,	-1.82364,	3.23039,	-0.00982420,	0.602572,
 	1.00000,	1.43953,	1.38238,	-1.96654,	1.32219,	-0.243597,	-0.930142,	-1.79686,	0.126843,	-1.28976,	3.35296,	-1.23774,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	1.32219,	0.299871,	-0.399278,	-0.241629,	1.24539,	0.570182,	-0.936922,	0.771577,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-1.57226,	0.299871,	-0.343069,	-0.210992,	-0.114413,	0.897394,	-1.05949,	-0.512154,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-1.57226,	0.154946,	0.539103,	0.242919,	0.368098,	-1.87530,	2.55627,	-1.01448,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.669677,	-1.08985,	0.0643681,	0.290846,	0.583151,	-0.443398,	-0.996994,	1.14673,	0.771577,	-0.0731974,
 	1.00000,	1.00734,	0.569309,	0.669677,	0.839784,	0.336102,	-0.357121,	0.607338,	-0.421466,	0.673512,	-0.262798,	-0.00982420,	-0.0731974,
 	1.00000,	1.00734,	0.569309,	0.669677,	0.839784,	0.336102,	-0.357121,	0.607338,	-0.421466,	-0.187573,	0.411326,	1.77624,	-0.0731974,
 	1.00000,	1.00734,	0.569309,	0.669677,	0.839784,	0.390449,	-0.588203,	0.665387,	2.97805,	0.0707522,	-0.385366,	-0.00982420,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.230308,	0.357375,	-4.91742,	-0.625676,	0.473099,	-1.80320,	-0.325347,	1.69829,	1.49716,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	-1.57226,	0.0462525,	0.244005,	0.558560,	-0.443398,	0.415186,	-0.140230,	-1.01448,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	-0.607444,	0.408564,	0.350178,	0.611369,	0.0391134,	1.29349,	-1.42719,	0.269248,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	0.357375,	0.481026,	0.473526,	0.669015,	1.06993,	0.690734,	-0.0176621,	0.771577,	-0.0731974,
 	1.00000,	0.142950,	0.569309,	-1.96654,	0.839784,	0.191177,	-1.17215,	-1.88313,	-0.267939,	-0.652559,	-1.05949,	0.771577,	-0.0731974,
 	1.00000,	1.43953,	0.569309,	1.10905,	-1.57226,	-1.04068,	-1.21899,	0.468665,	-1.32069,	-0.377012,	0.166190,	0.492505,	-0.0731974,
 	1.00000,	0.575144,	-0.243765,	-1.96654,	-0.607444,	-0.261712,	-1.29550,	-1.92344,	-0.596924,	-0.514786,	-0.569218,	-0.00982420,	-0.0731974,
 	1.00000,	0.575144,	-0.243765,	-1.52717,	0.839784,	-0.787064,	-1.30331,	-1.81742,	-0.860113,	-1.65142,	-0.0176621,	0.269248,	-0.0731974,
 	1.00000,	0.575144,	-0.243765,	0.669677,	-1.08985,	0.0643681,	0.290846,	0.583151,	-0.443398,	-0.101465,	-0.262798,	-0.735411,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.669677,	-1.57226,	0.209293,	-0.505451,	0.710939,	0.0391134,	0.0363088,	-0.385366,	-0.735411,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	-0.648431,	1.32219,	0.662182,	-0.227528,	-1.40261,	10.3254,	0.363521,	-0.0176621,	0.269248,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.230308,	0.839784,	-0.0805565,	0.000431867,	-0.0424888,	-0.618857,	0.105196,	-0.0789461,	0.994835,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.230308,	0.839784,	0.517258,	0.445421,	0.186482,	2.47360,	0.828507,	-0.753070,	0.994835,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.230308,	1.32219,	0.136830,	0.492262,	0.215507,	0.346166,	-0.445899,	0.962882,	0.771577,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	0.357375,	0.317986,	0.109727,	0.483984,	0.697084,	0.0190871,	-0.630502,	0.994835,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	-1.57226,	0.0462525,	0.244005,	0.558560,	-0.443398,	0.0879739,	0.227474,	-1.51681,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	0.839784,	0.499142,	0.539103,	0.699249,	-0.202142,	1.94792,	-1.24334,	-0.735411,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	1.32219,	0.517258,	0.599996,	0.728273,	-0.202142,	0.673512,	-0.324082,	-0.233082,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	0.357375,	0.662182,	-0.402401,	0.581941,	1.50858,	1.12128,	-1.24334,	-0.233082,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	-1.57226,	-0.370406,	-0.297789,	0.652890,	-0.421466,	-1.32421,	2.06599,	1.99949,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	0.357375,	-0.370406,	-0.642851,	0.640393,	-0.706586,	0.294634,	-0.446650,	-1.23774,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	1.32219,	0.191177,	-0.550730,	0.686752,	-0.267939,	-0.204795,	-0.324082,	-0.233082,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	-1.57226,	0.209293,	-0.505451,	0.710939,	0.0391134,	0.397965,	-0.753070,	-0.735411,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	-1.08985,	-0.0624409,	-0.471101,	0.734723,	-0.596924,	-0.118687,	1.08545,	0.269248,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	1.10905,	-1.08985,	-0.00809419,	-1.17840,	0.488418,	-0.509195,	0.484073,	-1.24334,	0.269248,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	1.10905,	0.357375,	-0.116788,	-1.08316,	0.542839,	-0.0705483,	-1.30698,	0.962882,	0.771577,	-0.0731974,
 	1.00000,	1.00734,	-1.05684,	1.10905,	0.839784,	-0.00809419,	-1.04881,	0.560173,	-0.509195,	-0.187573,	-1.05949,	-0.00982420,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	-1.96654,	-1.08985,	-0.460984,	-1.32985,	-1.93634,	-1.14523,	-0.824777,	-0.0789461,	-0.735411,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	-0.209062,	-1.08985,	-2.01892,	-0.784935,	-0.730612,	-1.64968,	0.759621,	-0.446650,	-0.512154,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.230308,	0.839784,	-0.0805565,	-0.218159,	0.307418,	-0.0266836,	-0.0842431,	-0.140230,	1.49716,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.230308,	-1.08985,	0.752760,	-0.0401636,	0.399732,	1.74984,	-0.394234,	0.595178,	0.771577,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.669677,	0.839784,	0.336102,	-0.357121,	0.607338,	-0.421466,	0.122417,	0.227474,	-0.735411,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.669677,	-0.607444,	-0.0986721,	-0.436751,	0.756895,	-0.618857,	-1.03144,	1.82086,	0.492505,	-0.0731974,
 	1.00000,	0.142950,	1.38238,	0.669677,	-0.607444,	0.662182,	-0.402401,	0.581941,	1.50858,	1.20738,	-1.24334,	-0.00982420,	-0.0731974,
 	1.00000,	0.142950,	1.38238,	0.669677,	-1.57226,	0.0462525,	0.244005,	0.558560,	-0.443398,	-0.721446,	1.57572,	-0.233082,	-0.0731974,
 	1.00000,	0.575144,	1.38238,	-0.209062,	-1.57226,	0.644067,	-0.758392,	-0.423436,	0.433895,	0.707955,	-0.507934,	-0.512154,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	-1.96654,	-1.57226,	-0.624024,	-1.35796,	-1.94803,	-1.07944,	-1.22088,	-0.569218,	-1.23774,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	-1.96654,	-1.57226,	-0.551562,	-0.916090,	-1.79041,	-0.882045,	-1.35865,	0.104906,	0.994835,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.669677,	-0.125035,	0.408564,	0.407948,	0.638781,	0.0391134,	0.329078,	-1.67233,	-1.51681,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.230308,	1.32219,	-0.0805565,	-0.176002,	0.335636,	-0.596924,	0.449630,	-0.630502,	-1.01448,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.230308,	-0.607444,	0.263639,	0.00511597,	0.427950,	0.126843,	0.260191,	-0.140230,	0.492505,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.230308,	-0.607444,	0.263639,	0.00511597,	0.427950,	0.126843,	0.260191,	-0.140230,	0.492505,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.230308,	-0.125035,	0.191177,	0.0535183,	0.456975,	-0.596924,	-0.222017,	0.0436219,	-0.233082,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.669677,	-0.125035,	0.408564,	0.407948,	0.638781,	0.0391134,	1.51738,	-1.24334,	-1.01448,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.669677,	-1.08985,	-0.0624409,	-0.471101,	0.734723,	-0.596924,	-0.187573,	1.14673,	0.492505,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	1.10905,	1.32219,	0.354217,	-1.00509,	0.579926,	-0.0486160,	-0.876442,	0.350042,	-0.735411,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	-2.40591,	-1.57226,	-1.20372,	-1.58592,	-2.07179,	-1.51808,	-0.859220,	-0.262798,	0.771577,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	-2.40591,	0.357375,	-0.732717,	-1.52502,	-2.03551,	-0.816248,	-1.13477,	0.411326,	-1.74007,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	-1.96654,	1.32219,	-0.243597,	-0.930142,	-1.79686,	0.126843,	-1.27254,	-0.324082,	0.994835,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	-1.96654,	1.32219,	-0.243597,	-0.930142,	-1.79686,	0.126843,	-2.30584,	0.901598,	1.27391,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.230308,	-0.125035,	0.426680,	-0.555414,	-0.327897,	-0.289872,	-0.0153563,	-0.569218,	0.492505,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.230308,	1.32219,	-0.0805565,	-0.176002,	0.335636,	-0.596924,	0.329078,	-0.691786,	-0.735411,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.230308,	-1.57226,	0.0824837,	-0.119793,	0.366273,	-0.706586,	0.725177,	-0.814354,	-0.512154,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.230308,	-0.125035,	0.191177,	0.0535183,	0.456975,	-0.596924,	-0.0497997,	-0.0176621,	0.269248,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.669677,	0.357375,	0.317986,	0.109727,	0.483984,	0.697084,	0.707955,	-0.446650,	0.269248,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.669677,	0.357375,	0.317986,	0.109727,	0.483984,	0.697084,	0.122417,	-0.691786,	0.771577,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.669677,	0.357375,	0.317986,	0.109727,	0.483984,	0.697084,	0.122417,	-0.691786,	1.27391,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	-1.96654,	0.357375,	0.191177,	-1.21119,	-1.89643,	-0.00475130,	-0.290904,	-1.12077,	0.269248,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	-1.96654,	0.357375,	0.100599,	-0.976983,	-1.81460,	0.762881,	-0.532008,	-1.05949,	1.99949,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.669677,	0.357375,	0.662182,	-0.402401,	0.581941,	1.50858,	-0.204795,	-0.446650,	-0.233082,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	-1.96654,	0.357375,	0.191177,	-1.21119,	-1.89643,	-0.00475130,	-0.566451,	-1.18206,	1.27391,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.230308,	-1.08985,	-0.334175,	0.568769,	0.268315,	-0.00475130,	-0.273682,	-0.0789461,	0.269248,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.669677,	0.357375,	0.481026,	0.473526,	0.669015,	1.06993,	1.50015,	-0.875638,	-1.51681,	-0.0731974,
 	1.00000,	1.87172,	3.82160,	-2.40591,	-0.125035,	-1.16749,	-1.62495,	-2.10162,	-0.289872,	-2.09918,	2.12728,	-0.512154,	-0.0731974,
 	1.00000,	1.87172,	3.82160,	-2.40591,	0.357375,	-0.732717,	-1.52502,	-2.03551,	-0.816248,	-0.549229,	-0.0789461,	-0.512154,	-0.0731974,
 	1.00000,	-1.58582,	-1.05684,	-1.96654,	-1.57226,	-0.551562,	-0.916090,	-1.79041,	-0.882045,	-1.82364,	1.69829,	-0.512154,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.230308,	0.357375,	-0.0986721,	-0.0448477,	-0.0731258,	0.762881,	-0.721446,	1.33059,	-0.735411,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.230308,	-1.08985,	0.0643681,	0.161253,	0.0550658,	-0.443398,	0.466851,	-1.54976,	1.49716,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.230308,	1.32219,	0.136830,	0.492262,	0.215507,	0.346166,	0.105196,	-0.324082,	1.27391,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.230308,	1.32219,	-0.0805565,	-0.176002,	0.335636,	-0.596924,	-0.170352,	-0.0176621,	-1.01448,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.230308,	-1.08985,	0.752760,	-0.0401636,	0.399732,	1.74984,	-0.0497997,	0.411326,	0.269248,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.230308,	-0.607444,	0.263639,	0.00511597,	0.427950,	0.126843,	-0.394234,	0.166190,	-1.74007,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.230308,	-0.125035,	0.191177,	0.0535183,	0.456975,	-0.596924,	0.225748,	0.0436219,	-0.233082,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.669677,	-0.125035,	0.408564,	0.407948,	0.638781,	0.0391134,	0.449630,	-1.79490,	-1.74007,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.669677,	-0.125035,	0.408564,	0.407948,	0.638781,	0.0391134,	1.12128,	-1.05949,	-1.01448,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.669677,	-0.125035,	0.408564,	0.407948,	0.638781,	0.0391134,	0.604625,	-0.630502,	-1.01448,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.669677,	1.32219,	0.517258,	0.599996,	0.728273,	-0.202142,	1.10405,	-0.507934,	-0.233082,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-1.96654,	0.839784,	0.191177,	-1.17215,	-1.88313,	-0.267939,	-0.256460,	-1.18206,	0.492505,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.230308,	0.839784,	-0.0805565,	-0.218159,	0.307418,	-0.0266836,	-0.721446,	0.901598,	0.994835,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	-1.96654,	0.357375,	0.191177,	-1.17215,	-1.88313,	-0.267939,	-0.256460,	-1.24334,	0.771577,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	1.32219,	0.299871,	-0.399278,	-0.241629,	1.24539,	0.329078,	-0.753070,	1.27391,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	1.32219,	0.136830,	0.492262,	0.215507,	0.346166,	-0.118687,	-0.0789461,	0.492505,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-1.57226,	0.0824837,	-0.119793,	0.366273,	-0.706586,	0.776842,	-1.36591,	-0.735411,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.669677,	1.32219,	-0.171134,	-0.325894,	0.630719,	-0.925910,	-0.187573,	1.20802,	-1.51681,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	-2.40591,	0.839784,	-1.22184,	-1.60621,	-2.08710,	-1.40842,	-1.06588,	0.227474,	-1.23774,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	-1.96654,	0.839784,	-3.92106,	-1.69365,	-2.14636,	-1.82514,	-0.256460,	-1.24334,	0.771577,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	1.32219,	0.136830,	0.492262,	0.215507,	0.346166,	-1.25532,	2.61755,	0.269248,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	1.32219,	0.136830,	0.492262,	0.215507,	0.346166,	0.156861,	-0.324082,	0.771577,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	1.32219,	0.136830,	0.492262,	0.215507,	0.346166,	0.156861,	-0.324082,	0.771577,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	-1.08985,	-0.334175,	0.568769,	0.268315,	-0.00475130,	-0.773111,	1.33059,	0.771577,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	-1.08985,	0.752760,	-0.0401636,	0.399732,	1.74984,	0.208526,	-0.262798,	-0.00982420,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.669677,	0.839784,	0.336102,	0.159691,	0.509783,	-0.0924807,	0.897394,	-0.936922,	0.269248,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	-2.84528,	0.839784,	-1.54792,	-1.67335,	-2.17136,	-1.34262,	-2.34029,	2.06599,	-0.512154,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	-1.96654,	0.357375,	-0.859526,	-1.42666,	-1.97786,	-1.36456,	-1.06588,	0.472610,	1.27391,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	-1.96654,	-0.125035,	0.136830,	-1.25178,	-1.90933,	-0.333736,	-0.118687,	-0.936922,	-0.512154,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.230308,	1.32219,	-0.0805565,	-0.176002,	0.335636,	-0.596924,	0.432408,	-0.691786,	-0.512154,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.669677,	0.839784,	0.336102,	-0.357121,	0.607338,	-0.421466,	0.242969,	0.0436219,	-0.512154,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.669677,	-1.57226,	-0.370406,	-0.297789,	0.652890,	-0.421466,	-0.256460,	0.717746,	0.771577,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	-1.96654,	0.357375,	-0.859526,	-1.42666,	-1.97786,	-1.36456,	-0.893663,	-0.0789461,	0.994835,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	-1.96654,	0.357375,	0.191177,	-1.21119,	-1.89643,	-0.00475130,	-0.0153563,	-1.61105,	0.269248,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.669677,	1.32219,	-0.171134,	-0.325894,	0.630719,	-0.925910,	0.673512,	-0.324082,	-0.233082,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.669677,	-1.57226,	0.209293,	-0.505451,	0.710939,	0.0391134,	0.00186541,	-0.569218,	-0.735411,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	-1.96654,	-1.08985,	-0.460984,	-1.32985,	-1.93634,	-1.14523,	-0.532008,	-1.05949,	1.99949,	-0.0731974,
 	1.00000,	-0.721437,	0.569309,	-1.96654,	-1.08985,	-0.460984,	-1.32985,	-1.93634,	-1.14523,	-0.583673,	-1.05949,	1.27391,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	-1.96654,	0.839784,	0.191177,	-1.17215,	-1.88313,	-0.267939,	-1.25532,	-0.875638,	1.27391,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	-1.96654,	0.839784,	0.191177,	-1.17215,	-1.88313,	-0.267939,	-0.635338,	-1.05949,	0.492505,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	-1.96654,	-1.57226,	-0.0986721,	-1.11126,	-1.85975,	-0.618857,	-1.42754,	-0.875638,	-0.00982420,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	-0.125035,	0.426680,	-0.555414,	-0.327897,	-0.289872,	0.122417,	-0.507934,	-0.512154,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	-1.57226,	0.154946,	0.539103,	0.242919,	0.368098,	-1.47920,	1.82086,	-1.01448,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	-1.57226,	0.154946,	0.539103,	0.242919,	0.368098,	-0.308125,	-0.0789461,	0.771577,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.669677,	1.32219,	0.317986,	0.206532,	0.535180,	-0.114413,	0.621847,	-0.140230,	0.771577,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.669677,	-1.08985,	-1.13126,	-0.585080,	0.499705,	-1.27683,	-0.170352,	0.0436219,	-0.512154,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.669677,	0.357375,	0.662182,	-0.402401,	0.581941,	1.50858,	0.156861,	0.350042,	0.771577,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	1.10905,	1.32219,	0.354217,	-1.00509,	0.579926,	-0.0486160,	0.294634,	-1.24334,	0.771577,	-0.0731974,
 	1.00000,	-0.721437,	0.569309,	-1.96654,	-1.57226,	-0.551562,	-0.916090,	-1.79041,	-0.882045,	-1.70308,	0.288758,	-1.01448,	-0.0731974,
 	1.00000,	-0.721437,	0.569309,	0.669677,	0.357375,	0.517258,	0.599996,	0.728273,	-0.202142,	-0.290904,	-0.0789461,	-0.512154,	-0.0731974,
 	1.00000,	-0.721437,	0.569309,	1.10905,	-0.607444,	0.136830,	-1.13937,	0.507364,	-0.838180,	-0.514786,	0.104906,	-0.233082,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	1.10905,	1.32219,	0.354217,	-1.00509,	0.579926,	-0.0486160,	-0.600894,	-0.569218,	-1.74007,	-0.0731974,
 	1.00000,	-0.289244,	1.38238,	-2.40591,	0.839784,	-4.06598,	-1.39543,	-1.85733,	-1.80320,	-0.600894,	-0.262798,	-0.735411,	-0.0731974,
 	1.00000,	-0.289244,	1.38238,	-1.96654,	-1.57226,	-0.624024,	-1.35796,	-1.94803,	-1.07944,	-0.841998,	-0.324082,	-0.512154,	-0.0731974,
 	1.00000,	-0.289244,	1.38238,	-1.96654,	1.32219,	-0.243597,	-0.930142,	-1.79686,	0.126843,	-1.42754,	0.104906,	0.492505,	-0.0731974,
 	1.00000,	-0.289244,	1.38238,	0.669677,	-0.125035,	0.553489,	-0.467978,	0.553320,	1.94723,	-0.222017,	-0.140230,	-0.512154,	-0.0731974,
 	1.00000,	-0.721437,	0.569309,	-1.96654,	-1.08985,	-0.460984,	-1.32985,	-1.93634,	-1.14523,	-0.687003,	-0.385366,	-0.735411,	-0.0731974,
 	1.00000,	-0.721437,	0.569309,	0.230308,	0.839784,	0.517258,	0.445421,	0.186482,	2.47360,	-0.222017,	0.472610,	0.994835,	-0.0731974,
 	1.00000,	-0.721437,	1.38238,	0.669677,	1.32219,	0.317986,	0.206532,	0.535180,	-0.114413,	-0.290904,	0.840314,	-1.51681,	-0.0731974,
 	1.00000,	-0.721437,	1.38238,	0.669677,	-1.57226,	0.0462525,	0.244005,	0.558560,	-0.443398,	-0.566451,	1.33059,	-0.512154,	-0.0731974,
 	1.00000,	1.87172,	3.82160,	-0.209062,	-1.08985,	-0.877642,	-0.976983,	-0.945474,	-1.12330,	-0.153130,	-0.140230,	-0.735411,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	0.669677,	-1.08985,	0.0643681,	0.290846,	0.583151,	-0.443398,	0.484073,	-0.385366,	-1.01448,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.669677,	-1.57226,	0.0462525,	0.244005,	0.558560,	-0.443398,	0.518517,	-0.324082,	-1.23774,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.230308,	-0.607444,	0.879569,	-0.171318,	-0.139640,	0.916407,	0.759621,	-0.814354,	0.269248,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	0.357375,	-0.0986721,	-0.0448477,	-0.0731258,	0.762881,	0.397965,	0.411326,	2.72508,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	-0.209062,	0.839784,	-0.116788,	-0.930142,	-1.01441,	-0.0705483,	-0.394234,	0.533894,	0.771577,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.230308,	-0.607444,	0.879569,	-0.171318,	-0.139640,	0.916407,	0.845729,	-0.753070,	0.771577,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.230308,	-0.125035,	0.825222,	0.325196,	0.124402,	0.302301,	1.46571,	-1.36591,	-0.00982420,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	-1.96654,	-1.57226,	-0.0986721,	-1.11126,	-1.85975,	-0.618857,	-0.979772,	-0.262798,	0.771577,	-0.0731974,
 	1.00000,	1.43953,	-1.05684,	0.669677,	-1.08985,	-1.13126,	-0.585080,	0.499705,	-1.27683,	0.914616,	-0.998206,	-0.233082,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.230308,	-1.08985,	0.752760,	-0.0401636,	0.399732,	1.74984,	-0.256460,	-0.0789461,	1.49716,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.669677,	-0.125035,	0.553489,	-0.467978,	0.553320,	1.94723,	0.828507,	-1.18206,	0.269248,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-0.648431,	0.357375,	0.336102,	-0.850513,	-0.462135,	-0.421466,	0.742399,	-0.324082,	0.771577,	-0.0731974,
 	1.00000,	1.87172,	3.82160,	-0.209062,	1.32219,	-0.0986721,	-0.660026,	-0.776970,	-0.399533,	1.01795,	-0.936922,	-1.01448,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	-0.209062,	0.839784,	-0.0986721,	-0.931704,	-0.499222,	-0.618857,	0.983503,	-0.0789461,	-1.23774,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.669677,	0.357375,	0.662182,	-0.402401,	0.581941,	1.50858,	0.208526,	0.166190,	0.492505,	-0.0731974,
 	1.00000,	-1.58582,	0.569309,	0.669677,	0.839784,	0.499142,	0.539103,	0.699249,	-0.202142,	1.84459,	-1.05949,	-0.735411,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.230308,	1.32219,	0.752760,	-0.0401636,	0.399732,	1.74984,	-0.428677,	0.166190,	-1.51681,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.669677,	0.839784,	0.499142,	0.539103,	0.699249,	-0.202142,	1.67237,	-1.05949,	-1.01448,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.230308,	-0.607444,	0.263639,	0.00511597,	0.427950,	0.126843,	-0.0842431,	0.0436219,	-0.233082,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	-0.607444,	0.263639,	0.00511597,	0.427950,	0.126843,	0.277413,	-0.569218,	-0.00982420,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	0.357375,	0.317986,	0.109727,	0.483984,	0.697084,	0.0190871,	-0.630502,	0.994835,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	-1.96654,	-1.57226,	-0.0986721,	-1.11126,	-1.85975,	-0.618857,	-0.480342,	-0.936922,	-0.512154,	-0.0731974,
 	1.00000,	0.575144,	-0.243765,	0.230308,	-0.125035,	0.825222,	0.325196,	0.124402,	0.302301,	0.242969,	-0.201514,	-0.00982420,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	-1.96654,	0.839784,	-0.00809419,	-0.948879,	-1.80412,	-0.267939,	-0.635338,	-0.814354,	2.50182,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.669677,	0.839784,	0.336102,	0.159691,	0.509783,	-0.0924807,	-0.187573,	0.717746,	-1.23774,	-0.0731974,
 	1.00000,	1.43953,	0.569309,	0.669677,	1.32219,	-0.171134,	-0.325894,	0.630719,	-0.925910,	-0.187573,	1.39187,	-1.01448,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-1.96654,	-0.125035,	-1.04068,	-1.44695,	-1.98713,	-1.32069,	-2.34029,	1.57572,	0.269248,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.230308,	-0.607444,	0.263639,	0.00511597,	0.427950,	0.126843,	-0.394234,	0.166190,	-1.74007,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.230308,	-0.607444,	0.970147,	0.253373,	0.0909433,	1.64017,	0.776842,	-0.691786,	0.269248,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-1.96654,	0.357375,	0.100599,	-0.976983,	-1.81460,	0.762881,	-0.738668,	-1.12077,	3.00415,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-0.125035,	0.825222,	0.325196,	0.124402,	0.302301,	0.311856,	0.0436219,	-1.01448,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.669677,	-0.607444,	0.408564,	0.350178,	0.611369,	0.0391134,	0.518517,	-0.569218,	-1.23774,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-0.607444,	-0.913873,	-0.319648,	0.248563,	-0.531127,	-0.256460,	0.350042,	-0.00982420,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.230308,	1.32219,	0.136830,	0.492262,	0.215507,	0.346166,	0.208526,	-0.324082,	0.771577,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.669677,	-1.57226,	0.0462525,	0.244005,	0.558560,	-0.443398,	-0.204795,	-0.324082,	-1.01448,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	0.230308,	0.839784,	-0.0805565,	-0.218159,	0.307418,	-0.0266836,	-0.807555,	0.533894,	-1.23774,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	0.230308,	0.839784,	-0.0805565,	-0.218159,	0.307418,	-0.0266836,	0.242969,	-0.324082,	0.492505,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-1.52717,	-0.125035,	-1.65661,	-1.58904,	-1.98632,	-1.38649,	-2.25418,	0.595178,	0.994835,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.230308,	1.32219,	-0.0805565,	-0.176002,	0.335636,	-0.596924,	0.0535305,	-0.0176621,	-0.735411,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.669677,	-0.607444,	-0.0986721,	-0.436751,	0.756895,	-0.618857,	-0.101465,	0.0436219,	-1.01448,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-1.08985,	-0.334175,	0.568769,	0.268315,	-0.00475130,	-0.773111,	1.33059,	0.771577,	-0.0731974,
 	1.00000,	-1.58582,	-1.05684,	0.669677,	1.32219,	0.317986,	0.206532,	0.535180,	-0.114413,	0.862951,	-0.753070,	1.49716,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	1.10905,	-1.57226,	-1.04068,	-1.21899,	0.468665,	-1.32069,	0.0363088,	-0.753070,	-0.00982420,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	-2.40591,	1.32219,	-0.696486,	-1.48755,	-2.01414,	-1.12330,	-1.11755,	0.533894,	-1.01448,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	1.10905,	-1.57226,	0.191177,	-0.973861,	0.597260,	0.455828,	-0.359790,	0.0436219,	0.269248,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	0.357375,	0.589720,	0.387651,	0.156248,	1.33312,	0.329078,	-0.630502,	0.492505,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.669677,	-1.08985,	0.0643681,	0.290846,	0.583151,	-0.443398,	-0.222017,	0.104906,	-0.512154,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	-1.96654,	1.32219,	-0.243597,	-0.930142,	-1.79686,	0.126843,	-1.27254,	-0.324082,	0.994835,	-0.0731974,
 	1.00000,	-1.58582,	0.569309,	0.669677,	-1.57226,	0.0462525,	0.244005,	0.558560,	-0.443398,	0.363521,	-0.140230,	-1.01448,	-0.0731974,
 	1.00000,	0.575144,	-0.243765,	-1.96654,	0.839784,	0.0281370,	-1.07691,	-1.84846,	-0.246007,	-0.962550,	-0.140230,	-1.74007,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	-1.96654,	1.32219,	0.0100214,	-1.04412,	-1.83636,	-0.772383,	-1.27254,	0.962882,	-0.00982420,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-1.96654,	0.357375,	0.100599,	-0.976983,	-1.81460,	0.762881,	-1.23810,	-0.691786,	-0.00982420,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.230308,	-0.125035,	0.825222,	0.325196,	0.124402,	0.302301,	0.914616,	-0.998206,	-0.735411,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.230308,	-1.08985,	0.752760,	-0.0401636,	0.399732,	1.74984,	0.983503,	-1.36591,	0.269248,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.669677,	-0.607444,	0.408564,	0.350178,	0.611369,	0.0391134,	0.931838,	-1.18206,	-0.00982420,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.230308,	-1.08985,	0.752760,	-0.0401636,	0.399732,	1.74984,	0.983503,	-1.36591,	0.269248,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.230308,	0.357375,	0.589720,	0.387651,	0.156248,	1.33312,	0.794064,	-0.507934,	0.771577,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-1.52717,	-0.125035,	-1.65661,	-1.58904,	-1.98632,	-1.38649,	-2.25418,	0.595178,	0.994835,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.669677,	-0.125035,	0.408564,	0.407948,	0.638781,	0.0391134,	0.449630,	-1.79490,	-1.74007,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.669677,	-1.08985,	0.0643681,	0.290846,	0.583151,	-0.443398,	-0.859220,	0.901598,	1.27391,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.669677,	-1.57226,	-4.91742,	-0.625676,	0.473099,	-1.80320,	0.639069,	-0.385366,	-0.233082,	-0.0731974,
 	1.00000,	-1.58582,	0.569309,	0.669677,	-1.08985,	0.0643681,	0.290846,	0.583151,	-0.443398,	0.466851,	-0.691786,	-1.01448,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-1.96654,	1.32219,	-0.0986721,	-1.14405,	-1.87144,	-0.399533,	-1.11755,	0.595178,	-0.233082,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	-2.40591,	1.32219,	-1.22184,	-1.59528,	-2.07945,	-1.51808,	-1.73753,	1.45315,	-1.01448,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	1.10905,	-0.607444,	0.136830,	-1.13937,	0.507364,	-0.838180,	0.225748,	-0.446650,	-0.735411,	-0.0731974,
 	1.00000,	0.142950,	1.38238,	-1.96654,	0.839784,	-0.00809419,	-0.948879,	-1.80412,	-0.267939,	-0.652559,	1.20802,	-0.00982420,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.669677,	-0.125035,	0.408564,	0.407948,	0.638781,	0.0391134,	0.552960,	-0.630502,	-1.23774,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.230308,	0.839784,	0.517258,	0.445421,	0.186482,	2.47360,	0.690734,	-0.814354,	1.77624,	-0.0731974,
 	1.00000,	1.00734,	0.569309,	0.669677,	-1.08985,	0.0643681,	0.290846,	0.583151,	-0.443398,	0.311856,	-0.446650,	-1.01448,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	0.357375,	0.317986,	0.109727,	0.483984,	0.697084,	0.122417,	-0.691786,	1.27391,	-0.0731974,
 	1.00000,	1.43953,	-1.05684,	0.669677,	-0.125035,	0.553489,	-0.467978,	0.553320,	1.94723,	0.742399,	-1.12077,	0.492505,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	1.10905,	0.839784,	-0.00809419,	-1.04881,	0.560173,	-0.509195,	-0.0842431,	-1.18206,	-0.512154,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.230308,	0.839784,	0.517258,	0.445421,	0.186482,	2.47360,	-2.37473,	3.16911,	0.994835,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	0.357375,	0.662182,	-0.402401,	0.581941,	1.50858,	0.208526,	0.166190,	0.492505,	-0.0731974,
 	1.00000,	1.00734,	-1.05684,	-1.96654,	-1.57226,	-0.551562,	-0.916090,	-1.79041,	-0.882045,	-1.35865,	0.104906,	0.994835,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	-1.96654,	0.839784,	0.191177,	-1.17215,	-1.88313,	-0.267939,	-0.325347,	-1.05949,	0.492505,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	-1.96654,	0.839784,	0.191177,	-1.17215,	-1.88313,	-0.267939,	-0.325347,	-1.05949,	0.492505,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.669677,	1.32219,	0.317986,	0.206532,	0.535180,	-0.114413,	-0.342569,	0.962882,	-1.51681,	-0.0731974,
 	1.00000,	-1.58582,	-1.05684,	0.669677,	-1.57226,	-0.370406,	-0.297789,	0.652890,	-0.421466,	-1.11755,	1.75957,	1.27391,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.669677,	-0.607444,	0.408564,	0.350178,	0.611369,	0.0391134,	0.0879739,	-1.54976,	-1.51681,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-1.96654,	-1.57226,	-0.0986721,	-1.11126,	-1.85975,	-0.618857,	-0.635338,	-1.05949,	-0.512154,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	1.32219,	-0.0805565,	-0.176002,	0.335636,	-0.596924,	-0.463121,	0.901598,	-0.512154,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.669677,	0.357375,	0.481026,	0.473526,	0.669015,	1.06993,	-0.0497997,	0.288758,	-0.233082,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	-1.96654,	-1.57226,	-0.551562,	-0.916090,	-1.79041,	-0.882045,	-1.35865,	0.104906,	0.994835,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	-0.209062,	0.357375,	-0.424752,	0.615610,	-0.959583,	-0.487263,	-0.945328,	2.12728,	-0.233082,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	-0.607444,	-0.0986721,	-0.436751,	0.756895,	-0.618857,	-0.600894,	0.779030,	0.269248,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.669677,	1.32219,	0.517258,	0.599996,	0.728273,	-0.202142,	0.690734,	-0.324082,	0.492505,	-0.0731974,
 	1.00000,	1.00734,	0.569309,	1.10905,	-1.57226,	0.191177,	-0.973861,	0.597260,	0.455828,	-0.480342,	-0.0176621,	-0.00982420,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	0.839784,	0.281755,	-0.453926,	-0.270654,	0.631287,	0.208526,	-0.630502,	0.269248,	-0.0731974,
 	1.00000,	-0.289244,	1.38238,	0.669677,	1.32219,	0.517258,	0.599996,	0.728273,	-0.202142,	1.62071,	-1.12077,	-0.512154,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	0.839784,	0.281755,	-0.453926,	-0.270654,	0.631287,	-0.428677,	-0.0789461,	-0.00982420,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.669677,	-0.607444,	0.408564,	0.350178,	0.611369,	0.0391134,	1.29349,	-1.42719,	0.269248,	-0.0731974,
 	1.00000,	-1.58582,	0.569309,	0.669677,	1.32219,	0.517258,	0.599996,	0.728273,	-0.202142,	1.53460,	-1.05949,	-0.512154,	-0.0731974,
 	1.00000,	0.575144,	-0.243765,	0.669677,	-1.08985,	0.0643681,	0.290846,	0.583151,	-0.443398,	-0.0325780,	-0.0789461,	-0.735411,	-0.0731974,
 	1.00000,	1.87172,	-0.243765,	0.669677,	-1.08985,	-1.13126,	-0.585080,	0.499705,	-1.27683,	0.931838,	-0.507934,	-0.512154,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.669677,	0.839784,	0.336102,	0.159691,	0.509783,	-0.0924807,	-0.204795,	-1.18206,	-0.512154,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	1.32219,	0.136830,	0.492262,	0.215507,	0.346166,	0.122417,	-0.201514,	0.994835,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.669677,	0.839784,	0.336102,	0.159691,	0.509783,	-0.0924807,	-0.118687,	0.104906,	-1.23774,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.669677,	-1.08985,	0.0643681,	0.290846,	0.583151,	-0.443398,	-0.0153563,	-0.262798,	-1.01448,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	0.839784,	0.336102,	0.159691,	0.509783,	-0.0924807,	1.06961,	-1.05949,	-0.00982420,	-0.0731974,
 	1.00000,	1.00734,	0.569309,	-1.52717,	1.32219,	-1.58415,	-1.68428,	-2.17700,	-1.21103,	-0.945328,	1.88214,	-1.23774,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	-1.52717,	-0.607444,	-0.479099,	-1.46257,	-2.03349,	-1.14523,	-0.635338,	0.411326,	-0.735411,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	-1.52717,	0.357375,	-1.38488,	-1.36732,	-1.86499,	-1.47422,	-0.377012,	-1.48848,	-0.512154,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	1.32219,	0.644067,	0.178428,	0.169148,	0.850610,	-0.600894,	1.33059,	-0.00982420,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.230308,	1.32219,	0.209293,	1.00283,	0.615803,	1.04800,	0.518517,	1.75957,	1.99949,	3.30565,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	1.32219,	0.209293,	1.00283,	0.615803,	1.04800,	0.604625,	0.595178,	1.99949,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	1.32219,	0.209293,	1.00283,	0.615803,	1.04800,	1.36238,	-0.385366,	1.27391,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.230308,	1.32219,	0.209293,	1.00283,	0.615803,	1.04800,	1.17294,	-0.324082,	0.771577,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	-0.607444,	0.281755,	-0.300912,	-0.178743,	0.126843,	0.311856,	1.57572,	-1.01448,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-0.607444,	0.444795,	0.724906,	0.478743,	0.982204,	1.68959,	-0.998206,	-0.735411,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	-0.607444,	0.444795,	0.724906,	0.478743,	0.982204,	0.484073,	-0.262798,	-2.01914,	-0.0731974,
 	1.00000,	1.43953,	0.569309,	0.230308,	-0.607444,	0.444795,	0.724906,	0.478743,	0.982204,	1.36238,	-1.18206,	-0.512154,	-0.0731974,
 	1.00000,	1.43953,	0.569309,	0.230308,	-0.607444,	0.444795,	0.724906,	0.478743,	0.982204,	0.880172,	-0.507934,	-0.512154,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.230308,	-0.607444,	0.444795,	0.724906,	0.478743,	0.982204,	0.552960,	-0.446650,	-0.233082,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.230308,	-0.125035,	0.227408,	-0.0261114,	0.0707874,	-0.224075,	0.432408,	-0.385366,	-0.735411,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.230308,	-0.125035,	0.173062,	0.425123,	0.297340,	-0.596924,	0.00186541,	-0.201514,	-0.512154,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.230308,	-0.125035,	-0.569677,	-0.528871,	0.592019,	-0.882045,	0.587403,	0.104906,	-0.00982420,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	0.839784,	0.644067,	0.0987979,	0.133674,	0.433895,	0.862951,	-0.201514,	-1.01448,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.230308,	0.839784,	0.644067,	0.0987979,	0.133674,	0.433895,	0.432408,	-0.0176621,	-0.735411,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	0.839784,	0.209293,	0.937251,	0.581941,	1.02607,	0.294634,	0.901598,	-1.74007,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.230308,	0.839784,	0.209293,	0.937251,	0.581941,	1.02607,	0.828507,	-0.262798,	-1.23774,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	-1.57226,	0.535373,	-0.202546,	-0.0239454,	1.17960,	1.62071,	-0.753070,	-0.00982420,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	0.357375,	0.173062,	0.0238524,	0.101021,	-0.0266836,	-1.32421,	2.43370,	1.99949,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	0.357375,	0.173062,	0.0238524,	0.101021,	-0.0266836,	0.432408,	-0.140230,	-0.512154,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.230308,	0.357375,	0.0824837,	0.471964,	0.327171,	-0.421466,	0.0707522,	-0.324082,	-0.233082,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.230308,	0.357375,	0.662182,	0.885726,	0.550095,	0.872542,	0.501295,	0.533894,	-0.512154,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.230308,	-1.08985,	0.553489,	-0.135407,	0.00951343,	1.22346,	0.552960,	0.595178,	1.99949,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.230308,	-1.08985,	0.662182,	0.325196,	0.238485,	2.99998,	0.0879739,	0.656462,	-0.00982420,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.230308,	-1.08985,	0.263639,	0.651521,	0.444478,	1.15766,	0.828507,	-1.24334,	-0.512154,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	-1.08985,	0.263639,	0.651521,	0.444478,	1.15766,	0.363521,	-0.753070,	-0.512154,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.230308,	-1.08985,	0.263639,	0.651521,	0.444478,	1.15766,	0.0363088,	0.533894,	-0.735411,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.230308,	-1.08985,	0.263639,	0.651521,	0.444478,	1.15766,	0.501295,	0.717746,	-0.512154,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-1.08985,	0.263639,	0.651521,	0.444478,	1.15766,	0.208526,	0.840314,	0.269248,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.230308,	-1.08985,	0.263639,	0.651521,	0.444478,	1.15766,	0.225748,	0.166190,	-0.00982420,	-0.0731974,
 	1.00000,	-0.289244,	1.38238,	1.98778,	1.32219,	-1.13126,	-1.30643,	-0.783823,	-0.487263,	-2.42640,	0.779030,	2.50182,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	1.98778,	-0.607444,	-1.20372,	-1.29706,	-0.779389,	-0.816248,	-2.37473,	1.02417,	2.22275,	-0.0731974,
 	1.00000,	-0.289244,	1.38238,	1.98778,	-0.125035,	-1.09503,	-1.31892,	-0.789870,	-1.54002,	-2.37473,	1.02417,	0.492505,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	1.98778,	-1.57226,	-0.950104,	-1.33454,	-0.799142,	-1.40842,	-2.46084,	-1.42719,	2.50182,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	1.98778,	-1.57226,	-0.950104,	-1.33454,	-0.799142,	-1.40842,	-2.46084,	-1.42719,	2.50182,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	1.98778,	-1.57226,	-0.950104,	-1.33454,	-0.799142,	-1.40842,	-2.46084,	-1.42719,	2.50182,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	1.98778,	-1.57226,	-0.950104,	-1.33454,	-0.799142,	-1.40842,	-2.46084,	-1.42719,	2.50182,	-0.0731974,
 	1.00000,	-0.289244,	1.38238,	1.98778,	0.357375,	-1.07691,	-1.31424,	-0.787451,	-1.07944,	-2.87416,	0.901598,	0.492505,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	1.98778,	-1.08985,	-0.950104,	-1.33454,	-0.799142,	-1.40842,	-2.37473,	-1.24334,	2.50182,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	-2.40591,	1.32219,	-1.04068,	-1.30175,	-0.783823,	-1.23296,	-2.52973,	0.411326,	-0.00982420,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	-2.40591,	-0.607444,	-0.678371,	-1.62807,	-2.13346,	-1.27683,	-1.73753,	-0.569218,	-0.512154,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	-2.40591,	0.357375,	-0.986335,	-1.65462,	-2.14515,	-0.596924,	-1.96141,	0.104906,	2.22275,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	-0.209062,	1.32219,	0.589720,	0.918515,	-0.548805,	0.719016,	0.776842,	-0.262798,	1.27391,	-0.0731974,
 	1.00000,	1.00734,	1.38238,	-0.209062,	-0.607444,	0.100599,	1.12774,	-0.444398,	0.762881,	-1.08310,	2.80140,	1.99949,	0.602572,
 	1.00000,	1.00734,	-0.243765,	-0.209062,	0.839784,	0.173062,	-0.104180,	-0.294438,	-0.00475130,	0.552960,	0.288758,	-0.735411,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	-0.209062,	0.839784,	0.173062,	-0.104180,	-0.294438,	-0.00475130,	0.914616,	-0.753070,	-1.23774,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	-0.209062,	0.839784,	0.173062,	-0.104180,	-0.294438,	-0.00475130,	0.931838,	-0.875638,	-1.23774,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	-0.209062,	0.839784,	0.173062,	-0.104180,	-0.294438,	-0.00475130,	-0.0325780,	0.533894,	-1.23774,	-0.0731974,
 	1.00000,	1.87172,	-0.243765,	-0.209062,	0.839784,	0.173062,	-0.104180,	-0.294438,	-0.00475130,	1.10405,	-0.324082,	-1.74007,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	-0.209062,	0.357375,	0.173062,	-0.166634,	-0.329106,	-0.596924,	0.690734,	-0.262798,	-1.51681,	-0.0731974,
 	1.00000,	1.00734,	1.38238,	-0.209062,	-1.08985,	0.444795,	1.08558,	-0.472213,	0.433895,	1.37960,	-0.998206,	0.771577,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	-0.209062,	-1.08985,	0.299871,	-0.344630,	-0.431498,	-0.114413,	-0.308125,	1.39187,	-0.233082,	-0.0731974,
 	1.00000,	1.00734,	0.569309,	-0.648431,	1.32219,	0.444795,	1.08558,	-0.472213,	0.433895,	0.570182,	0.227474,	-1.51681,	-0.0731974,
 	1.00000,	0.575144,	-0.243765,	-0.648431,	1.32219,	-0.0443254,	-0.333700,	-1.03658,	-0.574992,	-0.790333,	0.104906,	-1.23774,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	-0.648431,	1.32219,	-0.0443254,	-0.333700,	-1.03658,	-0.574992,	-0.600894,	0.0436219,	-1.01448,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	-0.648431,	-0.607444,	0.100599,	0.576576,	-0.688284,	0.806745,	0.122417,	-0.0789461,	0.492505,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-0.648431,	0.839784,	-6.74709,	-0.622553,	-1.26636,	-1.89093,	-1.42754,	2.80140,	-0.735411,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-0.648431,	-1.57226,	-0.0443254,	-0.274369,	-1.00715,	-0.333736,	0.311856,	-1.18206,	0.492505,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-0.648431,	-1.57226,	-0.0443254,	-0.274369,	-1.00715,	-0.333736,	0.0363088,	-0.324082,	0.771577,	-0.0731974,
 	1.00000,	-0.721437,	1.38238,	-0.648431,	0.357375,	0.0824837,	-0.261878,	-1.27321,	-0.421466,	0.0535305,	-0.385366,	0.269248,	-0.0731974,
 	1.00000,	-0.721437,	1.38238,	-0.648431,	0.357375,	0.0824837,	-0.261878,	-1.27321,	-0.421466,	0.0535305,	-0.385366,	0.269248,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-1.08780,	0.839784,	-1.00445,	-1.29394,	-1.75010,	-1.21103,	-1.30698,	3.04654,	0.492505,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	0.669677,	1.32219,	-0.189250,	-0.418014,	0.670627,	-0.728518,	0.0190871,	0.472610,	-1.01448,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	1.32219,	-0.189250,	-0.418014,	0.670627,	-0.728518,	-0.308125,	0.533894,	0.771577,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.669677,	1.32219,	-0.189250,	-0.418014,	0.670627,	-0.728518,	0.845729,	-0.569218,	-0.233082,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.669677,	1.32219,	0.317986,	-0.0791978,	0.847193,	0.192640,	-0.497564,	0.0436219,	-1.23774,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.669677,	1.32219,	0.317986,	-0.0791978,	0.847193,	0.192640,	1.03517,	-1.05949,	-1.01448,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	1.32219,	0.317986,	-0.0791978,	0.847193,	0.192640,	1.10405,	-1.05949,	-0.735411,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	1.32219,	0.317986,	-0.0791978,	0.847193,	0.192640,	1.01795,	-0.998206,	-1.23774,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.669677,	1.32219,	-7.29056,	-1.00977,	0.639587,	-1.89093,	-1.15199,	2.06599,	1.27391,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	-0.607444,	0.354217,	0.0706933,	0.923786,	-0.0486160,	0.931838,	-1.05949,	0.492505,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.669677,	-0.607444,	0.354217,	0.0706933,	0.923786,	-0.0486160,	0.139639,	-0.201514,	-1.23774,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.669677,	-0.607444,	0.100599,	0.372037,	1.08665,	-0.399533,	-0.0670214,	-0.875638,	-0.735411,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.669677,	-0.125035,	0.317986,	-0.229089,	0.771810,	-0.0924807,	-0.0497997,	-1.24334,	0.994835,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.669677,	-0.125035,	0.317986,	-0.229089,	0.771810,	-0.0924807,	0.0535305,	-1.24334,	0.492505,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	-0.125035,	0.390449,	0.126903,	0.949585,	-0.333736,	0.466851,	-1.05949,	-1.01448,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.669677,	-0.125035,	0.390449,	0.126903,	0.949585,	-0.333736,	0.466851,	-0.998206,	1.27391,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	-0.125035,	0.390449,	0.126903,	0.949585,	-0.333736,	0.00186541,	-0.630502,	1.77624,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	0.669677,	-0.125035,	0.390449,	0.126903,	0.949585,	-0.333736,	-0.359790,	-0.998206,	-0.00982420,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	-0.125035,	0.390449,	0.126903,	0.949585,	-0.333736,	-0.359790,	-0.998206,	-0.00982420,	-0.0731974,
 	1.00000,	-0.721437,	0.569309,	0.669677,	-0.125035,	0.0100214,	0.406387,	1.10801,	-0.487263,	-1.03144,	-0.324082,	-0.735411,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	-0.125035,	-0.460984,	-0.898915,	0.721420,	-0.794316,	-0.893663,	0.717746,	-1.23774,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	0.669677,	0.839784,	0.281755,	-0.133846,	0.820587,	-0.136345,	0.914616,	-1.05949,	-0.512154,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.669677,	0.839784,	0.281755,	-0.133846,	0.820587,	-0.136345,	0.897394,	-1.05949,	-0.512154,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	0.839784,	0.281755,	-0.133846,	0.820587,	-0.136345,	0.397965,	-0.753070,	-1.01448,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	0.839784,	0.281755,	-0.133846,	0.820587,	-0.136345,	0.139639,	-0.569218,	-1.23774,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.669677,	0.839784,	0.281755,	-0.133846,	0.820587,	-0.136345,	0.794064,	-1.05949,	-0.00982420,	-0.0731974,
 	1.00000,	-0.721437,	-1.05684,	0.669677,	0.839784,	0.281755,	-0.133846,	0.820587,	-0.136345,	0.914616,	-1.05949,	-0.512154,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	0.839784,	0.100599,	0.211216,	0.997153,	-0.114413,	0.449630,	-0.998206,	0.269248,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.669677,	0.839784,	0.100599,	0.211216,	0.997153,	-0.114413,	-0.308125,	-0.201514,	-1.01448,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	0.669677,	-1.57226,	0.263639,	-0.361805,	0.698039,	0.104910,	-0.135908,	0.595178,	-0.512154,	-0.0731974,
 	1.00000,	-1.15363,	-1.05684,	0.669677,	-1.57226,	0.173062,	-0.0386023,	0.870977,	-0.618857,	-0.153130,	0.411326,	0.771577,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.669677,	-1.57226,	0.173062,	-0.0386023,	0.870977,	-0.618857,	-1.56531,	2.55627,	-1.23774,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	-1.57226,	0.173062,	-0.0386023,	0.870977,	-0.618857,	0.0707522,	-0.0176621,	-1.01448,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	-1.57226,	0.173062,	-0.0386023,	0.870977,	-0.618857,	0.707955,	-0.630502,	-1.01448,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.669677,	-1.57226,	0.173062,	-0.0386023,	0.870977,	-0.618857,	0.656290,	-0.569218,	-1.01448,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.669677,	-1.57226,	0.173062,	-0.0386023,	0.870977,	-0.618857,	0.260191,	-0.201514,	-1.23774,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.669677,	-1.57226,	0.173062,	-0.0386023,	0.870977,	-0.618857,	0.0707522,	-0.0176621,	-1.01448,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.669677,	-1.57226,	0.227408,	0.0129228,	0.896374,	-0.553060,	-0.549229,	0.411326,	-1.01448,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	-1.57226,	0.154946,	0.300214,	1.04472,	-0.333736,	0.294634,	-0.446650,	-1.23774,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.669677,	-1.57226,	0.154946,	0.300214,	1.04472,	-0.333736,	-0.514786,	0.411326,	0.269248,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	-1.57226,	0.154946,	0.300214,	1.04472,	-0.333736,	-1.15199,	1.33059,	0.492505,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.669677,	-1.57226,	0.154946,	0.300214,	1.04472,	-0.333736,	-0.359790,	-0.0789461,	-0.512154,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	0.669677,	-1.57226,	0.154946,	0.300214,	1.04472,	-0.333736,	0.415186,	-0.569218,	-1.01448,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.669677,	0.357375,	0.263639,	-0.185371,	0.795594,	0.126843,	-1.51364,	1.88214,	-0.233082,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.669677,	0.357375,	0.263639,	-0.185371,	0.795594,	0.126843,	-0.256460,	0.779030,	0.269248,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.669677,	0.357375,	0.263639,	-0.185371,	0.795594,	0.126843,	-1.04866,	1.20802,	-0.233082,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.669677,	0.357375,	0.263639,	-0.185371,	0.795594,	0.126843,	-1.51364,	1.88214,	-0.233082,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.669677,	0.357375,	0.263639,	-0.185371,	0.795594,	0.126843,	-0.600894,	0.533894,	1.27391,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	0.357375,	0.263639,	-0.185371,	0.795594,	0.126843,	0.294634,	-0.0789461,	-0.233082,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	0.357375,	0.263639,	-0.185371,	0.795594,	0.126843,	0.156861,	0.166190,	-0.735411,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	0.357375,	0.263639,	-0.185371,	0.795594,	0.126843,	-0.0325780,	0.350042,	-1.01448,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.669677,	0.357375,	0.263639,	-0.185371,	0.795594,	0.126843,	0.329078,	-0.569218,	0.492505,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.669677,	0.357375,	0.263639,	-0.185371,	0.795594,	0.126843,	0.329078,	-0.569218,	0.492505,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	0.357375,	0.336102,	0.173743,	0.974578,	0.258437,	-0.514786,	0.656462,	-0.233082,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	0.669677,	0.357375,	0.336102,	0.173743,	0.974578,	0.258437,	0.139639,	-0.324082,	-0.735411,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	0.669677,	0.357375,	0.336102,	0.173743,	0.974578,	0.258437,	0.380743,	-0.324082,	-1.01448,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	0.357375,	0.336102,	0.173743,	0.974578,	0.258437,	-0.0842431,	-0.140230,	-1.01448,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.669677,	0.357375,	0.336102,	0.173743,	0.974578,	0.258437,	-0.273682,	0.0436219,	-0.00982420,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	0.357375,	-0.442868,	-0.869249,	0.743189,	0.565490,	-0.635338,	1.20802,	-0.512154,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.669677,	-1.08985,	0.227408,	0.0129228,	0.896374,	-0.553060,	-0.514786,	0.533894,	-1.01448,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	-1.08985,	0.227408,	0.0129228,	0.896374,	-0.553060,	0.380743,	-0.569218,	-0.735411,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	-1.08985,	0.227408,	0.0129228,	0.896374,	-0.553060,	0.122417,	0.0436219,	-0.512154,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.669677,	-1.08985,	0.0824837,	0.334564,	1.06488,	0.762881,	-0.514786,	-0.385366,	0.771577,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.669677,	-1.08985,	0.0824837,	0.334564,	1.06488,	0.762881,	-0.428677,	-1.05949,	-0.233082,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	0.839784,	0.100599,	-0.258755,	0.791966,	-0.136345,	-0.359790,	0.166190,	0.492505,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.669677,	1.32219,	0.0643681,	2.58293,	1.11728,	-0.421466,	-0.876442,	2.00471,	1.99949,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	1.32219,	0.0643681,	2.58293,	1.11728,	-0.421466,	-0.876442,	2.00471,	1.99949,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	-0.209062,	-0.607444,	0.227408,	0.354862,	-0.110616,	-0.224075,	-0.807555,	0.840314,	-0.00982420,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.230308,	1.32219,	0.245524,	1.44157,	0.469874,	-0.202142,	-1.46198,	1.88214,	-1.74007,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.230308,	-0.125035,	0.752760,	1.74135,	0.607338,	1.06993,	0.242969,	-0.140230,	-0.735411,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	0.357375,	-0.0624409,	2.79684,	1.23902,	-0.355669,	-1.47920,	2.06599,	-0.00982420,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	0.839784,	0.100599,	-0.258755,	0.791966,	-0.136345,	-0.600894,	0.779030,	0.492505,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-1.57226,	0.263639,	1.50090,	0.502527,	-0.180210,	0.380743,	0.595178,	-1.01448,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.230308,	0.839784,	0.553489,	1.87719,	0.673852,	-0.136345,	0.518517,	-0.140230,	-1.01448,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-1.96654,	-0.125035,	0.0462525,	-1.43602,	-2.08549,	-0.224075,	-1.75475,	0.411326,	0.994835,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	-2.84528,	1.32219,	-13.0332,	-1.71395,	-1.51790,	-1.97866,	-2.35751,	3.41424,	-1.74007,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	-0.209062,	-0.607444,	0.553489,	-0.149459,	-0.359340,	0.631287,	0.0707522,	-0.324082,	1.77624,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-0.125035,	0.0100214,	1.29949,	0.383204,	-0.487263,	-0.463121,	1.14673,	-0.735411,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-0.607444,	0.825222,	1.66797,	0.572670,	1.96916,	1.60348,	-0.936922,	-1.23774,	-0.0731974,
 	1.00000,	1.87172,	1.38238,	0.230308,	-0.125035,	0.173062,	2.14731,	0.829859,	-0.596924,	0.277413,	0.840314,	-0.735411,	-0.0731974,
 	1.00000,	1.43953,	-0.243765,	0.230308,	0.839784,	0.173062,	2.54390,	1.09310,	-0.289872,	0.415186,	-0.0176621,	0.269248,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	1.32219,	0.173062,	1.09963,	0.262269,	-0.311804,	0.346300,	0.350042,	-1.01448,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.669677,	1.32219,	-0.0262098,	-0.221282,	0.816556,	0.521625,	0.294634,	0.656462,	0.771577,	-0.0731974,
 	1.00000,	0.142950,	0.569309,	-1.96654,	-0.125035,	0.0462525,	-1.43602,	-2.08549,	-0.224075,	-1.25532,	0.227474,	0.771577,	-0.0731974,
 	1.00000,	0.575144,	-0.243765,	0.230308,	0.357375,	0.752760,	1.81318,	0.639990,	0.653219,	0.759621,	-0.630502,	-0.512154,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.230308,	0.357375,	0.752760,	1.81318,	0.639990,	0.653219,	0.759621,	-0.630502,	-0.512154,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	-2.40591,	-1.57226,	-1.07691,	-1.58279,	-1.97383,	-1.07944,	-1.96141,	1.63701,	1.27391,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.669677,	0.357375,	0.0824837,	-0.305596,	0.766569,	-0.399533,	0.311856,	0.104906,	-0.735411,	-0.0731974,
 	1.00000,	-1.58582,	-1.05684,	0.669677,	1.32219,	0.0643681,	2.58293,	1.11728,	-0.421466,	0.518517,	-0.0789461,	-0.00982420,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	-1.96654,	-1.08985,	0.499142,	-1.49692,	-2.10565,	0.521625,	-0.635338,	-1.54976,	1.99949,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-2.40591,	-1.57226,	-1.18561,	-1.65930,	-2.02059,	-1.49615,	-2.34029,	1.45315,	-1.23774,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	-2.40591,	1.32219,	-1.02257,	-1.59060,	-1.97947,	-1.21103,	-1.51364,	1.08545,	-1.23774,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.669677,	1.32219,	-0.0262098,	-0.221282,	0.816556,	0.521625,	0.260191,	0.656462,	0.492505,	-0.0731974,
 	1.00000,	0.142950,	1.38238,	0.230308,	1.32219,	0.173062,	1.09963,	0.262269,	-0.311804,	0.931838,	-0.691786,	-0.233082,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.230308,	0.839784,	0.553489,	1.87719,	0.673852,	-0.136345,	1.20738,	-0.753070,	-0.512154,	-0.0731974,
 	1.00000,	1.87172,	0.569309,	-0.648431,	-0.607444,	0.481026,	-0.958247,	-1.00876,	1.09187,	1.56904,	-0.630502,	0.269248,	-0.0731974,
 	1.00000,	1.87172,	0.569309,	-0.648431,	-0.607444,	0.481026,	-0.958247,	-1.00876,	1.09187,	1.56904,	-0.630502,	0.269248,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.669677,	-0.125035,	0.0824837,	-0.353998,	0.740770,	-0.158278,	0.673512,	0.104906,	-0.00982420,	-0.0731974,
 	1.00000,	1.87172,	3.82160,	0.230308,	0.357375,	0.752760,	1.81318,	0.639990,	0.653219,	1.05239,	-0.507934,	-0.00982420,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-0.125035,	0.0100214,	1.29949,	0.383204,	-0.487263,	0.415186,	-0.201514,	-0.233082,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.669677,	-0.607444,	-0.497215,	-0.407085,	0.714164,	-1.16717,	0.501295,	-0.630502,	-1.01448,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.230308,	-1.08985,	0.716529,	1.58053,	0.535986,	0.104910,	1.55182,	-1.05949,	-1.01448,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.669677,	0.839784,	-0.642139,	2.81714,	1.26039,	-1.10137,	-0.325347,	1.39187,	0.492505,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	-2.40591,	0.839784,	-1.07691,	-1.60309,	-1.98713,	-1.34262,	-0.807555,	0.104906,	-0.00982420,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.669677,	0.357375,	-0.0624409,	2.79684,	1.23902,	-0.355669,	0.174082,	-0.0176621,	-0.512154,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	-0.209062,	-1.08985,	0.299871,	-0.229089,	-0.394008,	0.675151,	0.776842,	-0.814354,	0.771577,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	-2.40591,	0.357375,	-1.18561,	-1.61714,	-1.99600,	-1.38649,	-0.721446,	-0.140230,	-0.735411,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	-2.40591,	0.357375,	-1.09503,	-1.68116,	-2.03309,	-1.25489,	-1.84086,	0.533894,	3.00415,	-0.0731974,
 	1.00000,	1.87172,	-0.243765,	-0.209062,	-1.57226,	0.299871,	-0.293105,	-0.426660,	0.170707,	0.673512,	-1.05949,	0.269248,	-0.0731974,
 	1.00000,	1.00734,	0.569309,	0.230308,	0.839784,	0.553489,	1.87719,	0.673852,	-0.136345,	1.29349,	-0.691786,	-0.233082,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.230308,	1.32219,	0.535373,	1.93965,	0.706102,	0.236504,	0.897394,	0.350042,	-0.00982420,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-0.125035,	0.752760,	1.74135,	0.607338,	1.06993,	1.48293,	-1.05949,	0.492505,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	-0.209062,	-1.08985,	0.372333,	0.831079,	0.112309,	-0.0266836,	1.27627,	-0.324082,	-0.512154,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-1.96654,	-0.607444,	0.499142,	-1.46101,	-2.09476,	0.192640,	-0.876442,	-1.24334,	0.994835,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	1.32219,	0.245524,	1.44157,	0.469874,	-0.202142,	1.03517,	-0.140230,	0.771577,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.230308,	1.32219,	0.173062,	1.09963,	0.262269,	-0.311804,	1.01795,	-0.507934,	-0.00982420,	-0.0731974,
 	1.00000,	1.43953,	3.00853,	0.230308,	-0.607444,	0.191177,	1.25733,	0.354583,	-0.267939,	1.25905,	-0.507934,	0.269248,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	-0.607444,	0.825222,	1.66797,	0.572670,	1.96916,	2.05125,	-1.54976,	0.269248,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	-0.209062,	1.32219,	-0.316059,	2.37683,	0.999572,	-0.838180,	1.79292,	-1.05949,	-0.233082,	-0.0731974,
 	1.00000,	-1.58582,	-1.05684,	0.669677,	0.839784,	0.100599,	-0.258755,	0.791966,	-0.136345,	0.587403,	0.227474,	-0.00982420,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	0.839784,	0.553489,	1.87719,	0.673852,	-0.136345,	1.37960,	-0.814354,	-0.233082,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	0.230308,	-0.125035,	0.173062,	2.14731,	0.829859,	-0.596924,	0.260191,	0.717746,	-1.01448,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-0.125035,	0.173062,	2.14731,	0.829859,	-0.596924,	0.260191,	0.717746,	-1.01448,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	-1.57226,	0.263639,	1.50090,	0.502527,	-0.180210,	1.55182,	-0.691786,	-1.01448,	-0.0731974,
 	1.00000,	-1.58582,	-1.05684,	0.230308,	-0.125035,	0.752760,	1.74135,	0.607338,	1.06993,	1.25905,	-0.630502,	0.994835,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	1.32219,	0.173062,	1.09963,	0.262269,	-0.311804,	0.983503,	-0.0176621,	-0.00982420,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	-0.125035,	-0.171134,	2.75312,	1.21484,	-0.487263,	0.0879739,	0.0436219,	-0.233082,	-0.0731974,
 	1.00000,	-1.58582,	-1.05684,	0.230308,	0.839784,	0.263639,	1.04811,	0.231228,	0.126843,	0.759621,	-0.262798,	-0.00982420,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-0.125035,	0.752760,	1.74135,	0.607338,	1.06993,	0.862951,	-0.385366,	1.49716,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	1.32219,	0.535373,	1.93965,	0.706102,	0.236504,	0.346300,	1.33059,	0.492505,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	0.230308,	0.357375,	-0.00809419,	2.48144,	1.06125,	-0.772383,	0.570182,	0.0436219,	-0.233082,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	-0.209062,	0.839784,	0.0281370,	-0.408646,	-0.690703,	-0.750451,	0.845729,	0.411326,	-1.23774,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-1.57226,	0.263639,	1.50090,	0.502527,	-0.180210,	1.36238,	-0.569218,	-1.51681,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	0.839784,	-0.225481,	2.22850,	0.888714,	0.148775,	-0.807555,	1.75957,	-0.735411,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.230308,	0.839784,	0.553489,	1.87719,	0.673852,	-0.136345,	0.811286,	0.533894,	-0.00982420,	-0.0731974,
 	1.00000,	-1.58582,	-1.05684,	0.669677,	0.357375,	0.0824837,	-0.305596,	0.766569,	-0.399533,	0.0363088,	0.104906,	-1.01448,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.669677,	0.357375,	-0.0624409,	2.79684,	1.23902,	-0.355669,	-0.463121,	0.840314,	-0.233082,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	-1.57226,	0.263639,	1.50090,	0.502527,	-0.180210,	1.13850,	-0.936922,	-1.23774,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-1.52717,	-1.57226,	-0.497215,	-1.34234,	-2.04115,	-1.16717,	-1.37587,	1.20802,	-0.512154,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	-0.209062,	0.357375,	0.0100214,	-0.467978,	-0.724162,	1.70597,	-0.704225,	2.06599,	2.22275,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.669677,	0.357375,	-0.0624409,	2.79684,	1.23902,	-0.355669,	-0.463121,	0.840314,	-0.233082,	-0.0731974,
 	1.00000,	0.142950,	0.569309,	0.230308,	1.32219,	0.607835,	-0.983229,	-1.80291,	0.368098,	-0.273682,	2.18856,	0.269248,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.230308,	1.32219,	0.245524,	1.44157,	0.469874,	-0.202142,	0.0363088,	1.57572,	-1.01448,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	-1.96654,	-0.607444,	0.499142,	-1.46101,	-2.09476,	0.192640,	-1.72031,	-0.569218,	2.22275,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.669677,	-0.607444,	-0.171134,	2.71721,	1.19347,	0.236504,	-1.44476,	2.00471,	-0.00982420,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.230308,	1.32219,	0.173062,	1.09963,	0.262269,	-0.311804,	0.0707522,	1.02417,	0.492505,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.230308,	-0.607444,	0.825222,	1.66797,	0.572670,	1.96916,	0.776842,	0.288758,	0.771577,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	0.230308,	0.357375,	-0.0262098,	1.34165,	0.411019,	1.59631,	-1.22088,	2.67883,	0.492505,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.230308,	-1.57226,	0.154946,	1.98805,	0.736336,	-0.333736,	-0.204795,	1.26930,	-0.00982420,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.230308,	-0.125035,	-0.225481,	2.42523,	1.02940,	-0.750451,	-0.256460,	0.595178,	-0.512154,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	-0.125035,	0.173062,	2.14731,	0.829859,	-0.596924,	-0.359790,	0.717746,	-0.512154,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	-0.209062,	-1.57226,	0.716529,	0.767063,	0.0776404,	1.68404,	-0.170352,	0.227474,	-0.735411,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	-0.125035,	0.173062,	2.14731,	0.829859,	-0.596924,	-0.394234,	0.901598,	-0.735411,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	0.230308,	-0.607444,	0.191177,	1.25733,	0.354583,	-0.267939,	0.174082,	0.350042,	-0.00982420,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	0.839784,	0.553489,	1.87719,	0.673852,	-0.136345,	0.00186541,	1.20802,	0.492505,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.230308,	0.839784,	0.173062,	2.54390,	1.09310,	-0.289872,	-0.583673,	1.69829,	2.22275,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.230308,	0.839784,	0.553489,	1.87719,	0.673852,	-0.136345,	0.00186541,	1.20802,	0.492505,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	0.839784,	0.553489,	1.87719,	0.673852,	-0.136345,	0.00186541,	1.20802,	0.492505,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	0.669677,	1.32219,	0.0643681,	2.58293,	1.11728,	-0.421466,	-0.755890,	1.94343,	1.99949,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-2.40591,	-1.08985,	-2.81601,	-1.66242,	-2.14354,	-1.56195,	-2.46084,	2.31113,	1.27391,	-0.0731974,
 	1.00000,	0.575144,	-0.243765,	-2.40591,	-1.08985,	-2.81601,	-1.66242,	-2.14354,	-1.56195,	-2.37473,	2.00471,	0.771577,	-0.0731974,
 	1.00000,	-1.15363,	-1.86991,	-2.40591,	0.839784,	-2.01892,	-1.67491,	-2.14717,	-1.58388,	-2.46084,	0.901598,	-1.74007,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-1.96654,	-1.57226,	-0.624024,	-1.49536,	-2.06010,	-0.421466,	-1.49642,	0.0436219,	0.994835,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	-1.96654,	-0.607444,	-0.0805565,	-1.44227,	-2.04316,	-0.377601,	-1.32421,	-0.201514,	0.771577,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	-1.96654,	-0.125035,	0.118715,	-1.40948,	-2.03349,	-0.114413,	-0.962550,	-1.05949,	-0.233082,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	-1.52717,	1.32219,	0.0643681,	-1.50316,	-2.10565,	0.719016,	-0.893663,	-0.691786,	3.00415,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	-1.52717,	1.32219,	0.0643681,	-1.50316,	-2.10565,	0.719016,	-0.222017,	-1.05949,	0.994835,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	-1.08780,	0.357375,	-0.189250,	-1.33454,	-1.91175,	-0.728518,	-0.153130,	-0.262798,	-0.00982420,	-0.0731974,
 	1.00000,	1.43953,	-1.05684,	-0.648431,	-1.57226,	-0.442868,	-0.229089,	-1.28571,	-0.947842,	-0.790333,	2.12728,	-0.00982420,	-0.0731974,
 	1.00000,	1.87172,	-0.243765,	-0.648431,	0.839784,	-0.0262098,	-0.777128,	-1.19057,	0.0829781,	0.966281,	0.350042,	-0.512154,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	-0.648431,	-0.125035,	0.426680,	-0.110425,	-0.932171,	0.390031,	1.29349,	-0.569218,	-0.735411,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	-0.648431,	-0.125035,	0.553489,	0.169059,	-0.797126,	1.96916,	0.656290,	-0.262798,	3.00415,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	-0.209062,	-0.125035,	0.517258,	-0.399278,	-0.616529,	0.192640,	1.43127,	-0.998206,	-1.51681,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	-0.209062,	1.32219,	0.553489,	-0.149459,	-0.502044,	1.24539,	1.24183,	0.0436219,	-0.00982420,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	-0.209062,	1.32219,	0.553489,	-0.149459,	-0.502044,	1.24539,	-0.118687,	2.31113,	0.269248,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	-0.209062,	-1.57226,	-0.261712,	-0.108864,	-0.468988,	-0.574992,	0.639069,	0.779030,	0.492505,	-0.0731974,
 	1.00000,	1.87172,	3.82160,	-0.209062,	-0.125035,	0.462911,	0.0550797,	0.0486159,	0.104910,	1.94792,	-1.18206,	0.269248,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	-0.209062,	-0.125035,	0.462911,	0.0550797,	0.0486159,	0.104910,	1.94792,	-1.36591,	0.492505,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	1.32219,	0.770876,	0.303337,	0.157861,	1.11380,	0.776842,	-0.262798,	0.994835,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	1.32219,	0.770876,	0.303337,	0.157861,	1.11380,	2.08569,	-1.05949,	0.771577,	-0.0731974,
 	1.00000,	-1.15363,	0.569309,	0.230308,	1.32219,	0.770876,	0.303337,	0.157861,	1.11380,	2.44735,	-1.18206,	-0.00982420,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	-1.57226,	0.788991,	0.384528,	0.194948,	2.69293,	2.01681,	-0.998206,	-0.233082,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.230308,	-1.08985,	0.807107,	0.475087,	0.233244,	1.90336,	0.897394,	-0.0789461,	1.27391,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.230308,	-1.08985,	0.807107,	0.475087,	0.233244,	1.90336,	1.29349,	-0.630502,	-0.233082,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.230308,	-1.08985,	0.807107,	0.475087,	0.233244,	1.90336,	0.0879739,	1.63701,	1.99949,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.230308,	-0.607444,	0.807107,	0.475087,	0.233244,	1.90336,	0.294634,	0.840314,	-1.51681,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.230308,	-0.607444,	0.807107,	0.475087,	0.233244,	1.90336,	1.68959,	-0.691786,	-0.00982420,	-0.0731974,
 	1.00000,	-0.289244,	-0.243765,	0.230308,	-0.125035,	0.933916,	0.642153,	0.307015,	1.04800,	2.32680,	-1.42719,	0.269248,	-0.0731974,
 	1.00000,	-1.58582,	-1.05684,	0.230308,	0.357375,	0.952031,	0.735835,	0.345311,	0.499693,	2.32680,	-1.05949,	-1.01448,	-0.0731974,
 	1.00000,	-1.58582,	-1.05684,	0.230308,	0.357375,	0.952031,	0.735835,	0.345311,	0.499693,	1.48293,	-0.936922,	0.269248,	-0.0731974,
 	1.00000,	0.575144,	1.38238,	0.230308,	0.839784,	0.970147,	0.829517,	0.383204,	1.09187,	2.05125,	-0.875638,	0.492505,	-0.0731974,
 	1.00000,	0.575144,	1.38238,	0.230308,	-1.57226,	1.00638,	1.00907,	0.458990,	1.70597,	0.862951,	-0.140230,	-1.01448,	-0.0731974,
 	1.00000,	-0.289244,	0.569309,	0.230308,	-1.57226,	1.00638,	1.00907,	0.458990,	1.70597,	2.36124,	-1.12077,	-0.512154,	-0.0731974,
 	1.00000,	-0.721437,	-0.243765,	0.230308,	-1.08985,	0.988263,	1.09651,	0.496883,	1.15766,	2.30957,	-1.05949,	-1.01448,	-0.0731974,
 	1.00000,	0.575144,	0.569309,	0.230308,	-1.08985,	0.988263,	1.09651,	0.496883,	1.15766,	2.48179,	-1.12077,	-0.735411,	-0.0731974,
 	1.00000,	1.00734,	0.569309,	0.230308,	-1.08985,	0.988263,	1.09651,	0.496883,	1.15766,	1.44849,	1.14673,	0.492505,	21.5514,
 	1.00000,	1.43953,	1.38238,	0.230308,	-1.08985,	0.988263,	1.09651,	0.496883,	1.15766,	0.466851,	1.26930,	0.492505,	2.62988,
 	1.00000,	1.00734,	0.569309,	0.230308,	-1.08985,	0.988263,	1.09651,	0.496883,	1.15766,	0.466851,	1.26930,	0.492505,	2.62988,
 	1.00000,	-0.289244,	-0.243765,	0.230308,	-1.08985,	0.988263,	1.09651,	0.496883,	1.15766,	0.311856,	1.51444,	0.492505,	1.27834,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	-0.607444,	0.698413,	0.445421,	0.569042,	2.40781,	1.77570,	-0.875638,	0.492505,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.230308,	-0.607444,	0.698413,	0.445421,	0.569042,	2.40781,	1.72404,	-0.936922,	0.492505,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.230308,	-0.125035,	0.0643681,	0.817026,	0.791966,	0.236504,	1.34516,	-0.569218,	-1.23774,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.230308,	0.357375,	0.0643681,	0.874797,	0.825022,	-0.421466,	-0.0670214,	1.75957,	2.50182,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	0.357375,	0.0643681,	0.874797,	0.825022,	-0.421466,	1.20738,	-0.201514,	-0.233082,	-0.0731974,
 	1.00000,	-1.58582,	-1.86991,	0.230308,	0.357375,	0.0643681,	0.874797,	0.825022,	-0.421466,	1.20738,	-0.201514,	-0.233082,	-0.0731974,
 	1.00000,	0.142950,	-0.243765,	0.230308,	0.357375,	0.0643681,	0.874797,	0.825022,	-0.421466,	0.380743,	1.63701,	1.99949,	4.65719,
 	1.00000,	0.575144,	0.569309,	0.230308,	0.357375,	0.0643681,	0.874797,	0.825022,	-0.421466,	-0.118687,	1.08545,	0.771577,	-0.0731974,
 	1.00000,	1.43953,	1.38238,	0.230308,	1.32219,	-1.63850,	-0.845829,	0.474309,	-1.56195,	1.53460,	-0.569218,	-0.735411,	-0.0731974,
 	1.00000,	-0.289244,	-1.05684,	0.230308,	1.32219,	-1.63850,	-0.845829,	0.474309,	-1.56195,	1.53460,	-0.753070,	-0.735411,	-0.0731974,
 	1.00000,	-1.15363,	-0.243765,	0.230308,	1.32219,	-1.63850,	-0.845829,	0.474309,	-1.56195,	0.518517,	1.63701,	0.994835,	-0.0731974,
 	1.00000,	1.00734,	-0.243765,	0.230308,	1.32219,	-1.63850,	-0.845829,	0.474309,	-1.56195,	0.397965,	1.57572,	1.49716,	-0.0731974,
 	1.00000,	-1.58582,	-0.243765,	0.230308,	0.839784,	0.680298,	0.548471,	0.269122,	0.499693,	1.15572,	-0.140230,	-0.00982420,	-0.0731974,
 	1.00000,	0.575144,	-1.05684,	1.54842,	-1.08985,	-2.01892,	-1.68428,	-1.77872,	-1.73741,	-1.22088,	-0.814354,	0.269248,	-0.0731974) 
 scaled y = 
MatrixD(0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.307485,
 	0.357674,
 	0.385262,
 	0.438255,
 	0.476234,
 	0.536493,
 	0.570980,
 	0.641854,
 	0.667829,
 	0.672944,
 	0.727549,
 	0.751416,
 	0.783902,
 	0.858662,
 	0.887891,
 	0.900161,
 	0.900161,
 	0.940007,
 	0.959350,
 	0.966984,
 	0.970779,
 	0.989541,
 	1.01160,
 	1.06471,
 	1.07841,
 	1.08181,
 	1.10194,
 	1.14422,
 	1.19089,
 	1.25562,
 	1.26130,
 	1.26695,
 	1.27257,
 	1.30563,
 	1.31909,
 	1.40364,
 	1.50408,
 	1.71019,
 	1.72455,
 	1.73871,
 	1.77156,
 	1.82938,
 	1.84530,
 	1.86253,
 	1.99877,
 	2.05796,
 	2.07443,
 	2.08443,
 	2.10291,
 	2.11626,
 	2.12823,
 	2.22354,
 	2.23109,
 	2.27006,
 	2.27316,
 	2.34277,
 	2.39880,
 	2.39971,
 	2.47906,
 	2.48989,
 	2.50471,
 	2.51122,
 	2.52813,
 	2.57261,
 	2.64262,
 	2.68785,
 	2.70738,
 	2.74535,
 	2.80033,
 	2.90142,
 	3.00717,
 	3.19499,
 	3.22803,
 	3.29584,
 	3.30064,
 	3.34463,
 	3.38980,
 	3.38980,
 	3.41707,
 	3.44426,
 	3.48799,
 	3.49226,
 	3.49863,
 	3.60767,
 	3.63363,
 	3.63811,
 	3.65610,
 	3.90298,
 	3.91940,
 	4.08261,
 	4.17592,
 	4.28082,
 	4.49413,
 	4.56622,
 	4.64813,
 	4.66965,
 	5.04909,
 	5.28564,
 	5.30797,
 	5.36542,
 	6.99562,
 	0.00000,
 	0.00000,
 	0.00000,
 	2.40964,
 	0.00000,
 	1.35325,
 	0.565314,
 	0.0861777,
 	0.559616,
 	0.00000,
 	1.24415,
 	0.518794,
 	0.215111,
 	0.190620,
 	0.924259,
 	2.42834,
 	0.00000,
 	2.19944,
 	0.518794,
 	0.00000,
 	0.867100,
 	2.28747,
 	1.45862,
 	1.65823,
 	0.940007,
 	2.02022,
 	0.582216,
 	0.157004,
 	0.00000,
 	0.00000,
 	1.68640,
 	0.418710,
 	2.32923,
 	1.40854,
 	2.30058,
 	2.50062,
 	1.85317,
 	2.93651,
 	2.46215,
 	3.13680,
 	2.37676,
 	2.32923,
 	3.24921,
 	0.00000,
 	0.741937,
 	3.22843,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	2.19722,
 	1.29198,
 	4.47107,
 	2.02419,
 	0.00000,
 	0.641854,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	1.50851,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.343590,
 	1.82132,
 	0.00000,
 	0.00000,
 	0.00000,
 	2.72720,
 	0.00000,
 	0.00000,
 	0.947789,
 	0.00000,
 	0.00000,
 	1.56444,
 	0.00000,
 	1.68825,
 	3.56558,
 	2.10535,
 	0.698135,
 	1.15688,
 	1.69010,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	1.46557,
 	2.02551,
 	2.81181,
 	2.50307,
 	1.14103,
 	0.00000,
 	0.00000,
 	0.00000,
 	4.04375,
 	2.13771,
 	0.904218,
 	1.59534,
 	0.00000,
 	0.00000,
 	1.15688,
 	1.96009,
 	1.92132,
 	3.37383,
 	0.00000,
 	0.00000,
 	0.970779,
 	1.54969,
 	2.11746,
 	1.10856,
 	1.00063,
 	1.94162,
 	2.64333,
 	0.815365,
 	0.00000,
 	0.00000,
 	2.21047,
 	0.737164,
 	1.59737,
 	0.418710,
 	1.36864,
 	1.89462,
 	3.04595,
 	1.01160,
 	0.00000,
 	2.61301,
 	0.00000,
 	2.48989,
 	0.00000,
 	0.00000,
 	0.00000,
 	2.96011,
 	3.69759,
 	0.00000,
 	5.16838,
 	0.00000,
 	0.00000,
 	2.16677,
 	2.85244,
 	1.92571,
 	3.78123,
 	2.57870,
 	2.83321,
 	3.24220,
 	0.00000,
 	3.39249,
 	0.00000,
 	2.39425,
 	3.43978,
 	4.27333,
 	0.00000,
 	0.00000,
 	3.96613,
 	1.53471,
 	1.53256,
 	0.00000,
 	0.00000,
 	2.21485,
 	1.78339,
 	0.00000,
 	0.00000,
 	1.95161,
 	0.00000,
 	1.59939,
 	0.00000,
 	2.17475,
 	0.00000,
 	0.00000,
 	1.72633,
 	0.966984,
 	0.00000,
 	0.00000,
 	6.61644,
 	2.08194,
 	0.00000,
 	1.23547,
 	1.39872,
 	5.22982,
 	0.00000,
 	1.98787,
 	0.542324,
 	1.78507,
 	0.00000,
 	0.00000,
 	1.20896,
 	0.00000,
 	1.43508,
 	0.00000,
 	1.99606,
 	0.00000,
 	2.79362,
 	0.00000,
 	0.00000,
 	0.431782,
 	0.00000,
 	2.00553,
 	0.285179,
 	0.00000,
 	0.802002,
 	1.47018,
 	0.00000,
 	2.39425,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	2.00553,
 	2.37118,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	4.42784,
 	1.46326,
 	1.07841,
 	0.00000,
 	0.00000,
 	1.54969,
 	1.85473,
 	1.14422,
 	2.05924,
 	1.43031,
 	1.87947,
 	2.02946,
 	4.12923,
 	0.00000,
 	3.67579,
 	1.07841,
 	4.26718,
 	2.40514,
 	1.43270,
 	1.01523,
 	2.12346,
 	1.16627,
 	5.63311,
 	1.32176,
 	0.00000,
 	0.828552,
 	0.00000,
 	3.31164,
 	1.12168,
 	1.09861,
 	2.85647,
 	3.86493,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	3.79144,
 	2.26072,
 	0.00000,
 	1.32708,
 	2.75239,
 	3.72666,
 	2.46979,
 	0.00000,
 	0.00000,
 	0.00000,
 	1.08181,
 	3.92375,
 	1.91692,
 	0.00000,
 	0.00000,
 	0.00000,
 	1.15373,
 	0.357674,
 	0.00000,
 	2.00687,
 	4.01259,
 	2.49815,
 	0.00000,
 	0.00000)
auto_optimize: etaI = (2.5E-4,0.004)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 2.5E-4, result = (993.6445588416168,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 4.84375E-4, result = (988.1684316555294,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 7.1875E-4, result = (983.7027004857888,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 9.53125E-4, result = (979.7101335521812,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.0011875, result = (976.5540775331331,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.001421875, result = (973.9922984108241,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.00165625, result = (971.9923412200336,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.001890625, result = (970.5040387195829,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.002125, result = (969.3587967968068,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.0023593750000000004, result = (968.441628852444,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.0025937499999999997, result = (967.797240503025,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.002828125, result = (967.3928359309954,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.0030625, result = (967.2845554801885,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.0032968750000000003, result = (966.8940235385254,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.0035312499999999997, result = (966.7801939348074,390)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.003765625, result = (966.7801939348074,-3)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.004, result = (967.259904609105,400)
ending epoch = (966.7801939348074,390)

REPORT
    ----------------------------------------------------------------------------
    modelName  mn  = NeuralNet_3L_reLU
    ----------------------------------------------------------------------------
    hparameter hp  = HyperParameter (HashMap(lambda -> (0.01,0.01), maxEpochs -> (400,400), eta -> (0.1,0.1), nu -> (0.9,0.9), upLimit -> (4,4), beta -> (0.9,0.9), bSize -> (20,20)))
    ----------------------------------------------------------------------------
    features   fn  = Array(intercept, X, Y, month, day, FFMC, DMC, DC, ISI, temp, RH, wind, rain)
    ----------------------------------------------------------------------------
    parameter  bb  = Array(b.w = 
MatrixD(0.205288,	0.164031,	0.0216932,	0.179030,	0.0864424,	0.0282881,	0.155351,	0.271541,	0.257833,	0.241514,	0.118622,	0.00604233,	0.0500913,	0.168740,	0.213478,	0.221718,	0.265344,	0.0983079,	0.126020,	0.106732,	0.159802,	0.129779,	0.0621401,	0.0391488,	-0.00964686,	0.142443,	0.187291,
 	0.107506,	0.0213510,	0.248626,	0.140355,	0.121153,	0.253490,	0.191885,	0.231277,	0.0852420,	0.220529,	0.234156,	-0.0236387,	0.124051,	0.0267162,	0.0907811,	0.188993,	0.134105,	0.0791713,	0.160342,	0.0452632,	0.184333,	0.110454,	0.0771058,	0.0565545,	0.0758030,	0.261152,	0.231560,
 	0.105899,	0.202708,	0.224591,	0.104687,	0.350497,	0.0380637,	0.163746,	0.124284,	0.0581712,	0.0970998,	0.0492220,	0.0340065,	0.149625,	0.203664,	0.143134,	-0.0214936,	-0.00568798,	0.0825549,	0.121247,	0.156484,	0.140804,	0.213457,	0.100899,	0.177173,	0.276785,	0.222040,	0.249210,
 	0.370470,	0.127294,	0.270848,	0.0812856,	-0.103548,	0.313730,	0.382070,	0.0722359,	0.176636,	0.516010,	0.172368,	0.0766052,	-0.0643467,	0.220096,	-0.0103371,	0.238466,	0.107281,	0.225083,	0.120645,	0.111742,	0.112887,	0.144075,	0.162867,	0.107577,	0.0622063,	0.198204,	0.205602,
 	0.0851643,	0.185236,	0.240563,	0.176959,	0.220190,	0.0714330,	-0.00673657,	0.129082,	-0.000750221,	0.130380,	0.0826338,	0.218292,	0.273061,	0.0243208,	0.0639596,	0.0953984,	0.0482332,	0.206319,	0.231354,	0.146430,	0.240307,	0.191093,	0.0959575,	0.236062,	0.158210,	0.211950,	0.239242,
 	0.238605,	0.0930181,	0.236088,	0.227430,	0.171713,	0.167624,	0.210068,	0.0111655,	0.189923,	0.375900,	0.0129898,	0.201729,	0.130860,	0.255808,	0.200767,	0.218471,	0.182237,	0.289554,	0.111183,	0.132549,	0.00616568,	0.152718,	0.0629936,	0.194529,	0.114752,	0.167416,	0.0453545,
 	0.194323,	0.216567,	0.0403513,	0.0978982,	0.0971245,	0.0333256,	0.108558,	0.0265283,	0.0279106,	0.283875,	0.0114216,	0.0812311,	0.206952,	0.114963,	-0.0211568,	0.256450,	0.0969459,	0.112315,	0.248841,	0.153682,	0.210090,	0.157195,	0.173498,	0.267179,	0.159618,	0.172748,	0.101033,
 	0.0290090,	0.202012,	0.0768567,	0.0376241,	0.408797,	-0.0150518,	-0.105290,	0.163651,	-0.0638805,	-0.0355532,	0.249134,	0.221113,	0.346964,	0.120847,	0.284873,	0.156005,	0.177753,	0.0857521,	0.182000,	0.0662360,	-0.0177232,	0.0924341,	0.0805446,	0.0717302,	0.160217,	0.0748751,	0.0924604,
 	0.0746084,	0.0825831,	0.286024,	-0.0343100,	0.192610,	0.0838065,	-0.199249,	0.0760148,	-0.0593480,	-0.168785,	0.134118,	0.0940546,	0.325817,	0.136648,	0.0321359,	-0.0927554,	-0.0123189,	-0.0279540,	0.0590978,	0.0542472,	0.0813387,	0.304781,	0.0596418,	0.186795,	0.255961,	-0.00272462,	0.127689,
 	0.200494,	0.262508,	0.200588,	0.220574,	0.0917549,	-0.00771826,	-0.0558361,	0.211909,	0.132748,	0.0671207,	0.243321,	0.180660,	0.246404,	0.173910,	0.0682045,	0.144707,	0.117975,	0.185680,	0.0830823,	0.182720,	0.0988353,	0.151001,	0.0879242,	0.222346,	0.0921128,	0.0710050,	0.0457092,
 	-0.0208815,	0.240901,	0.0377657,	0.233105,	0.304785,	0.0755373,	0.00944175,	0.0969758,	0.166361,	-0.0848632,	0.181097,	0.247292,	0.329301,	0.0511629,	0.0831783,	0.122521,	0.0534967,	0.0541015,	0.217539,	0.171967,	0.194637,	0.204386,	0.179229,	0.247410,	0.167187,	0.248298,	0.0714878,
 	0.212974,	0.243836,	0.0527800,	0.135901,	-0.0536966,	0.161200,	0.190248,	0.232037,	0.170473,	0.172932,	0.110356,	0.0188382,	0.0461775,	0.127034,	0.0234987,	0.246236,	0.172471,	0.297283,	0.143512,	0.117368,	0.311921,	0.201719,	0.0536029,	0.158450,	0.136616,	0.240413,	0.194616,
 	0.0716540,	0.230567,	0.203549,	0.0665809,	0.263064,	0.0459067,	0.0233503,	0.224464,	0.115261,	0.187608,	0.0351226,	0.203557,	0.227349,	0.263455,	0.0126406,	0.0342610,	0.150615,	0.0288485,	0.110893,	0.241353,	0.0273838,	0.206904,	0.171802,	0.0458552,	0.100783,	0.0947956,	0.227176) 
 b.b = VectorD(0.144808,	0.112073,	0.0127298,	0.124743,	0.0516815,	0.0203269,	0.114383,	0.189113,	0.181362,	0.173758,	0.0808827,	0.000365404,	0.0282791,	0.116855,	0.146837,	0.154722,	0.185006,	0.0686948,	0.0848554,	0.0730015,	0.110699,	0.0864440,	0.0413069,	0.0247758,	-0.0120041,	0.0968867,	0.129654), b.w = 
MatrixD(0.148255,
 	0.0218805,
 	0.101638,
 	0.0783784,
 	-0.293305,
 	0.113806,
 	0.355734,
 	-0.0337138,
 	0.0618263,
 	0.358635,
 	-0.0540848,
 	-0.00973653,
 	-0.0546973,
 	0.0717775,
 	-0.180037,
 	-0.0350019,
 	-0.0654713,
 	0.0435270,
 	-0.0629805,
 	0.0732109,
 	0.0174073,
 	-0.0468637,
 	0.0174754,
 	0.115837,
 	-0.118576,
 	-0.0958760,
 	0.0155927) 
 b.b = VectorD(0.849516))
    ----------------------------------------------------------------------------
    fitMap     qof = 
		rSq 	 -> VectorD(0.0414642) 
		rSqBar 	 -> VectorD(0.0167401) 
		sst 	 -> VectorD(1009.10) 
		sse 	 -> VectorD(967.260) 
		mse0 	 -> VectorD(1.87091) 
		rmse 	 -> VectorD(1.36781) 
		mae 	 -> VectorD(1.12190) 
		dfm 	 -> VectorD(13.0000) 
		df 	 -> VectorD(504.000) 
		fStat 	 -> VectorD(1.67708) 
		aic 	 -> VectorD(-867.522) 
		bic 	 -> VectorD(-808.049) 
		mape 	 -> VectorD(Infinity) 
		smape 	 -> VectorD(129.176) 

    ----------------------------------------------------------------------------
        
Run + title
--------------------
| Cross-Validation |
--------------------
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (700.1763937982425,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.156488,
 	0.0324958,
 	0.122222,
 	0.0905222,
 	-0.299997,
 	0.113098,
 	0.361361,
 	-0.0437267,
 	0.0622603,
 	0.347118,
 	-0.0596073,
 	0.00379341,
 	-0.0414806,
 	0.0918593,
 	-0.196321,
 	-0.0847929,
 	-0.0997572,
 	0.0282821,
 	-0.0904181,
 	0.0849661,
 	0.0171895,
 	-0.0480249,
 	0.0186312,
 	0.138224,
 	-0.125536,
 	-0.135409,
 	0.00933356) 
 b.b = VectorD(0.857446)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.00341644,
 	-0.0292982,
 	260.341,
 	261.231,
 	2.53622,
 	1.59255,
 	1.25868,
 	13.0000,
 	504.000,
 	-0.132002,
 	-168.727,
 	-131.841,
 	Infinity,
 	124.521)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (807.0151815996827,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.156488,
 	0.0324958,
 	0.122222,
 	0.0905222,
 	-0.299997,
 	0.113098,
 	0.361361,
 	-0.0437267,
 	0.0622603,
 	0.347118,
 	-0.0596073,
 	0.00379341,
 	-0.0414806,
 	0.0918593,
 	-0.196321,
 	-0.0847929,
 	-0.0997572,
 	0.0282821,
 	-0.0904181,
 	0.0849661,
 	0.0171895,
 	-0.0480249,
 	0.0186312,
 	0.138224,
 	-0.125536,
 	-0.135409,
 	0.00933356) 
 b.b = VectorD(0.857446)
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.0282362,
 	0.00317087,
 	165.033,
 	160.373,
 	1.55702,
 	1.24780,
 	1.02231,
 	13.0000,
 	504.000,
 	1.12650,
 	-141.770,
 	-104.884,
 	Infinity,
 	128.015)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (768.9498737172742,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.156488,
 	0.0324958,
 	0.122222,
 	0.0905222,
 	-0.299997,
 	0.113098,
 	0.361361,
 	-0.0437267,
 	0.0622603,
 	0.347118,
 	-0.0596073,
 	0.00379341,
 	-0.0414806,
 	0.0918593,
 	-0.196321,
 	-0.0847929,
 	-0.0997572,
 	0.0282821,
 	-0.0904181,
 	0.0849661,
 	0.0171895,
 	-0.0480249,
 	0.0186312,
 	0.138224,
 	-0.125536,
 	-0.135409,
 	0.00933356) 
 b.b = VectorD(0.857446)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0703923,
 	0.0464143,
 	210.791,
 	195.953,
 	1.90246,
 	1.37930,
 	1.14811,
 	13.0000,
 	504.000,
 	2.93571,
 	-151.280,
 	-114.394,
 	Infinity,
 	124.557)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (799.8956398038673,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.156488,
 	0.0324958,
 	0.122222,
 	0.0905222,
 	-0.299997,
 	0.113098,
 	0.361361,
 	-0.0437267,
 	0.0622603,
 	0.347118,
 	-0.0596073,
 	0.00379341,
 	-0.0414806,
 	0.0918593,
 	-0.196321,
 	-0.0847929,
 	-0.0997572,
 	0.0282821,
 	-0.0904181,
 	0.0849661,
 	0.0171895,
 	-0.0480249,
 	0.0186312,
 	0.138224,
 	-0.125536,
 	-0.135409,
 	0.00933356) 
 b.b = VectorD(0.857446)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.0542781,
 	-0.0814717,
 	153.587,
 	161.923,
 	1.57207,
 	1.25382,
 	1.08321,
 	13.0000,
 	504.000,
 	-1.99598,
 	-142.185,
 	-105.299,
 	Infinity,
 	129.710)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (700.1561049966283,354)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.156488,
 	0.0324958,
 	0.122222,
 	0.0905222,
 	-0.299997,
 	0.113098,
 	0.361361,
 	-0.0437267,
 	0.0622603,
 	0.347118,
 	-0.0596073,
 	0.00379341,
 	-0.0414806,
 	0.0918593,
 	-0.196321,
 	-0.0847929,
 	-0.0997572,
 	0.0282821,
 	-0.0904181,
 	0.0849661,
 	0.0171895,
 	-0.0480249,
 	0.0186312,
 	0.138224,
 	-0.125536,
 	-0.135409,
 	0.00933356) 
 b.b = VectorD(0.857446)
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.0603367,
 	0.0360994,
 	189.018,
 	177.613,
 	1.72440,
 	1.31316,
 	1.08003,
 	13.0000,
 	504.000,
 	2.48941,
 	-146.378,
 	-109.492,
 	Infinity,
 	139.924)
-----------------------------------------------
| showQofStatTable: Statistical Table for QoF |
-----------------------------------------------
|        name |   num |        min |        max |       mean |      stdev |   interval |
----------------------------------------------------------------------------------------
|         rSq |     5 |     -0.054 |      0.070 |      0.020 |      0.051 |      0.063 |
|      rSqBar |     5 |     -0.081 |      0.046 |     -0.005 |      0.052 |      0.065 |
|         sst |     5 |    153.587 |    260.341 |    195.754 |     42.323 |     52.561 |
|         sse |     5 |    160.373 |    261.231 |    191.419 |     41.589 |     51.650 |
|        mse0 |     5 |      1.557 |      2.536 |      1.858 |      0.404 |      0.501 |
|        rmse |     5 |      1.248 |      1.593 |      1.357 |      0.142 |      0.176 |
|         mae |     5 |      1.022 |      1.259 |      1.118 |      0.090 |      0.112 |
|         dfm |     5 |     13.000 |     13.000 |     13.000 |      0.000 |      0.000 |
|          df |     5 |    504.000 |    504.000 |    504.000 |      0.000 |      0.000 |
|       fStat |     5 |     -1.996 |      2.936 |      0.885 |      2.011 |      2.497 |
|         aic |     5 |   -168.727 |   -141.770 |   -150.068 |     11.116 |     13.805 |
|         bic |     5 |   -131.841 |   -104.884 |   -113.182 |     11.116 |     13.805 |
|        mape |     5 | 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.000 |   Infinity |   Infinity |        NaN |        NaN |
|       smape |     5 |    124.521 |    139.924 |    129.345 |      6.325 |      7.855 |
----------------------------------------------------------------------------------------
----------------------------------------
| Feature Selection Technique: Forward |
----------------------------------------
-------------------------------------------------------------------------------------
| forwardSelAll: (l = 0) INITIAL variable (0, intercept) => cols = LinkedHashSet(0) |
-------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (1003.3799699018283,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1007.9186907646097,400)
optimize3: bSize = 20, nB = 25
ending epoch = (992.1105832950078,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1009.1555109174162,400)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
optimize3: bSize = 20, nB = 25
ending epoch = (1011.5544103862089,400)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
optimize3: bSize = 20, nB = 25
ending epoch = (1004.432072292654,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1005.6556350070372,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1009.4187648671524,400)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
optimize3: bSize = 20, nB = 25
ending epoch = (994.5643749173298,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1006.5824302269403,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1004.6027636429623,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1007.46629257893,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (724.6303115545635,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.494458,
 	0.244057,
 	0.179414,
 	0.270970,
 	0.204975) 
 b.b = VectorD(0.222250)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0373690,
 	-0.0413976,
 	260.341,
 	270.070,
 	2.62204,
 	1.61927,
 	1.29400,
 	2.00000,
 	515.000,
 	-9.27588,
 	-192.586,
 	-184.682,
 	Infinity,
 	127.395)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (827.2199013320087,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.511248,
 	0.261891,
 	0.211594,
 	0.289400,
 	0.227913) 
 b.b = VectorD(0.249755)
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.00194506,
 	-0.00193088,
 	165.033,
 	164.712,
 	1.59914,
 	1.26457,
 	1.03799,
 	2.00000,
 	515.000,
 	0.501830,
 	-165.134,
 	-157.230,
 	Infinity,
 	127.104)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (784.268555664515,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.499150,
 	0.253414,
 	0.210649,
 	0.277462,
 	0.220307) 
 b.b = VectorD(0.229938)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0156881,
 	0.0118656,
 	210.791,
 	207.484,
 	2.01441,
 	1.41930,
 	1.18692,
 	2.00000,
 	515.000,
 	4.10408,
 	-176.279,
 	-168.375,
 	Infinity,
 	126.611)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (829.8214379288106,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.487749,
 	0.277062,
 	0.250178,
 	0.293413,
 	0.239525) 
 b.b = VectorD(0.234942)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.0655117,
 	-0.0696496,
 	153.587,
 	163.649,
 	1.58882,
 	1.26049,
 	1.06500,
 	2.00000,
 	515.000,
 	-15.8321,
 	-164.858,
 	-156.953,
 	Infinity,
 	127.035)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (803.1995700261158,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.540571,
 	0.241962,
 	0.317705,
 	0.245355,
 	0.240665) 
 b.b = VectorD(0.250682)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.00434061,
 	-0.00824097,
 	189.018,
 	189.838,
 	1.84309,
 	1.35761,
 	1.14292,
 	2.00000,
 	515.000,
 	-1.11288,
 	-171.681,
 	-163.777,
 	Infinity,
 	139.731)
------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 1) ADD variable (3, month) => cols = LinkedHashSet(0, 3) @ 0.01301959314497092 |
------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (993.1333714228425,400)
optimize3: bSize = 20, nB = 25
ending epoch = (991.0023111442342,400)
optimize3: bSize = 20, nB = 25
ending epoch = (995.127704818978,400)
optimize3: bSize = 20, nB = 25
ending epoch = (998.6478161824826,400)
optimize3: bSize = 20, nB = 25
ending epoch = (993.5808403635912,400)
optimize3: bSize = 20, nB = 25
ending epoch = (993.4709769232488,400)
optimize3: bSize = 20, nB = 25
ending epoch = (995.1044687909239,400)
optimize3: bSize = 20, nB = 25
ending epoch = (990.0746952645445,400)
optimize3: bSize = 20, nB = 25
ending epoch = (994.145048267845,400)
optimize3: bSize = 20, nB = 25
ending epoch = (989.1139208949968,400)
optimize3: bSize = 20, nB = 25
ending epoch = (996.707765556048,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (720.8723047689319,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.214203,
 	0.162692,
 	-0.0339188,
 	0.322346,
 	0.139058,
 	-0.0243771,
 	0.141204) 
 b.b = VectorD(0.462753)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0408493,
 	-0.0469243,
 	260.341,
 	270.976,
 	2.63083,
 	1.62198,
 	1.30019,
 	3.00000,
 	514.000,
 	-6.72417,
 	-190.880,
 	-180.341,
 	Infinity,
 	127.501)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (821.7752521938114,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.244858,
 	0.187879,
 	-0.0480287,
 	0.349552,
 	0.143113,
 	-0.0397072,
 	0.159229) 
 b.b = VectorD(0.494460)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0181035,
 	-0.0240457,
 	165.033,
 	168.020,
 	1.63127,
 	1.27721,
 	1.05452,
 	3.00000,
 	514.000,
 	-3.04658,
 	-163.973,
 	-153.435,
 	Infinity,
 	127.641)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (780.6636036326558,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.231326,
 	0.176932,
 	-0.0595216,
 	0.338020,
 	0.135095,
 	-0.0568499,
 	0.153192) 
 b.b = VectorD(0.478221)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0106463,
 	0.00487186,
 	210.791,
 	208.547,
 	2.02473,
 	1.42293,
 	1.18344,
 	3.00000,
 	514.000,
 	1.84369,
 	-174.565,
 	-164.026,
 	Infinity,
 	126.237)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (825.4428502480941,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.253782,
 	0.202945,
 	0.00931926,
 	0.347178,
 	0.112070,
 	-0.0615400,
 	0.156333) 
 b.b = VectorD(0.473538)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.0765190,
 	-0.0828022,
 	153.587,
 	165.339,
 	1.60524,
 	1.26698,
 	1.06857,
 	3.00000,
 	514.000,
 	-12.1784,
 	-163.273,
 	-152.734,
 	Infinity,
 	127.641)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (808.2650617034801,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.200175,
 	0.146302,
 	-0.0466281,
 	0.381368,
 	0.144409,
 	-0.0974923,
 	0.128378) 
 b.b = VectorD(0.544934)
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.0253548,
 	0.0196662,
 	189.018,
 	184.226,
 	1.78860,
 	1.33738,
 	1.11941,
 	3.00000,
 	514.000,
 	4.45714,
 	-168.209,
 	-157.670,
 	Infinity,
 	139.267)
-----------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 2) ADD variable (11, wind) => cols = LinkedHashSet(0, 3, 11) @ 0.014086364477650215 |
-----------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (981.358799238293,400)
optimize3: bSize = 20, nB = 25
ending epoch = (983.8864695474085,400)
optimize3: bSize = 20, nB = 25
ending epoch = (988.7396261449851,400)
optimize3: bSize = 20, nB = 25
ending epoch = (987.9774056701475,400)
optimize3: bSize = 20, nB = 25
ending epoch = (984.8006799112358,400)
optimize3: bSize = 20, nB = 25
ending epoch = (984.7096302759935,400)
optimize3: bSize = 20, nB = 25
ending epoch = (987.2618390468521,400)
optimize3: bSize = 20, nB = 25
ending epoch = (982.2921135751923,400)
optimize3: bSize = 20, nB = 25
ending epoch = (984.7285756922236,400)
optimize3: bSize = 20, nB = 25
ending epoch = (988.5217264423579,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (712.6217168244558,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.206206,
 	0.168414,
 	0.309943,
 	0.161009,
 	-0.0146256,
 	0.00832423,
 	0.232344,
 	0.120234,
 	0.291830) 
 b.b = VectorD(0.325923)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0343052,
 	-0.0423700,
 	260.341,
 	269.272,
 	2.61429,
 	1.61688,
 	1.28973,
 	4.00000,
 	513.000,
 	-4.25372,
 	-188.586,
 	-175.412,
 	Infinity,
 	126.912)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (815.9750625449336,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.259886,
 	0.190657,
 	0.385869,
 	0.152299,
 	-0.0740442,
 	-0.0146660,
 	0.277773,
 	0.109985,
 	0.313564) 
 b.b = VectorD(0.357890)
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.0111611,
 	0.00345090,
 	165.033,
 	163.191,
 	1.58438,
 	1.25872,
 	1.04098,
 	4.00000,
 	513.000,
 	1.44757,
 	-160.643,
 	-147.469,
 	Infinity,
 	127.524)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (771.0019212760462,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.259748,
 	0.179480,
 	0.528515,
 	0.131250,
 	-0.0853930,
 	0.0224226,
 	0.277785,
 	0.0715032,
 	0.296041) 
 b.b = VectorD(0.335975)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0237916,
 	0.0161798,
 	210.791,
 	205.776,
 	1.99783,
 	1.41344,
 	1.17507,
 	4.00000,
 	513.000,
 	3.12564,
 	-171.860,
 	-158.687,
 	Infinity,
 	126.114)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (806.8359457664934,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.293168,
 	0.178602,
 	0.638558,
 	0.141008,
 	-0.0769623,
 	0.0523897,
 	0.299995,
 	0.0847149,
 	0.277068) 
 b.b = VectorD(0.319025)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.132660,
 	-0.141492,
 	153.587,
 	173.962,
 	1.68895,
 	1.29960,
 	1.10218,
 	4.00000,
 	513.000,
 	-15.0210,
 	-163.480,
 	-150.306,
 	Infinity,
 	129.145)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (799.3708507878919,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.273375,
 	0.173088,
 	0.614299,
 	0.134326,
 	-0.119387,
 	0.0988928,
 	0.352695,
 	0.00922776,
 	0.295917) 
 b.b = VectorD(0.361726)
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.0464349,
 	0.0389997,
 	189.018,
 	180.241,
 	1.74991,
 	1.32284,
 	1.10391,
 	4.00000,
 	513.000,
 	6.24527,
 	-165.134,
 	-151.960,
 	Infinity,
 	139.315)
---------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 3) ADD variable (1, X) => cols = LinkedHashSet(0, 3, 11, 1) @ 0.01990960372691475 |
---------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (982.7049160282596,400)
optimize3: bSize = 20, nB = 25
ending epoch = (984.6042931135189,400)
optimize3: bSize = 20, nB = 25
ending epoch = (986.6388662391189,400)
optimize3: bSize = 20, nB = 25
ending epoch = (982.6505719758434,400)
optimize3: bSize = 20, nB = 25
ending epoch = (985.504814924811,400)
optimize3: bSize = 20, nB = 25
ending epoch = (984.6883326680482,400)
optimize3: bSize = 20, nB = 25
ending epoch = (979.4160608255186,400)
optimize3: bSize = 20, nB = 25
ending epoch = (982.2468584970285,400)
optimize3: bSize = 20, nB = 25
ending epoch = (982.0895795302378,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (711.98856299633,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.355721,
 	0.0723704,
 	0.149824,
 	0.223450,
 	0.0953200,
 	0.251050,
 	0.0497054,
 	0.244122,
 	0.140766,
 	0.0310339,
 	0.0232184) 
 b.b = VectorD(0.331209)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0369451,
 	-0.0470716,
 	260.341,
 	269.960,
 	2.62097,
 	1.61894,
 	1.29234,
 	5.00000,
 	512.000,
 	-3.64839,
 	-186.806,
 	-170.998,
 	Infinity,
 	127.682)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (815.0741709657095,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.363390,
 	0.0614711,
 	0.174545,
 	0.273720,
 	0.0792769,
 	0.333096,
 	-0.00849635,
 	0.275613,
 	0.162697,
 	0.00115154,
 	0.0215413) 
 b.b = VectorD(0.372386)
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.0109687,
 	0.00131019,
 	165.033,
 	163.222,
 	1.58468,
 	1.25884,
 	1.04166,
 	5.00000,
 	512.000,
 	1.13565,
 	-158.634,
 	-142.826,
 	Infinity,
 	127.757)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (775.8901183587762,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.370573,
 	0.0465801,
 	0.179120,
 	0.269081,
 	0.153908,
 	0.355759,
 	-0.0631717,
 	0.264462,
 	0.135517,
 	-0.0452968,
 	0.00438169) 
 b.b = VectorD(0.366732)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0413412,
 	0.0319793,
 	210.791,
 	202.077,
 	1.96191,
 	1.40068,
 	1.16002,
 	5.00000,
 	512.000,
 	4.41590,
 	-168.889,
 	-153.081,
 	Infinity,
 	125.707)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (801.0009707960955,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.334503,
 	0.0822427,
 	0.203777,
 	0.301346,
 	0.252964,
 	0.420031,
 	-0.0796949,
 	0.255548,
 	0.168366,
 	-0.0437418,
 	0.0545247) 
 b.b = VectorD(0.337566)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.187757,
 	-0.199356,
 	153.587,
 	182.424,
 	1.77111,
 	1.33083,
 	1.13827,
 	5.00000,
 	512.000,
 	-16.1871,
 	-163.702,
 	-147.894,
 	Infinity,
 	131.138)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (795.9592458188406,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.406925,
 	0.0557663,
 	0.248209,
 	0.269932,
 	0.209346,
 	0.499778,
 	-0.136755,
 	0.253460,
 	0.139096,
 	-0.135937,
 	-0.0202667) 
 b.b = VectorD(0.413734)
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.0248325,
 	0.0153094,
 	189.018,
 	184.324,
 	1.78956,
 	1.33774,
 	1.12602,
 	5.00000,
 	512.000,
 	2.60760,
 	-164.204,
 	-148.396,
 	Infinity,
 	139.394)
---------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 4) ADD variable (9, temp) => cols = LinkedHashSet(0, 3, 11, 1, 9) @ 0.01993938160826758 |
---------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (979.3751417144553,400)
optimize3: bSize = 20, nB = 25
ending epoch = (981.476724032493,400)
optimize3: bSize = 20, nB = 25
ending epoch = (982.053665388951,400)
optimize3: bSize = 20, nB = 25
ending epoch = (980.0669730386959,400)
optimize3: bSize = 20, nB = 25
ending epoch = (979.1681681838569,400)
optimize3: bSize = 20, nB = 25
ending epoch = (978.7047707077757,400)
optimize3: bSize = 20, nB = 25
ending epoch = (978.9745290549445,400)
optimize3: bSize = 20, nB = 25
ending epoch = (982.0172200848039,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (711.4344368213715,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.106706,
 	0.297242,
 	0.00900451,
 	0.126784,
 	0.113591,
 	0.0375843,
 	0.0905924,
 	0.399148,
 	0.0419752,
 	0.162954,
 	-0.0569958,
 	-0.0397915,
 	-0.0534422) 
 b.b = VectorD(0.387077)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0363665,
 	-0.0485352,
 	260.341,
 	269.809,
 	2.61950,
 	1.61849,
 	1.28805,
 	6.00000,
 	511.000,
 	-2.98853,
 	-184.780,
 	-166.337,
 	Infinity,
 	127.867)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (814.2284281803204,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0473477,
 	0.402506,
 	0.0603991,
 	0.112711,
 	0.122176,
 	0.0423773,
 	0.102039,
 	0.419592,
 	0.0202580,
 	0.174227,
 	-0.0713301,
 	-0.00573944,
 	-0.0890624) 
 b.b = VectorD(0.429504)
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.00945098,
 	-0.00217973,
 	165.033,
 	163.473,
 	1.58712,
 	1.25981,
 	1.03717,
 	6.00000,
 	511.000,
 	0.812588,
 	-156.695,
 	-138.251,
 	Infinity,
 	126.925)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (775.6675441968052,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0128313,
 	0.421612,
 	0.0851481,
 	0.0736219,
 	0.113178,
 	0.0273243,
 	0.119574,
 	0.416503,
 	-0.0365826,
 	0.177478,
 	-0.0927194,
 	0.0342164,
 	-0.0592190) 
 b.b = VectorD(0.422894)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0432999,
 	0.0320667,
 	210.791,
 	201.664,
 	1.95790,
 	1.39925,
 	1.15928,
 	6.00000,
 	511.000,
 	3.85461,
 	-166.782,
 	-148.339,
 	Infinity,
 	125.409)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (800.5688737477376,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0484182,
 	0.477110,
 	0.100318,
 	0.107595,
 	0.165910,
 	0.0529342,
 	0.184975,
 	0.396085,
 	-0.0453691,
 	0.205068,
 	-0.128693,
 	0.0595328,
 	-0.0773734) 
 b.b = VectorD(0.388110)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.182436,
 	-0.196320,
 	153.587,
 	181.607,
 	1.76317,
 	1.32785,
 	1.13996,
 	6.00000,
 	511.000,
 	-13.1402,
 	-161.484,
 	-143.041,
 	Infinity,
 	131.047)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (796.2750475217704,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.0193590,
 	0.491404,
 	0.160716,
 	0.0337079,
 	0.153418,
 	0.00959135,
 	0.137097,
 	0.422287,
 	-0.106476,
 	0.219625,
 	-0.167810,
 	0.0335672,
 	-0.0913012) 
 b.b = VectorD(0.471329)
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.0222809,
 	0.0108008,
 	189.018,
 	184.807,
 	1.79424,
 	1.33949,
 	1.11579,
 	6.00000,
 	511.000,
 	1.94083,
 	-162.329,
 	-143.886,
 	Infinity,
 	138.704)
------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 5) ADD variable (8, ISI) => cols = LinkedHashSet(0, 3, 11, 1, 9, 8) @ 0.018734605855899922 |
------------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (974.9681196683938,400)
optimize3: bSize = 20, nB = 25
ending epoch = (976.3665410370473,400)
optimize3: bSize = 20, nB = 25
ending epoch = (975.4930784144832,400)
optimize3: bSize = 20, nB = 25
ending epoch = (974.7646067275083,400)
optimize3: bSize = 20, nB = 25
ending epoch = (975.2711139982955,400)
optimize3: bSize = 20, nB = 25
ending epoch = (974.9349406549542,400)
optimize3: bSize = 20, nB = 25
ending epoch = (976.7797334136733,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (707.4082007074533,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.180607,
 	0.304463,
 	-0.0487304,
 	0.142992,
 	-0.0851605,
 	-0.116096,
 	0.0188700,
 	0.128346,
 	0.0501619,
 	0.295719,
 	-0.0755353,
 	-0.0140909,
 	-0.0615066,
 	0.0177733,
 	0.338810) 
 b.b = VectorD(0.415716)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0362765,
 	-0.0504999,
 	260.341,
 	269.785,
 	2.61928,
 	1.61842,
 	1.28993,
 	7.00000,
 	510.000,
 	-2.55048,
 	-182.855,
 	-161.777,
 	Infinity,
 	127.263)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (807.3158514946266,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.260931,
 	0.381378,
 	-0.0667768,
 	0.184372,
 	-0.119758,
 	-0.140289,
 	0.0375022,
 	0.109970,
 	0.0454103,
 	0.298442,
 	-0.165833,
 	-0.0104988,
 	-0.0785808,
 	-0.0105248,
 	0.366553) 
 b.b = VectorD(0.451327)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0124886,
 	-0.0263855,
 	165.033,
 	167.094,
 	1.62227,
 	1.27368,
 	1.04853,
 	7.00000,
 	510.000,
 	-0.898660,
 	-155.621,
 	-134.544,
 	Infinity,
 	127.431)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (773.3027081578982,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.232895,
 	0.368898,
 	0.00589504,
 	0.165317,
 	-0.132413,
 	-0.120335,
 	0.0343127,
 	0.0806943,
 	0.0114964,
 	0.300866,
 	-0.205521,
 	0.110125,
 	-0.0462661,
 	-0.0341126,
 	0.361251) 
 b.b = VectorD(0.438611)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0477666,
 	0.0346967,
 	210.791,
 	200.722,
 	1.94876,
 	1.39598,
 	1.15017,
 	7.00000,
 	510.000,
 	3.65471,
 	-164.540,
 	-143.462,
 	Infinity,
 	125.504)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (798.9732470443496,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.260591,
 	0.433127,
 	0.0307591,
 	0.192530,
 	-0.165900,
 	-0.144740,
 	0.0130149,
 	0.161051,
 	0.00887112,
 	0.273024,
 	-0.247994,
 	0.133860,
 	-0.0593836,
 	-0.00348733,
 	0.407539) 
 b.b = VectorD(0.400179)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.163725,
 	-0.179698,
 	153.587,
 	178.733,
 	1.73527,
 	1.31730,
 	1.13236,
 	7.00000,
 	510.000,
 	-10.2503,
 	-158.708,
 	-137.630,
 	Infinity,
 	130.928)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (790.906588458542,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.305487,
 	0.399454,
 	-0.0300277,
 	0.200635,
 	-0.262266,
 	-0.167375,
 	0.0229286,
 	0.135332,
 	0.0118998,
 	0.323362,
 	-0.278884,
 	0.130522,
 	-0.100484,
 	-0.0680706,
 	0.384323) 
 b.b = VectorD(0.478215)
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.00822303,
 	-0.00538959,
 	189.018,
 	187.464,
 	1.82004,
 	1.34909,
 	1.12319,
 	7.00000,
 	510.000,
 	0.604074,
 	-161.023,
 	-139.946,
 	Infinity,
 	138.924)
---------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 6) ADD variable (6, DMC) => cols = LinkedHashSet(0, 3, 11, 1, 9, 8, 6) @ 0.020768774873384688 |
---------------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (974.5173412186404,400)
optimize3: bSize = 20, nB = 25
ending epoch = (977.2969407719743,400)
optimize3: bSize = 20, nB = 25
ending epoch = (975.6247977860146,400)
optimize3: bSize = 20, nB = 25
ending epoch = (974.7721520484578,400)
optimize3: bSize = 20, nB = 25
ending epoch = (973.0564098777652,400)
optimize3: bSize = 20, nB = 25
ending epoch = (976.7072350575688,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (705.7740785018806,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.0518821,
 	-0.327934,
 	-0.0153301,
 	0.205011,
 	0.0371188,
 	0.00732104,
 	-0.0164503,
 	0.0726977,
 	0.277035,
 	-0.100721,
 	0.0830520,
 	0.0159307,
 	0.00353199,
 	0.141168,
 	0.183249,
 	0.129502,
 	0.290224) 
 b.b = VectorD(0.544610)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0319339,
 	-0.0481529,
 	260.341,
 	268.655,
 	2.60830,
 	1.61502,
 	1.27974,
 	8.00000,
 	509.000,
 	-1.96892,
 	-180.590,
 	-156.877,
 	Infinity,
 	127.256)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (804.4860721694108,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.0742476,
 	-0.431156,
 	-0.0580832,
 	0.173115,
 	0.0183963,
 	0.0132651,
 	0.0236947,
 	0.0696662,
 	0.315382,
 	-0.153565,
 	0.132650,
 	0.0603352,
 	0.00822457,
 	0.218592,
 	0.210379,
 	0.159222,
 	0.301066) 
 b.b = VectorD(0.587410)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0132075,
 	-0.0291322,
 	165.033,
 	167.212,
 	1.62342,
 	1.27414,
 	1.04985,
 	8.00000,
 	509.000,
 	-0.829372,
 	-153.640,
 	-129.928,
 	Infinity,
 	127.953)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (772.2183269027918,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.104825,
 	-0.428795,
 	-0.00661726,
 	0.134929,
 	0.0193197,
 	0.118466,
 	0.0555014,
 	0.0448113,
 	0.294618,
 	-0.183084,
 	0.148348,
 	0.115283,
 	0.0318021,
 	0.191761,
 	0.208899,
 	0.147309,
 	0.301386) 
 b.b = VectorD(0.570879)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0493493,
 	0.0344078,
 	210.791,
 	200.389,
 	1.94552,
 	1.39482,
 	1.15137,
 	8.00000,
 	509.000,
 	3.30284,
 	-162.454,
 	-138.742,
 	Infinity,
 	125.081)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (795.7295871180077,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.121131,
 	-0.492884,
 	-0.0190289,
 	0.161560,
 	0.00944452,
 	0.148713,
 	0.0698136,
 	0.0617975,
 	0.303015,
 	-0.211702,
 	0.171567,
 	0.158330,
 	0.101590,
 	0.199477,
 	0.242056,
 	0.164221,
 	0.340213) 
 b.b = VectorD(0.545011)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.164196,
 	-0.182494,
 	153.587,
 	178.805,
 	1.73598,
 	1.31756,
 	1.12815,
 	8.00000,
 	509.000,
 	-8.97354,
 	-156.720,
 	-133.008,
 	Infinity,
 	130.534)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (785.218488908498,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.185567,
 	-0.508645,
 	-0.0348912,
 	0.0972882,
 	0.0275281,
 	0.139249,
 	0.0928750,
 	0.0245643,
 	0.306935,
 	-0.268489,
 	0.211872,
 	0.167209,
 	0.125113,
 	0.175521,
 	0.195989,
 	0.141462,
 	0.370016) 
 b.b = VectorD(0.633159)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.00314096,
 	-0.0189074,
 	189.018,
 	189.612,
 	1.84089,
 	1.35679,
 	1.12985,
 	8.00000,
 	509.000,
 	-0.199218,
 	-159.591,
 	-135.878,
 	Infinity,
 	138.915)
------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 7) ADD variable (10, RH) => cols = LinkedHashSet(0, 3, 11, 1, 9, 8, 6, 10) @ 0.02056433702963467 |
------------------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (971.4689414331227,400)
optimize3: bSize = 20, nB = 25
ending epoch = (975.2614617811157,400)
optimize3: bSize = 20, nB = 25
ending epoch = (974.7816644359301,400)
optimize3: bSize = 20, nB = 25
ending epoch = (971.1079909455553,400)
optimize3: bSize = 20, nB = 25
ending epoch = (973.4321360312933,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (702.0006826406753,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.00252224,
 	-0.0938019,
 	0.101960,
 	0.153272,
 	0.0560341,
 	0.0331646,
 	-0.0628398,
 	0.310303,
 	0.212376,
 	0.352787,
 	0.00163245,
 	-0.276014,
 	0.262764,
 	0.131654,
 	0.0949625,
 	0.0243622,
 	0.0540253,
 	-0.265917,
 	0.106084) 
 b.b = VectorD(0.491326)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0289478,
 	-0.0471772,
 	260.341,
 	267.877,
 	2.60075,
 	1.61268,
 	1.28280,
 	9.00000,
 	508.000,
 	-1.58798,
 	-178.423,
 	-152.075,
 	Infinity,
 	126.888)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (794.0318322358477,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.0997819,
 	-0.143510,
 	0.187050,
 	0.158320,
 	0.116726,
 	0.0590560,
 	-0.142181,
 	0.388977,
 	0.234317,
 	0.400682,
 	-0.00451143,
 	-0.320039,
 	0.360525,
 	0.164220,
 	0.132056,
 	0.0489330,
 	0.0573807,
 	-0.347063,
 	0.109919) 
 b.b = VectorD(0.517459)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0152709,
 	-0.0332580,
 	165.033,
 	167.553,
 	1.62673,
 	1.27543,
 	1.05946,
 	9.00000,
 	508.000,
 	-0.848995,
 	-151.717,
 	-125.370,
 	Infinity,
 	127.820)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (766.2643406084262,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.149682,
 	-0.122212,
 	0.227554,
 	0.150822,
 	0.180436,
 	0.0946731,
 	-0.191918,
 	0.399359,
 	0.229176,
 	0.384863,
 	0.0263822,
 	-0.303196,
 	0.407394,
 	0.157097,
 	0.109111,
 	0.0389066,
 	0.0360578,
 	-0.326766,
 	0.126288) 
 b.b = VectorD(0.494074)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0709521,
 	0.0544926,
 	210.791,
 	195.835,
 	1.90131,
 	1.37888,
 	1.13105,
 	9.00000,
 	508.000,
 	4.31071,
 	-159.246,
 	-132.898,
 	Infinity,
 	124.559)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (787.1442507496511,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.163937,
 	-0.101829,
 	0.296380,
 	0.158595,
 	0.246414,
 	0.103263,
 	-0.259405,
 	0.450589,
 	0.223957,
 	0.405188,
 	0.0392774,
 	-0.327132,
 	0.464075,
 	0.162744,
 	0.0881192,
 	0.0265415,
 	0.0391689,
 	-0.345225,
 	0.169299) 
 b.b = VectorD(0.475471)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.137429,
 	-0.157580,
 	153.587,
 	174.694,
 	1.69606,
 	1.30233,
 	1.11664,
 	9.00000,
 	508.000,
 	-6.81985,
 	-153.618,
 	-127.271,
 	Infinity,
 	131.164)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (772.4656090912031,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.183774,
 	-0.141725,
 	0.366097,
 	0.0931077,
 	0.280554,
 	0.147537,
 	-0.254110,
 	0.420621,
 	0.246435,
 	0.429418,
 	0.0457535,
 	-0.309567,
 	0.542667,
 	0.149223,
 	0.0529305,
 	-0.0132868,
 	0.00203999,
 	-0.414969,
 	0.130786) 
 b.b = VectorD(0.539601)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.0131717,
 	-0.0311216,
 	189.018,
 	191.508,
 	1.85930,
 	1.36356,
 	1.13378,
 	9.00000,
 	508.000,
 	-0.733806,
 	-158.094,
 	-131.746,
 	Infinity,
 	140.079)
-------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 8) ADD variable (7, DC) => cols = LinkedHashSet(0, 3, 11, 1, 9, 8, 6, 10, 7) @ 0.0206013672433214 |
-------------------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (968.0021208267419,400)
optimize3: bSize = 20, nB = 25
ending epoch = (969.7779230243367,400)
optimize3: bSize = 20, nB = 25
ending epoch = (970.6353088111703,400)
optimize3: bSize = 20, nB = 25
ending epoch = (968.5987326035425,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (702.9632754676533,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.0481421,
 	-0.0943321,
 	0.0410212,
 	-0.0542362,
 	-0.191354,
 	-0.261167,
 	0.197772,
 	0.130125,
 	0.448302,
 	0.123183,
 	0.202497,
 	-0.121544,
 	-0.0640416,
 	0.0794403,
 	0.0646241,
 	-0.0800045,
 	0.202799,
 	0.0202988,
 	0.0864494,
 	-0.0111802,
 	0.119157) 
 b.b = VectorD(0.552795)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0200074,
 	-0.0401259,
 	260.341,
 	265.550,
 	2.57815,
 	1.60566,
 	1.26815,
 	10.0000,
 	507.000,
 	-0.994478,
 	-175.865,
 	-146.883,
 	Infinity,
 	126.579)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (793.7350749288374,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.0936368,
 	-0.117468,
 	0.0962954,
 	-0.0731276,
 	-0.231018,
 	-0.319254,
 	0.299320,
 	0.136546,
 	0.580712,
 	0.0935014,
 	0.295293,
 	-0.202987,
 	-0.0825108,
 	0.0793651,
 	0.0967306,
 	-0.0917954,
 	0.192885,
 	0.000891125,
 	0.104275,
 	0.00395318,
 	0.120724) 
 b.b = VectorD(0.573708)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0427129,
 	-0.0632793,
 	165.033,
 	172.082,
 	1.67070,
 	1.29255,
 	1.06780,
 	10.0000,
 	507.000,
 	-2.07684,
 	-150.905,
 	-121.923,
 	Infinity,
 	128.525)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (763.8461385501384,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.139837,
 	-0.109989,
 	0.100295,
 	-0.120236,
 	-0.205837,
 	-0.317241,
 	0.304294,
 	0.0971574,
 	0.536695,
 	0.0743404,
 	0.427085,
 	-0.158551,
 	-0.0215113,
 	0.0764579,
 	0.139772,
 	-0.0724109,
 	0.189002,
 	-0.0129591,
 	0.146336,
 	0.0177621,
 	0.0927840) 
 b.b = VectorD(0.540460)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0566023,
 	0.0379949,
 	210.791,
 	198.860,
 	1.93068,
 	1.38949,
 	1.14382,
 	10.0000,
 	507.000,
 	3.04192,
 	-158.056,
 	-129.074,
 	Infinity,
 	124.848)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (788.5498782531938,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.177001,
 	-0.148386,
 	0.0999889,
 	-0.129955,
 	-0.293845,
 	-0.315545,
 	0.355659,
 	0.0717981,
 	0.570026,
 	0.0741311,
 	0.495222,
 	-0.164415,
 	-0.0631472,
 	0.0893445,
 	0.134696,
 	-0.0952242,
 	0.218534,
 	-0.0421843,
 	0.171175,
 	0.0533310,
 	0.102672) 
 b.b = VectorD(0.546019)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.132725,
 	-0.155066,
 	153.587,
 	173.972,
 	1.68905,
 	1.29963,
 	1.12283,
 	10.0000,
 	507.000,
 	-5.94066,
 	-151.409,
 	-122.427,
 	Infinity,
 	131.302)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (773.2618309204738,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.240863,
 	-0.169904,
 	0.185911,
 	-0.153331,
 	-0.360876,
 	-0.343735,
 	0.394439,
 	0.0641774,
 	0.599482,
 	0.0977150,
 	0.494844,
 	-0.180389,
 	-0.0582419,
 	0.0944521,
 	0.0664171,
 	-0.152709,
 	0.151015,
 	-0.0497535,
 	0.161830,
 	0.0375323,
 	0.115664) 
 b.b = VectorD(0.610337)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.0158190,
 	-0.0358548,
 	189.018,
 	192.008,
 	1.86416,
 	1.36534,
 	1.13253,
 	10.0000,
 	507.000,
 	-0.789531,
 	-156.226,
 	-127.244,
 	Infinity,
 	140.114)
-----------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 9) ADD variable (2, Y) => cols = LinkedHashSet(0, 3, 11, 1, 9, 8, 6, 10, 7, 2) @ 0.021808178660634003 |
-----------------------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (972.1455544755124,400)
optimize3: bSize = 20, nB = 25
ending epoch = (971.9877245485253,400)
optimize3: bSize = 20, nB = 25
ending epoch = (970.4474859905026,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (700.9483880816351,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.215433,
 	0.0181465,
 	-0.0734756,
 	0.203264,
 	0.0683885,
 	-0.142057,
 	0.177661,
 	0.221769,
 	0.304796,
 	0.163916,
 	-0.0600906,
 	0.114871,
 	-0.0903065,
 	-0.0424637,
 	0.0414275,
 	0.100469,
 	-0.115591,
 	0.0494016,
 	0.195939,
 	0.0397474,
 	0.0261555,
 	-0.226450,
 	-0.203097) 
 b.b = VectorD(0.552589)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0810084,
 	-0.104509,
 	260.341,
 	281.431,
 	2.73234,
 	1.65298,
 	1.30095,
 	11.0000,
 	506.000,
 	-3.44714,
 	-178.046,
 	-146.430,
 	Infinity,
 	127.912)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (795.8954817198305,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.250206,
 	-0.0535517,
 	-0.0637179,
 	0.214880,
 	0.0927620,
 	-0.187463,
 	0.201471,
 	0.305727,
 	0.364204,
 	0.152331,
 	-0.0740122,
 	0.149466,
 	-0.106592,
 	-0.00398880,
 	0.0868256,
 	0.130595,
 	-0.136130,
 	0.0502498,
 	0.234884,
 	0.0732146,
 	0.109807,
 	-0.289269,
 	-0.252741) 
 b.b = VectorD(0.560022)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0432312,
 	-0.0659102,
 	165.033,
 	172.167,
 	1.67153,
 	1.29288,
 	1.06753,
 	11.0000,
 	506.000,
 	-1.90623,
 	-148.941,
 	-117.325,
 	Infinity,
 	128.474)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (767.1295825961116,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.262396,
 	-0.114731,
 	-0.0589158,
 	0.211678,
 	0.116522,
 	-0.140573,
 	0.176142,
 	0.290615,
 	0.356273,
 	0.143178,
 	-0.0400213,
 	0.256141,
 	-0.0705616,
 	-0.0401007,
 	0.106699,
 	0.0876368,
 	-0.167539,
 	0.104311,
 	0.209331,
 	0.0974354,
 	0.0744768,
 	-0.259022,
 	-0.198751) 
 b.b = VectorD(0.524766)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0638989,
 	0.0435488,
 	210.791,
 	197.322,
 	1.91575,
 	1.38410,
 	1.13597,
 	11.0000,
 	506.000,
 	3.13999,
 	-155.642,
 	-124.025,
 	Infinity,
 	124.759)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (790.3113096880877,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.280123,
 	-0.154754,
 	-0.0340092,
 	0.225129,
 	0.134682,
 	-0.160966,
 	0.219022,
 	0.323838,
 	0.367785,
 	0.167220,
 	-0.0410986,
 	0.242359,
 	-0.0709597,
 	-0.0802899,
 	0.133269,
 	0.104516,
 	-0.215526,
 	0.182353,
 	0.235655,
 	0.127027,
 	0.0908252,
 	-0.295099,
 	-0.257012) 
 b.b = VectorD(0.509892)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.135795,
 	-0.160486,
 	153.587,
 	174.443,
 	1.69363,
 	1.30139,
 	1.12230,
 	11.0000,
 	506.000,
 	-5.49973,
 	-149.548,
 	-117.931,
 	Infinity,
 	130.904)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (773.888865826599,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.314413,
 	-0.173062,
 	-0.0164108,
 	0.222043,
 	0.118087,
 	-0.181066,
 	0.232943,
 	0.333673,
 	0.365540,
 	0.144649,
 	-0.0659187,
 	0.236989,
 	-0.104139,
 	-0.0786160,
 	0.132332,
 	0.103505,
 	-0.255586,
 	0.169602,
 	0.277099,
 	0.184198,
 	0.112498,
 	-0.357681,
 	-0.276431) 
 b.b = VectorD(0.561343)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.0327183,
 	-0.0551687,
 	189.018,
 	195.202,
 	1.89517,
 	1.37665,
 	1.15211,
 	11.0000,
 	506.000,
 	-1.45736,
 	-155.077,
 	-123.461,
 	Infinity,
 	140.700)
--------------------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 10) ADD variable (12, rain) => cols = LinkedHashSet(0, 3, 11, 1, 9, 8, 6, 10, 7, 2, 12) @ 0.017399003267235313 |
--------------------------------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (973.2560810317345,400)
optimize3: bSize = 20, nB = 25
ending epoch = (970.6642900463254,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (701.9472311912307,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0202758,
 	0.241004,
 	-0.102391,
 	0.0392159,
 	0.0585264,
 	-0.0763720,
 	0.0323693,
 	0.141521,
 	0.182891,
 	0.177072,
 	0.0153690,
 	0.0354811,
 	0.106337,
 	-0.00944247,
 	-0.0145503,
 	-0.105604,
 	0.227597,
 	0.133921,
 	-0.0820011,
 	0.0818462,
 	0.233834,
 	-0.224467,
 	0.0850518,
 	-0.0925004,
 	-0.245365) 
 b.b = VectorD(0.620836)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0485679,
 	-0.0734844,
 	260.341,
 	272.985,
 	2.65034,
 	1.62799,
 	1.28798,
 	12.0000,
 	505.000,
 	-1.94923,
 	-173.792,
 	-139.540,
 	Infinity,
 	128.099)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (794.3676468780819,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0155617,
 	0.298186,
 	-0.126624,
 	0.0641520,
 	0.0500550,
 	-0.0770670,
 	0.0218945,
 	0.157664,
 	0.214230,
 	0.266227,
 	0.0490301,
 	0.0550911,
 	0.172070,
 	-0.0311760,
 	-0.0537369,
 	-0.195106,
 	0.297033,
 	0.133093,
 	-0.110107,
 	0.166102,
 	0.278152,
 	-0.306747,
 	0.104928,
 	-0.0517268,
 	-0.271601) 
 b.b = VectorD(0.636497)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0438840,
 	-0.0686892,
 	165.033,
 	172.275,
 	1.67257,
 	1.29328,
 	1.07511,
 	12.0000,
 	505.000,
 	-1.76915,
 	-146.971,
 	-112.720,
 	Infinity,
 	128.893)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (761.6314578071378,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.0424125,
 	0.329952,
 	-0.115307,
 	0.121349,
 	0.0915777,
 	-0.0135909,
 	0.00198766,
 	0.116119,
 	0.195280,
 	0.244216,
 	0.0462832,
 	0.148248,
 	0.251341,
 	-0.124015,
 	-0.0596608,
 	-0.294760,
 	0.243246,
 	0.168355,
 	-0.0721680,
 	0.230281,
 	0.258798,
 	-0.302588,
 	0.102060,
 	0.00707141,
 	-0.228923) 
 b.b = VectorD(0.618080)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0461538,
 	0.0234881,
 	210.791,
 	201.062,
 	1.95206,
 	1.39716,
 	1.15623,
 	12.0000,
 	505.000,
 	2.03629,
 	-154.638,
 	-120.386,
 	Infinity,
 	125.191)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (788.686954068538,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.0678362,
 	0.388039,
 	-0.112234,
 	0.106836,
 	0.100720,
 	0.0214455,
 	-0.00438211,
 	0.106480,
 	0.265433,
 	0.261507,
 	0.0705205,
 	0.165111,
 	0.251828,
 	-0.185151,
 	-0.0926090,
 	-0.328982,
 	0.246999,
 	0.191073,
 	-0.0953781,
 	0.215139,
 	0.266772,
 	-0.411558,
 	0.118534,
 	0.0328982,
 	-0.226955) 
 b.b = VectorD(0.615563)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.110797,
 	-0.137192,
 	153.587,
 	170.604,
 	1.65635,
 	1.28699,
 	1.11118,
 	12.0000,
 	505.000,
 	-4.19761,
 	-146.526,
 	-112.275,
 	Infinity,
 	131.165)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (769.0920586637897,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.0513641,
 	0.472148,
 	-0.116550,
 	0.0952020,
 	0.119694,
 	0.0249603,
 	-0.0396968,
 	0.0532024,
 	0.268306,
 	0.260197,
 	0.0620854,
 	0.138658,
 	0.315525,
 	-0.243704,
 	-0.117580,
 	-0.429475,
 	0.263778,
 	0.114098,
 	-0.0900695,
 	0.162166,
 	0.273620,
 	-0.458639,
 	0.110853,
 	0.0780607,
 	-0.204394) 
 b.b = VectorD(0.697574)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.0247255,
 	-0.0490755,
 	189.018,
 	193.692,
 	1.88050,
 	1.37131,
 	1.14586,
 	12.0000,
 	505.000,
 	-1.01543,
 	-152.675,
 	-118.423,
 	Infinity,
 	140.700)
----------------------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 11) ADD variable (5, FFMC) => cols = LinkedHashSet(0, 3, 11, 1, 9, 8, 6, 10, 7, 2, 12, 5) @ 0.015233304801352765 |
----------------------------------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (974.3051495466701,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (702.6057904151886,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.0157472,
 	-0.0811847,
 	0.0875770,
 	0.0517316,
 	-0.144780,
 	-0.0271666,
 	0.300809,
 	0.213131,
 	0.125924,
 	0.0711932,
 	-0.185727,
 	-0.0520456,
 	-0.0671272,
 	-0.0885944,
 	-0.0487838,
 	-0.00604336,
 	0.0322783,
 	0.0246880,
 	0.0565844,
 	0.0381025,
 	0.303141,
 	0.0476979,
 	-0.0491369,
 	0.0282356,
 	-0.100995,
 	0.0839626,
 	0.182212) 
 b.b = VectorD(0.647683)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0546463,
 	-0.0818495,
 	260.341,
 	274.568,
 	2.66571,
 	1.63270,
 	1.29205,
 	13.0000,
 	504.000,
 	-2.00882,
 	-172.133,
 	-135.247,
 	Infinity,
 	128.201)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (799.301990127641,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.0841422,
 	-0.0937817,
 	0.0770992,
 	0.113172,
 	-0.122166,
 	-0.0636634,
 	0.393943,
 	0.237759,
 	0.136809,
 	0.0252240,
 	-0.218003,
 	-0.00439829,
 	0.00550549,
 	-0.145320,
 	-0.0854334,
 	-0.0115993,
 	0.0205486,
 	0.0555511,
 	0.0932449,
 	0.0600848,
 	0.386962,
 	0.0352276,
 	-0.0769119,
 	0.0690506,
 	-0.127890,
 	0.121443,
 	0.179514) 
 b.b = VectorD(0.677156)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0330373,
 	-0.0596831,
 	165.033,
 	170.485,
 	1.65519,
 	1.28654,
 	1.06123,
 	13.0000,
 	504.000,
 	-1.23987,
 	-144.518,
 	-107.632,
 	Infinity,
 	128.011)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (764.2728491419713,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.0941059,
 	-0.0757996,
 	0.198102,
 	0.169999,
 	-0.162740,
 	-0.0448226,
 	0.392677,
 	0.272051,
 	0.118666,
 	-0.000711167,
 	-0.212507,
 	0.0292292,
 	0.0105517,
 	-0.135246,
 	-0.0999356,
 	-0.0495734,
 	-0.00192748,
 	0.123302,
 	0.0700520,
 	0.0861875,
 	0.314116,
 	0.0368980,
 	-0.0614377,
 	0.106340,
 	-0.116700,
 	0.129895,
 	0.123043) 
 b.b = VectorD(0.642745)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0427313,
 	0.0180399,
 	210.791,
 	201.784,
 	1.95907,
 	1.39967,
 	1.15629,
 	13.0000,
 	504.000,
 	1.73061,
 	-152.822,
 	-115.936,
 	Infinity,
 	125.347)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (792.5793981597592,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.155627,
 	-0.110840,
 	0.235550,
 	0.172512,
 	-0.0507806,
 	-0.0651419,
 	0.440936,
 	0.276264,
 	0.132268,
 	0.0291296,
 	-0.281710,
 	0.0903244,
 	0.0432502,
 	-0.0857407,
 	-0.124000,
 	-0.119560,
 	-0.0299160,
 	0.104463,
 	0.0588215,
 	0.115530,
 	0.321982,
 	0.0127732,
 	-0.0605279,
 	0.0764709,
 	-0.107209,
 	0.130776,
 	0.153947) 
 b.b = VectorD(0.637493)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.158105,
 	-0.187976,
 	153.587,
 	177.870,
 	1.72689,
 	1.31411,
 	1.13118,
 	13.0000,
 	504.000,
 	-5.29279,
 	-146.477,
 	-109.591,
 	Infinity,
 	130.807)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (775.1883031573499,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.226978,
 	-0.136817,
 	0.210228,
 	0.196576,
 	-0.0912466,
 	-0.0681947,
 	0.447493,
 	0.248519,
 	0.168529,
 	-0.0320466,
 	-0.311955,
 	0.101371,
 	0.109320,
 	-0.135924,
 	-0.167132,
 	-0.0893026,
 	-0.0458941,
 	0.0711950,
 	0.0811428,
 	0.0898963,
 	0.380065,
 	-0.0106806,
 	-0.0881131,
 	0.0838501,
 	-0.159734,
 	0.140360,
 	0.0880335) 
 b.b = VectorD(0.733131)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.0341772,
 	-0.0608524,
 	189.018,
 	195.478,
 	1.89785,
 	1.37762,
 	1.15495,
 	13.0000,
 	504.000,
 	-1.28124,
 	-151.149,
 	-114.263,
 	Infinity,
 	140.797)
------------------------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 12) ADD variable (4, day) => cols = LinkedHashSet(0, 3, 11, 1, 9, 8, 6, 10, 7, 2, 12, 5, 4) @ 0.009578317610619558 |
------------------------------------------------------------------------------------------------------------------------------------------
k = 13, n = 13
Run + title
x-axis: minX = 0.0, maxX = 12.0
y-axis: minY = -5.0, maxY = 5.0
rSq = 
MatrixD(1.68377,	1.30196,	-1.79176,
 	1.98073,	1.40864,	-1.98941,
 	2.74925,	1.99096,	-1.71155,
 	2.94177,	1.99394,	-2.95120,
 	3.01226,	1.87346,	-2.87542,
 	3.40272,	2.07688,	-3.13001,
 	3.57200,	2.05643,	-3.26258,
 	3.76509,	2.06014,	-2.47735,
 	4.07287,	2.18082,	-3.09323,
 	3.83054,	1.73990,	-4.57708,
 	3.80906,	1.52333,	-3.63641,
 	3.44825,	0.957832,	-4.74469)
