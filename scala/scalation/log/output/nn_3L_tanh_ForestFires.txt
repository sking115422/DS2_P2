readFileIntoArray: C:\Users\Tango\Desktop\Projects\DS2_P2\scala\scalation\data\forestfires_cleaned.csv
load: read 99 data rows so far ...
load: read 199 data rows so far ...
load: read 299 data rows so far ...
load: read 399 data rows so far ...
load: read 499 data rows so far ...
load: read in an 517-by-13 matrix from forestfires_cleaned.csv
ox_fname = Array(intercept, X, Y, month, day, FFMC, DMC, DC, ISI, temp, RH, wind, rain)
------------------------------------------
| NeuralNet_3L for ForestFires with tanh |
------------------------------------------
 scaled: x = 
MatrixD(1.00000,	0.500000,	-0.142857,	-0.636364,	0.333333,	0.741935,	-0.827016,	-0.797350,	-0.818182,	-0.614148,	-0.152941,	0.400000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.636364,	-0.666667,	0.855484,	-0.763611,	0.550839,	-0.761141,	0.0160772,	-0.576471,	-0.888889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.636364,	0.666667,	0.855484,	-0.706409,	0.592588,	-0.761141,	-0.202572,	-0.576471,	-0.800000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	-0.636364,	0.333333,	0.883871,	-0.778084,	-0.836754,	-0.679144,	-0.607717,	0.929412,	-0.200000,	-0.937500,
 	1.00000,	0.750000,	0.142857,	-0.636364,	1.00000,	0.821935,	-0.654032,	-0.778820,	-0.657754,	-0.408360,	0.976471,	-0.688889,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	1.00000,	0.899355,	-0.419711,	0.126070,	-0.475936,	0.286174,	-0.670588,	0.111111,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	-1.00000,	0.899355,	-0.394900,	0.143896,	-0.696970,	0.408360,	-0.717647,	-0.400000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	-1.00000,	0.878710,	-0.00551344,	0.407998,	-0.618538,	-0.627010,	0.670588,	-0.600000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.454545,	-0.666667,	0.865806,	-0.115093,	0.605958,	-0.750446,	-0.299035,	0.129412,	0.111111,	-1.00000,
 	1.00000,	0.500000,	-0.142857,	0.454545,	0.666667,	0.904516,	-0.401103,	0.620030,	-0.746881,	0.324759,	-0.411765,	-0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.142857,	0.454545,	0.666667,	0.904516,	-0.401103,	0.620030,	-0.746881,	0.00321543,	-0.152941,	0.511111,	-1.00000,
 	1.00000,	0.500000,	-0.142857,	0.454545,	0.666667,	0.912258,	-0.503101,	0.653806,	-0.194296,	0.0996785,	-0.458824,	-0.200000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.272727,	0.333333,	0.156129,	-0.519642,	0.541926,	-0.971480,	-0.0482315,	0.341176,	0.400000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	-1.00000,	0.863226,	-0.135768,	0.591650,	-0.750446,	0.228296,	-0.364706,	-0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	-0.333333,	0.914839,	-0.0889042,	0.622376,	-0.672014,	0.556270,	-0.858824,	-0.0888889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	0.333333,	0.925161,	-0.0344590,	0.655917,	-0.504456,	0.331190,	-0.317647,	0.111111,	-1.00000,
 	1.00000,	0.00000,	-0.142857,	-0.636364,	0.666667,	0.883871,	-0.760855,	-0.829014,	-0.721925,	-0.170418,	-0.717647,	0.111111,	-1.00000,
 	1.00000,	0.750000,	-0.142857,	0.636364,	-1.00000,	0.708387,	-0.781530,	0.539346,	-0.893048,	-0.0675241,	-0.247059,	0.00000,	-1.00000,
 	1.00000,	0.250000,	-0.428571,	-0.636364,	-0.333333,	0.819355,	-0.815300,	-0.852469,	-0.775401,	-0.118971,	-0.529412,	-0.200000,	-1.00000,
 	1.00000,	0.250000,	-0.428571,	-0.454545,	0.666667,	0.744516,	-0.818746,	-0.790782,	-0.818182,	-0.543408,	-0.317647,	-0.0888889,	-1.00000,
 	1.00000,	0.250000,	-0.428571,	0.454545,	-0.666667,	0.865806,	-0.115093,	0.605958,	-0.750446,	0.0353698,	-0.411765,	-0.488889,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.454545,	-1.00000,	0.886452,	-0.466575,	0.680310,	-0.672014,	0.0868167,	-0.458824,	-0.488889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	-0.0909091,	1.00000,	0.950968,	-0.343901,	-0.549431,	1.00000,	0.209003,	-0.317647,	-0.0888889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.272727,	0.666667,	0.845161,	-0.243280,	0.241937,	-0.778966,	0.112540,	-0.341176,	0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.272727,	0.666667,	0.930323,	-0.0468642,	0.375161,	-0.276292,	0.382637,	-0.600000,	0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.272727,	1.00000,	0.876129,	-0.0261888,	0.392049,	-0.622103,	-0.0932476,	0.0588235,	0.111111,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	0.333333,	0.901935,	-0.195038,	0.548258,	-0.565062,	0.0803859,	-0.552941,	0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	-1.00000,	0.863226,	-0.135768,	0.591650,	-0.750446,	0.106109,	-0.223529,	-0.800000,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	0.666667,	0.927742,	-0.00551344,	0.673508,	-0.711230,	0.800643,	-0.788235,	-0.488889,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	1.00000,	0.930323,	0.0213646,	0.690395,	-0.711230,	0.324759,	-0.435294,	-0.288889,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	0.333333,	0.950968,	-0.421089,	0.605254,	-0.433155,	0.491961,	-0.788235,	-0.288889,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	-1.00000,	0.803871,	-0.374914,	0.646535,	-0.746881,	-0.421222,	0.482353,	0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	0.333333,	0.803871,	-0.527223,	0.639264,	-0.793226,	0.183280,	-0.482353,	-0.688889,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	1.00000,	0.883871,	-0.486561,	0.666237,	-0.721925,	-0.00321543,	-0.435294,	-0.288889,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	-1.00000,	0.886452,	-0.466575,	0.680310,	-0.672014,	0.221865,	-0.600000,	-0.488889,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	-0.666667,	0.847742,	-0.451413,	0.694148,	-0.775401,	0.0289389,	0.105882,	-0.0888889,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.636364,	-0.666667,	0.855484,	-0.763611,	0.550839,	-0.761141,	0.254019,	-0.788235,	-0.0888889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.636364,	0.333333,	0.840000,	-0.721571,	0.582503,	-0.689840,	-0.414791,	0.0588235,	0.111111,	-1.00000,
 	1.00000,	0.500000,	-0.714286,	0.636364,	0.666667,	0.855484,	-0.706409,	0.592588,	-0.761141,	0.00321543,	-0.717647,	-0.200000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	-0.636364,	-0.666667,	0.790968,	-0.830462,	-0.859974,	-0.864528,	-0.234727,	-0.341176,	-0.488889,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.0909091,	-0.666667,	0.569032,	-0.589938,	-0.158438,	-0.946524,	0.356913,	-0.482353,	-0.400000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.272727,	0.666667,	0.845161,	-0.339766,	0.445526,	-0.682709,	0.0418006,	-0.364706,	0.400000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.272727,	-0.666667,	0.963871,	-0.261199,	0.499238,	-0.393939,	-0.0739550,	-0.0823529,	0.111111,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.454545,	0.666667,	0.904516,	-0.401103,	0.620030,	-0.746881,	0.118971,	-0.223529,	-0.488889,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.454545,	-0.333333,	0.842581,	-0.436251,	0.707048,	-0.778966,	-0.311897,	0.388235,	0.00000,	-1.00000,
 	1.00000,	0.00000,	0.142857,	0.454545,	-0.333333,	0.950968,	-0.421089,	0.605254,	-0.433155,	0.524116,	-0.788235,	-0.200000,	-1.00000,
 	1.00000,	0.00000,	0.142857,	0.454545,	-1.00000,	0.863226,	-0.135768,	0.591650,	-0.750446,	-0.196141,	0.294118,	-0.288889,	-1.00000,
 	1.00000,	0.250000,	0.142857,	0.0909091,	-1.00000,	0.948387,	-0.578222,	0.0202885,	-0.607843,	0.337621,	-0.505882,	-0.400000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	-0.636364,	-1.00000,	0.767742,	-0.842867,	-0.866776,	-0.853832,	-0.382637,	-0.529412,	-0.688889,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	-0.636364,	-1.00000,	0.778065,	-0.647829,	-0.775067,	-0.821747,	-0.434084,	-0.270588,	0.200000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.454545,	0.00000,	0.914839,	-0.0634045,	0.638325,	-0.672014,	0.196141,	-0.952941,	-0.800000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.272727,	1.00000,	0.845161,	-0.321158,	0.461944,	-0.775401,	0.241158,	-0.552941,	-0.600000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.272727,	-0.333333,	0.894194,	-0.241213,	0.515656,	-0.657754,	0.170418,	-0.364706,	0.00000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.272727,	-0.333333,	0.894194,	-0.241213,	0.515656,	-0.657754,	0.170418,	-0.364706,	0.00000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.272727,	0.00000,	0.883871,	-0.219848,	0.532544,	-0.775401,	-0.00964630,	-0.294118,	-0.288889,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.454545,	0.00000,	0.914839,	-0.0634045,	0.638325,	-0.672014,	0.639871,	-0.788235,	-0.600000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.454545,	-0.666667,	0.847742,	-0.451413,	0.694148,	-0.775401,	0.00321543,	0.129412,	0.00000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.636364,	1.00000,	0.907097,	-0.687112,	0.604081,	-0.686275,	-0.254019,	-0.176471,	-0.488889,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	-0.818182,	-1.00000,	0.685161,	-0.943487,	-0.938783,	-0.925134,	-0.247588,	-0.411765,	0.111111,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	-0.818182,	0.333333,	0.752258,	-0.916609,	-0.917673,	-0.811052,	-0.350482,	-0.152941,	-0.888889,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	-0.636364,	1.00000,	0.821935,	-0.654032,	-0.778820,	-0.657754,	-0.401929,	-0.435294,	0.200000,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	-0.636364,	1.00000,	0.821935,	-0.654032,	-0.778820,	-0.657754,	-0.787781,	0.0352941,	0.311111,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.272727,	0.00000,	0.917419,	-0.488629,	0.0758766,	-0.725490,	0.0675241,	-0.529412,	0.00000,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.272727,	1.00000,	0.845161,	-0.321158,	0.461944,	-0.775401,	0.196141,	-0.576471,	-0.488889,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.272727,	-1.00000,	0.868387,	-0.296347,	0.479770,	-0.793226,	0.344051,	-0.623529,	-0.400000,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.272727,	0.00000,	0.883871,	-0.219848,	0.532544,	-0.775401,	0.0546624,	-0.317647,	-0.0888889,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.454545,	0.333333,	0.901935,	-0.195038,	0.548258,	-0.565062,	0.337621,	-0.482353,	-0.0888889,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.454545,	0.333333,	0.901935,	-0.195038,	0.548258,	-0.565062,	0.118971,	-0.576471,	0.111111,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.454545,	0.333333,	0.901935,	-0.195038,	0.548258,	-0.565062,	0.118971,	-0.576471,	0.311111,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	-0.636364,	0.333333,	0.883871,	-0.778084,	-0.836754,	-0.679144,	-0.0353698,	-0.741176,	-0.0888889,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	-0.636364,	0.333333,	0.870968,	-0.674707,	-0.789140,	-0.554367,	-0.125402,	-0.717647,	0.600000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.454545,	0.333333,	0.950968,	-0.421089,	0.605254,	-0.433155,	-0.00321543,	-0.482353,	-0.288889,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	-0.636364,	0.333333,	0.883871,	-0.778084,	-0.836754,	-0.679144,	-0.138264,	-0.764706,	0.311111,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.272727,	-0.666667,	0.809032,	0.00758098,	0.422775,	-0.679144,	-0.0289389,	-0.341176,	-0.0888889,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.454545,	0.333333,	0.925161,	-0.0344590,	0.655917,	-0.504456,	0.633441,	-0.647059,	-0.800000,	-1.00000,
 	1.00000,	1.00000,	1.00000,	-0.818182,	0.00000,	0.690323,	-0.960717,	-0.956139,	-0.725490,	-0.710611,	0.505882,	-0.400000,	-1.00000,
 	1.00000,	1.00000,	1.00000,	-0.818182,	0.333333,	0.752258,	-0.916609,	-0.917673,	-0.811052,	-0.131833,	-0.341176,	-0.400000,	-1.00000,
 	1.00000,	-1.00000,	-0.714286,	-0.636364,	-1.00000,	0.778065,	-0.647829,	-0.775067,	-0.821747,	-0.607717,	0.341176,	-0.400000,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.272727,	0.333333,	0.842581,	-0.263267,	0.224112,	-0.554367,	-0.196141,	0.200000,	-0.488889,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.272727,	-0.666667,	0.865806,	-0.172295,	0.298698,	-0.750446,	0.247588,	-0.905882,	0.400000,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.272727,	1.00000,	0.876129,	-0.0261888,	0.392049,	-0.622103,	0.112540,	-0.435294,	0.311111,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.272727,	1.00000,	0.845161,	-0.321158,	0.461944,	-0.775401,	0.00964630,	-0.317647,	-0.600000,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.272727,	-0.666667,	0.963871,	-0.261199,	0.499238,	-0.393939,	0.0546624,	-0.152941,	-0.0888889,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.272727,	-0.333333,	0.894194,	-0.241213,	0.515656,	-0.657754,	-0.0739550,	-0.247059,	-0.888889,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.272727,	0.00000,	0.883871,	-0.219848,	0.532544,	-0.775401,	0.157556,	-0.294118,	-0.288889,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.454545,	0.00000,	0.914839,	-0.0634045,	0.638325,	-0.672014,	0.241158,	-1.00000,	-0.888889,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.454545,	0.00000,	0.914839,	-0.0634045,	0.638325,	-0.672014,	0.491961,	-0.717647,	-0.600000,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.454545,	0.00000,	0.914839,	-0.0634045,	0.638325,	-0.672014,	0.299035,	-0.552941,	-0.600000,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.454545,	1.00000,	0.930323,	0.0213646,	0.690395,	-0.711230,	0.485531,	-0.505882,	-0.288889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.636364,	0.666667,	0.883871,	-0.760855,	-0.829014,	-0.721925,	-0.0225080,	-0.764706,	0.00000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.272727,	0.666667,	0.845161,	-0.339766,	0.445526,	-0.682709,	-0.196141,	0.0352941,	0.200000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	-0.636364,	0.333333,	0.883871,	-0.760855,	-0.829014,	-0.721925,	-0.0225080,	-0.788235,	0.111111,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	1.00000,	0.899355,	-0.419711,	0.126070,	-0.475936,	0.196141,	-0.600000,	0.311111,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	1.00000,	0.876129,	-0.0261888,	0.392049,	-0.622103,	0.0289389,	-0.341176,	0.00000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	-1.00000,	0.868387,	-0.296347,	0.479770,	-0.793226,	0.363344,	-0.835294,	-0.488889,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.454545,	1.00000,	0.832258,	-0.387319,	0.633634,	-0.828877,	0.00321543,	0.152941,	-0.800000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	-0.818182,	0.666667,	0.682581,	-0.952447,	-0.947696,	-0.907308,	-0.324759,	-0.223529,	-0.688889,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	-0.636364,	0.666667,	0.298065,	-0.991041,	-0.982174,	-0.975045,	-0.0225080,	-0.788235,	0.111111,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	1.00000,	0.876129,	-0.0261888,	0.392049,	-0.622103,	-0.395498,	0.694118,	-0.0888889,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	1.00000,	0.876129,	-0.0261888,	0.392049,	-0.622103,	0.131833,	-0.435294,	0.111111,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	1.00000,	0.876129,	-0.0261888,	0.392049,	-0.622103,	0.131833,	-0.435294,	0.111111,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	-0.666667,	0.809032,	0.00758098,	0.422775,	-0.679144,	-0.215434,	0.200000,	0.111111,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	-0.666667,	0.963871,	-0.261199,	0.499238,	-0.393939,	0.151125,	-0.411765,	-0.200000,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.454545,	0.666667,	0.904516,	-0.172984,	0.563270,	-0.693405,	0.408360,	-0.670588,	-0.0888889,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	-1.00000,	0.666667,	0.636129,	-0.982081,	-0.996716,	-0.896613,	-0.800643,	0.482353,	-0.400000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	-0.636364,	0.333333,	0.734194,	-0.873191,	-0.884133,	-0.900178,	-0.324759,	-0.129412,	0.311111,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	-0.636364,	0.00000,	0.876129,	-0.796003,	-0.844259,	-0.732620,	0.0289389,	-0.670588,	-0.400000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.272727,	1.00000,	0.845161,	-0.321158,	0.461944,	-0.775401,	0.234727,	-0.576471,	-0.400000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.454545,	0.666667,	0.904516,	-0.401103,	0.620030,	-0.746881,	0.163987,	-0.294118,	-0.400000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.454545,	-1.00000,	0.803871,	-0.374914,	0.646535,	-0.746881,	-0.0225080,	-0.0352941,	0.111111,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	-0.636364,	0.333333,	0.734194,	-0.873191,	-0.884133,	-0.900178,	-0.260450,	-0.341176,	0.200000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	-0.636364,	0.333333,	0.883871,	-0.778084,	-0.836754,	-0.679144,	0.0675241,	-0.929412,	-0.0888889,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.454545,	1.00000,	0.832258,	-0.387319,	0.633634,	-0.828877,	0.324759,	-0.435294,	-0.288889,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.454545,	-1.00000,	0.886452,	-0.466575,	0.680310,	-0.672014,	0.0739550,	-0.529412,	-0.488889,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	-0.636364,	-0.666667,	0.790968,	-0.830462,	-0.859974,	-0.864528,	-0.125402,	-0.717647,	0.600000,	-1.00000,
 	1.00000,	-0.500000,	-0.142857,	-0.636364,	-0.666667,	0.790968,	-0.830462,	-0.859974,	-0.864528,	-0.144695,	-0.717647,	0.311111,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	-0.636364,	0.666667,	0.883871,	-0.760855,	-0.829014,	-0.721925,	-0.395498,	-0.647059,	0.311111,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	-0.636364,	0.666667,	0.883871,	-0.760855,	-0.829014,	-0.721925,	-0.163987,	-0.717647,	0.00000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	-0.636364,	-1.00000,	0.842581,	-0.733977,	-0.815410,	-0.778966,	-0.459807,	-0.647059,	-0.200000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	0.00000,	0.917419,	-0.488629,	0.0758766,	-0.725490,	0.118971,	-0.505882,	-0.400000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	-1.00000,	0.878710,	-0.00551344,	0.407998,	-0.618538,	-0.479100,	0.388235,	-0.600000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	-1.00000,	0.878710,	-0.00551344,	0.407998,	-0.618538,	-0.0418006,	-0.341176,	0.111111,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.454545,	1.00000,	0.901935,	-0.152309,	0.578046,	-0.696970,	0.305466,	-0.364706,	0.111111,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.454545,	-0.666667,	0.695484,	-0.501723,	0.557406,	-0.885918,	0.00964630,	-0.294118,	-0.400000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.454545,	0.333333,	0.950968,	-0.421089,	0.605254,	-0.433155,	0.131833,	-0.176471,	0.111111,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.636364,	1.00000,	0.907097,	-0.687112,	0.604081,	-0.686275,	0.183280,	-0.788235,	0.111111,	-1.00000,
 	1.00000,	-0.500000,	-0.142857,	-0.636364,	-1.00000,	0.778065,	-0.647829,	-0.775067,	-0.821747,	-0.562701,	-0.200000,	-0.600000,	-1.00000,
 	1.00000,	-0.500000,	-0.142857,	0.454545,	0.333333,	0.930323,	0.0213646,	0.690395,	-0.711230,	-0.0353698,	-0.341176,	-0.400000,	-1.00000,
 	1.00000,	-0.500000,	-0.142857,	0.636364,	-0.333333,	0.876129,	-0.746382,	0.561862,	-0.814617,	-0.118971,	-0.270588,	-0.288889,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.636364,	1.00000,	0.907097,	-0.687112,	0.604081,	-0.686275,	-0.151125,	-0.529412,	-0.888889,	-1.00000,
 	1.00000,	-0.250000,	0.142857,	-0.818182,	0.666667,	0.277419,	-0.859407,	-0.814003,	-0.971480,	-0.151125,	-0.411765,	-0.488889,	-1.00000,
 	1.00000,	-0.250000,	0.142857,	-0.636364,	-1.00000,	0.767742,	-0.842867,	-0.866776,	-0.853832,	-0.241158,	-0.435294,	-0.400000,	-1.00000,
 	1.00000,	-0.250000,	0.142857,	-0.636364,	1.00000,	0.821935,	-0.654032,	-0.778820,	-0.657754,	-0.459807,	-0.270588,	0.00000,	-1.00000,
 	1.00000,	-0.250000,	0.142857,	0.454545,	0.00000,	0.935484,	-0.450034,	0.588601,	-0.361854,	-0.00964630,	-0.364706,	-0.400000,	-1.00000,
 	1.00000,	-0.500000,	-0.142857,	-0.636364,	-0.666667,	0.790968,	-0.830462,	-0.859974,	-0.864528,	-0.183280,	-0.458824,	-0.488889,	-1.00000,
 	1.00000,	-0.500000,	-0.142857,	0.272727,	0.666667,	0.930323,	-0.0468642,	0.375161,	-0.276292,	-0.00964630,	-0.129412,	0.200000,	-1.00000,
 	1.00000,	-0.500000,	0.142857,	0.454545,	1.00000,	0.901935,	-0.152309,	0.578046,	-0.696970,	-0.0353698,	0.0117647,	-0.800000,	-1.00000,
 	1.00000,	-0.500000,	0.142857,	0.454545,	-1.00000,	0.863226,	-0.135768,	0.591650,	-0.750446,	-0.138264,	0.200000,	-0.400000,	-1.00000,
 	1.00000,	1.00000,	1.00000,	0.0909091,	-0.666667,	0.731613,	-0.674707,	-0.283453,	-0.860963,	0.0160772,	-0.364706,	-0.488889,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.454545,	-0.666667,	0.865806,	-0.115093,	0.605958,	-0.750446,	0.254019,	-0.458824,	-0.600000,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.454545,	-1.00000,	0.863226,	-0.135768,	0.591650,	-0.750446,	0.266881,	-0.435294,	-0.688889,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.272727,	-0.333333,	0.981935,	-0.319090,	0.185411,	-0.529412,	0.356913,	-0.623529,	-0.0888889,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.333333,	0.842581,	-0.263267,	0.224112,	-0.554367,	0.221865,	-0.152941,	0.888889,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.0909091,	0.666667,	0.840000,	-0.654032,	-0.323560,	-0.689840,	-0.0739550,	-0.105882,	0.111111,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.272727,	-0.333333,	0.981935,	-0.319090,	0.185411,	-0.529412,	0.389068,	-0.600000,	0.111111,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.272727,	0.00000,	0.974194,	-0.0999311,	0.339041,	-0.629234,	0.620579,	-0.835294,	-0.200000,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	-0.636364,	-1.00000,	0.842581,	-0.733977,	-0.815410,	-0.778966,	-0.292605,	-0.411765,	0.111111,	-1.00000,
 	1.00000,	0.750000,	-0.714286,	0.454545,	-0.666667,	0.695484,	-0.501723,	0.557406,	-0.885918,	0.414791,	-0.694118,	-0.288889,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.272727,	-0.666667,	0.963871,	-0.261199,	0.499238,	-0.393939,	-0.0225080,	-0.341176,	0.400000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.454545,	0.00000,	0.935484,	-0.450034,	0.588601,	-0.361854,	0.382637,	-0.764706,	-0.0888889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.0909091,	0.333333,	0.904516,	-0.618884,	-0.00222822,	-0.746881,	0.350482,	-0.435294,	0.111111,	-1.00000,
 	1.00000,	1.00000,	1.00000,	0.0909091,	1.00000,	0.842581,	-0.534804,	-0.185411,	-0.743316,	0.453376,	-0.670588,	-0.600000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.0909091,	0.666667,	0.842581,	-0.654721,	-0.0238067,	-0.778966,	0.440514,	-0.341176,	-0.688889,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.454545,	0.333333,	0.950968,	-0.421089,	0.605254,	-0.433155,	0.151125,	-0.247059,	0.00000,	-1.00000,
 	1.00000,	-1.00000,	-0.142857,	0.454545,	0.666667,	0.927742,	-0.00551344,	0.673508,	-0.711230,	0.762058,	-0.717647,	-0.488889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.272727,	1.00000,	0.963871,	-0.261199,	0.499238,	-0.393939,	-0.0868167,	-0.247059,	-0.800000,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.454545,	0.666667,	0.927742,	-0.00551344,	0.673508,	-0.711230,	0.697749,	-0.717647,	-0.600000,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.272727,	-0.333333,	0.894194,	-0.241213,	0.515656,	-0.657754,	0.0418006,	-0.294118,	-0.288889,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	-0.333333,	0.894194,	-0.241213,	0.515656,	-0.657754,	0.176849,	-0.529412,	-0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	0.333333,	0.901935,	-0.195038,	0.548258,	-0.565062,	0.0803859,	-0.552941,	0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	-0.636364,	-1.00000,	0.842581,	-0.733977,	-0.815410,	-0.778966,	-0.106109,	-0.670588,	-0.400000,	-1.00000,
 	1.00000,	0.250000,	-0.428571,	0.272727,	0.00000,	0.974194,	-0.0999311,	0.339041,	-0.629234,	0.163987,	-0.388235,	-0.200000,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	-0.636364,	0.666667,	0.855484,	-0.662302,	-0.783042,	-0.721925,	-0.163987,	-0.623529,	0.800000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.454545,	0.666667,	0.904516,	-0.172984,	0.563270,	-0.693405,	0.00321543,	-0.0352941,	-0.688889,	-1.00000,
 	1.00000,	0.750000,	-0.142857,	0.454545,	1.00000,	0.832258,	-0.387319,	0.633634,	-0.828877,	0.00321543,	0.223529,	-0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.636364,	0.00000,	0.708387,	-0.882150,	-0.889527,	-0.893048,	-0.800643,	0.294118,	-0.0888889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.272727,	-0.333333,	0.894194,	-0.241213,	0.515656,	-0.657754,	-0.0739550,	-0.247059,	-0.888889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.272727,	-0.333333,	0.994839,	-0.131633,	0.319573,	-0.411765,	0.363344,	-0.576471,	-0.0888889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.636364,	0.333333,	0.870968,	-0.674707,	-0.789140,	-0.554367,	-0.202572,	-0.741176,	1.00000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.00000,	0.974194,	-0.0999311,	0.339041,	-0.629234,	0.189711,	-0.294118,	-0.600000,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.454545,	-0.333333,	0.914839,	-0.0889042,	0.622376,	-0.672014,	0.266881,	-0.529412,	-0.688889,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	-0.333333,	0.726452,	-0.384562,	0.411282,	-0.764706,	-0.0225080,	-0.176471,	-0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.272727,	1.00000,	0.876129,	-0.0261888,	0.392049,	-0.622103,	0.151125,	-0.435294,	0.111111,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.454545,	-1.00000,	0.863226,	-0.135768,	0.591650,	-0.750446,	-0.00321543,	-0.435294,	-0.600000,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.272727,	0.666667,	0.845161,	-0.339766,	0.445526,	-0.682709,	-0.228296,	-0.105882,	-0.688889,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.272727,	0.666667,	0.845161,	-0.339766,	0.445526,	-0.682709,	0.163987,	-0.435294,	0.00000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.454545,	0.00000,	0.620645,	-0.944866,	-0.889058,	-0.903743,	-0.768489,	-0.0823529,	0.200000,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.272727,	1.00000,	0.845161,	-0.321158,	0.461944,	-0.775401,	0.0932476,	-0.317647,	-0.488889,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.454545,	-0.333333,	0.842581,	-0.436251,	0.707048,	-0.778966,	0.0353698,	-0.294118,	-0.600000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	-0.666667,	0.809032,	0.00758098,	0.422775,	-0.679144,	-0.215434,	0.200000,	0.111111,	-1.00000,
 	1.00000,	-1.00000,	-0.714286,	0.454545,	1.00000,	0.901935,	-0.152309,	0.578046,	-0.696970,	0.395498,	-0.600000,	0.400000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.636364,	-1.00000,	0.708387,	-0.781530,	0.539346,	-0.893048,	0.0868167,	-0.600000,	-0.200000,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	-0.818182,	1.00000,	0.757419,	-0.900069,	-0.905242,	-0.860963,	-0.344051,	-0.105882,	-0.600000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.636364,	-1.00000,	0.883871,	-0.673329,	0.614167,	-0.604278,	-0.0610932,	-0.294118,	-0.0888889,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.333333,	0.940645,	-0.0723639,	0.357570,	-0.461676,	0.196141,	-0.552941,	0.00000,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.454545,	-0.666667,	0.865806,	-0.115093,	0.605958,	-0.750446,	-0.00964630,	-0.270588,	-0.400000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	-0.636364,	1.00000,	0.821935,	-0.654032,	-0.778820,	-0.657754,	-0.401929,	-0.435294,	0.200000,	-1.00000,
 	1.00000,	-1.00000,	-0.142857,	0.454545,	-1.00000,	0.863226,	-0.135768,	0.591650,	-0.750446,	0.209003,	-0.364706,	-0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.428571,	-0.636364,	0.666667,	0.860645,	-0.718815,	-0.808843,	-0.718360,	-0.286174,	-0.364706,	-0.888889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	-0.636364,	1.00000,	0.858065,	-0.704342,	-0.801806,	-0.803922,	-0.401929,	0.0588235,	-0.200000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.636364,	0.333333,	0.870968,	-0.674707,	-0.789140,	-0.554367,	-0.389068,	-0.576471,	-0.200000,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.272727,	0.00000,	0.974194,	-0.0999311,	0.339041,	-0.629234,	0.414791,	-0.694118,	-0.488889,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.272727,	-0.666667,	0.963871,	-0.261199,	0.499238,	-0.393939,	0.440514,	-0.835294,	-0.0888889,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.454545,	-0.333333,	0.914839,	-0.0889042,	0.622376,	-0.672014,	0.421222,	-0.764706,	-0.200000,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.272727,	-0.666667,	0.963871,	-0.261199,	0.499238,	-0.393939,	0.440514,	-0.835294,	-0.0888889,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.272727,	0.333333,	0.940645,	-0.0723639,	0.357570,	-0.461676,	0.369775,	-0.505882,	0.111111,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.454545,	0.00000,	0.620645,	-0.944866,	-0.889058,	-0.903743,	-0.768489,	-0.0823529,	0.200000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.454545,	0.00000,	0.914839,	-0.0634045,	0.638325,	-0.672014,	0.241158,	-1.00000,	-0.888889,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.454545,	-0.666667,	0.865806,	-0.115093,	0.605958,	-0.750446,	-0.247588,	0.0352941,	0.311111,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.454545,	-1.00000,	0.156129,	-0.519642,	0.541926,	-0.971480,	0.311897,	-0.458824,	-0.288889,	-1.00000,
 	1.00000,	-1.00000,	-0.142857,	0.454545,	-0.666667,	0.865806,	-0.115093,	0.605958,	-0.750446,	0.247588,	-0.576471,	-0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.636364,	1.00000,	0.842581,	-0.748449,	-0.822212,	-0.743316,	-0.344051,	-0.0823529,	-0.288889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	-0.818182,	1.00000,	0.682581,	-0.947622,	-0.943239,	-0.925134,	-0.575563,	0.247059,	-0.600000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.636364,	-0.333333,	0.876129,	-0.746382,	0.561862,	-0.814617,	0.157556,	-0.482353,	-0.488889,	-1.00000,
 	1.00000,	0.00000,	0.142857,	-0.636364,	0.666667,	0.855484,	-0.662302,	-0.783042,	-0.721925,	-0.170418,	0.152941,	-0.200000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.454545,	0.00000,	0.914839,	-0.0634045,	0.638325,	-0.672014,	0.279743,	-0.552941,	-0.688889,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.272727,	0.666667,	0.930323,	-0.0468642,	0.375161,	-0.276292,	0.331190,	-0.623529,	0.511111,	-1.00000,
 	1.00000,	0.500000,	-0.142857,	0.454545,	-0.666667,	0.865806,	-0.115093,	0.605958,	-0.750446,	0.189711,	-0.482353,	-0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	0.333333,	0.901935,	-0.195038,	0.548258,	-0.565062,	0.118971,	-0.576471,	0.311111,	-1.00000,
 	1.00000,	0.750000,	-0.714286,	0.454545,	0.00000,	0.935484,	-0.450034,	0.588601,	-0.361854,	0.350482,	-0.741176,	0.00000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.636364,	0.666667,	0.855484,	-0.706409,	0.592588,	-0.761141,	0.0418006,	-0.764706,	-0.400000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.272727,	0.666667,	0.930323,	-0.0468642,	0.375161,	-0.276292,	-0.813505,	0.905882,	0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	0.333333,	0.950968,	-0.421089,	0.605254,	-0.433155,	0.151125,	-0.247059,	0.00000,	-1.00000,
 	1.00000,	0.500000,	-0.714286,	-0.636364,	-1.00000,	0.778065,	-0.647829,	-0.775067,	-0.821747,	-0.434084,	-0.270588,	0.200000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	-0.636364,	0.666667,	0.883871,	-0.760855,	-0.829014,	-0.721925,	-0.0482315,	-0.717647,	0.00000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	-0.636364,	0.666667,	0.883871,	-0.760855,	-0.829014,	-0.721925,	-0.0482315,	-0.717647,	0.00000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.454545,	1.00000,	0.901935,	-0.152309,	0.578046,	-0.696970,	-0.0546624,	0.0588235,	-0.800000,	-1.00000,
 	1.00000,	-1.00000,	-0.714286,	0.454545,	-1.00000,	0.803871,	-0.374914,	0.646535,	-0.746881,	-0.344051,	0.364706,	0.311111,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.454545,	-0.333333,	0.914839,	-0.0889042,	0.622376,	-0.672014,	0.106109,	-0.905882,	-0.800000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.636364,	-1.00000,	0.842581,	-0.733977,	-0.815410,	-0.778966,	-0.163987,	-0.717647,	-0.400000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	1.00000,	0.845161,	-0.321158,	0.461944,	-0.775401,	-0.0996785,	0.0352941,	-0.400000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.454545,	0.333333,	0.925161,	-0.0344590,	0.655917,	-0.504456,	0.0546624,	-0.200000,	-0.288889,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	-0.636364,	-1.00000,	0.778065,	-0.647829,	-0.775067,	-0.821747,	-0.434084,	-0.270588,	0.200000,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.0909091,	0.333333,	0.796129,	0.0282564,	-0.291662,	-0.757576,	-0.279743,	0.505882,	-0.288889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	-0.333333,	0.842581,	-0.436251,	0.707048,	-0.778966,	-0.151125,	-0.0117647,	-0.0888889,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.454545,	1.00000,	0.930323,	0.0213646,	0.690395,	-0.711230,	0.331190,	-0.435294,	0.00000,	-1.00000,
 	1.00000,	0.500000,	-0.142857,	0.636364,	-1.00000,	0.883871,	-0.673329,	0.614167,	-0.604278,	-0.106109,	-0.317647,	-0.200000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.666667,	0.896774,	-0.443832,	0.109183,	-0.575758,	0.151125,	-0.552941,	-0.0888889,	-1.00000,
 	1.00000,	-0.250000,	0.142857,	0.454545,	1.00000,	0.930323,	0.0213646,	0.690395,	-0.711230,	0.678457,	-0.741176,	-0.400000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.666667,	0.896774,	-0.443832,	0.109183,	-0.575758,	-0.0868167,	-0.341176,	-0.200000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.454545,	-0.333333,	0.914839,	-0.0889042,	0.622376,	-0.672014,	0.556270,	-0.858824,	-0.0888889,	-1.00000,
 	1.00000,	-1.00000,	-0.142857,	0.454545,	1.00000,	0.930323,	0.0213646,	0.690395,	-0.711230,	0.646302,	-0.717647,	-0.400000,	-1.00000,
 	1.00000,	0.250000,	-0.428571,	0.454545,	-0.666667,	0.865806,	-0.115093,	0.605958,	-0.750446,	0.0610932,	-0.341176,	-0.488889,	-1.00000,
 	1.00000,	1.00000,	-0.428571,	0.454545,	-0.666667,	0.695484,	-0.501723,	0.557406,	-0.885918,	0.421222,	-0.505882,	-0.400000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.454545,	0.666667,	0.904516,	-0.172984,	0.563270,	-0.693405,	-0.00321543,	-0.764706,	-0.400000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	1.00000,	0.876129,	-0.0261888,	0.392049,	-0.622103,	0.118971,	-0.388235,	0.200000,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.454545,	0.666667,	0.904516,	-0.172984,	0.563270,	-0.693405,	0.0289389,	-0.270588,	-0.688889,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.454545,	-0.666667,	0.865806,	-0.115093,	0.605958,	-0.750446,	0.0675241,	-0.411765,	-0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	0.666667,	0.904516,	-0.172984,	0.563270,	-0.693405,	0.472669,	-0.717647,	-0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.142857,	-0.454545,	1.00000,	0.630968,	-0.986906,	-1.00000,	-0.875223,	-0.279743,	0.411765,	-0.688889,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	-0.454545,	-0.333333,	0.788387,	-0.889042,	-0.916501,	-0.864528,	-0.163987,	-0.152941,	-0.488889,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	-0.454545,	0.333333,	0.659355,	-0.847002,	-0.818459,	-0.918004,	-0.0675241,	-0.882353,	-0.400000,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	1.00000,	0.948387,	-0.164714,	0.365076,	-0.540107,	-0.151125,	0.200000,	-0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.272727,	1.00000,	0.886452,	0.199173,	0.624956,	-0.508021,	0.266881,	0.364706,	0.600000,	-0.687500,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	1.00000,	0.886452,	0.199173,	0.624956,	-0.508021,	0.299035,	-0.0823529,	0.600000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	1.00000,	0.886452,	0.199173,	0.624956,	-0.508021,	0.581994,	-0.458824,	0.311111,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.272727,	1.00000,	0.886452,	0.199173,	0.624956,	-0.508021,	0.511254,	-0.435294,	0.111111,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	-0.333333,	0.896774,	-0.376292,	0.162660,	-0.657754,	0.189711,	0.294118,	-0.600000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	-0.333333,	0.920000,	0.0764990,	0.545209,	-0.518717,	0.704180,	-0.694118,	-0.488889,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	-0.333333,	0.920000,	0.0764990,	0.545209,	-0.518717,	0.254019,	-0.411765,	-1.00000,	-1.00000,
 	1.00000,	0.750000,	-0.142857,	0.272727,	-0.333333,	0.920000,	0.0764990,	0.545209,	-0.518717,	0.581994,	-0.764706,	-0.400000,	-1.00000,
 	1.00000,	0.750000,	-0.142857,	0.272727,	-0.333333,	0.920000,	0.0764990,	0.545209,	-0.518717,	0.401929,	-0.505882,	-0.400000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.272727,	-0.333333,	0.920000,	0.0764990,	0.545209,	-0.518717,	0.279743,	-0.482353,	-0.288889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.272727,	0.00000,	0.889032,	-0.254997,	0.307846,	-0.714795,	0.234727,	-0.458824,	-0.488889,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.272727,	0.00000,	0.881290,	-0.0558236,	0.439662,	-0.775401,	0.0739550,	-0.388235,	-0.400000,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.272727,	0.00000,	0.775484,	-0.476912,	0.611118,	-0.821747,	0.292605,	-0.270588,	-0.200000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.666667,	0.948387,	-0.199862,	0.344435,	-0.607843,	0.395498,	-0.388235,	-0.600000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.272727,	0.666667,	0.948387,	-0.199862,	0.344435,	-0.607843,	0.234727,	-0.317647,	-0.488889,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	0.666667,	0.886452,	0.170227,	0.605254,	-0.511586,	0.183280,	0.0352941,	-0.888889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.272727,	0.666667,	0.886452,	0.170227,	0.605254,	-0.511586,	0.382637,	-0.411765,	-0.688889,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	-1.00000,	0.932903,	-0.332874,	0.252727,	-0.486631,	0.678457,	-0.600000,	-0.200000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	0.333333,	0.881290,	-0.232943,	0.325437,	-0.682709,	-0.421222,	0.623529,	0.600000,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	0.333333,	0.881290,	-0.232943,	0.325437,	-0.682709,	0.234727,	-0.364706,	-0.400000,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.272727,	0.333333,	0.868387,	-0.0351482,	0.457019,	-0.746881,	0.0996785,	-0.435294,	-0.288889,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.272727,	0.333333,	0.950968,	0.147484,	0.586725,	-0.536542,	0.260450,	-0.105882,	-0.400000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.272727,	-0.666667,	0.935484,	-0.303239,	0.272194,	-0.479501,	0.279743,	-0.0823529,	0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.272727,	-0.666667,	0.950968,	-0.0999311,	0.405418,	-0.190731,	0.106109,	-0.0588235,	-0.200000,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.272727,	-0.666667,	0.894194,	0.0441075,	0.525273,	-0.490196,	0.382637,	-0.788235,	-0.400000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	-0.666667,	0.894194,	0.0441075,	0.525273,	-0.490196,	0.209003,	-0.600000,	-0.400000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.272727,	-0.666667,	0.894194,	0.0441075,	0.525273,	-0.490196,	0.0868167,	-0.105882,	-0.488889,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.272727,	-0.666667,	0.894194,	0.0441075,	0.525273,	-0.490196,	0.260450,	-0.0352941,	-0.400000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	-0.666667,	0.894194,	0.0441075,	0.525273,	-0.490196,	0.151125,	0.0117647,	-0.0888889,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.272727,	-0.666667,	0.894194,	0.0441075,	0.525273,	-0.490196,	0.157556,	-0.247059,	-0.200000,	-1.00000,
 	1.00000,	-0.250000,	0.142857,	1.00000,	1.00000,	0.695484,	-0.820124,	-0.189398,	-0.757576,	-0.832797,	-0.0117647,	0.800000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	1.00000,	-0.333333,	0.685161,	-0.815989,	-0.186818,	-0.811052,	-0.813505,	0.0823529,	0.688889,	-1.00000,
 	1.00000,	-0.250000,	0.142857,	1.00000,	0.00000,	0.700645,	-0.825637,	-0.192917,	-0.928699,	-0.813505,	0.0823529,	0.00000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	1.00000,	-1.00000,	0.721290,	-0.832529,	-0.198311,	-0.907308,	-0.845659,	-0.858824,	0.800000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	1.00000,	-1.00000,	0.721290,	-0.832529,	-0.198311,	-0.907308,	-0.845659,	-0.858824,	0.800000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	1.00000,	-1.00000,	0.721290,	-0.832529,	-0.198311,	-0.907308,	-0.845659,	-0.858824,	0.800000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	1.00000,	-1.00000,	0.721290,	-0.832529,	-0.198311,	-0.907308,	-0.845659,	-0.858824,	0.800000,	-1.00000,
 	1.00000,	-0.250000,	0.142857,	1.00000,	0.333333,	0.703226,	-0.823570,	-0.191509,	-0.853832,	-1.00000,	0.0352941,	0.00000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	1.00000,	-0.666667,	0.721290,	-0.832529,	-0.198311,	-0.907308,	-0.813505,	-0.788235,	0.800000,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	-0.818182,	1.00000,	0.708387,	-0.818057,	-0.189398,	-0.878788,	-0.871383,	-0.152941,	-0.200000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	-0.818182,	-0.333333,	0.760000,	-0.962095,	-0.974669,	-0.885918,	-0.575563,	-0.529412,	-0.400000,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	-0.818182,	0.333333,	0.716129,	-0.973811,	-0.981471,	-0.775401,	-0.659164,	-0.270588,	0.688889,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.0909091,	1.00000,	0.940645,	0.161957,	-0.0526563,	-0.561497,	0.363344,	-0.411765,	0.311111,	-1.00000,
 	1.00000,	0.500000,	0.142857,	0.0909091,	-0.333333,	0.870968,	0.254307,	0.00809194,	-0.554367,	-0.331190,	0.764706,	0.600000,	-0.937500,
 	1.00000,	0.500000,	-0.428571,	0.0909091,	0.666667,	0.881290,	-0.289456,	0.0953442,	-0.679144,	0.279743,	-0.200000,	-0.488889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.0909091,	0.666667,	0.881290,	-0.289456,	0.0953442,	-0.679144,	0.414791,	-0.600000,	-0.688889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.0909091,	0.666667,	0.881290,	-0.289456,	0.0953442,	-0.679144,	0.421222,	-0.647059,	-0.688889,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.0909091,	0.666667,	0.881290,	-0.289456,	0.0953442,	-0.679144,	0.0610932,	-0.105882,	-0.688889,	-1.00000,
 	1.00000,	1.00000,	-0.428571,	0.0909091,	0.666667,	0.881290,	-0.289456,	0.0953442,	-0.679144,	0.485531,	-0.435294,	-0.888889,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.0909091,	0.333333,	0.881290,	-0.317023,	0.0751730,	-0.775401,	0.331190,	-0.411765,	-0.800000,	-1.00000,
 	1.00000,	0.500000,	0.142857,	0.0909091,	-0.666667,	0.920000,	0.235700,	-0.00809194,	-0.607843,	0.588424,	-0.694118,	0.111111,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.0909091,	-0.666667,	0.899355,	-0.395589,	0.0155975,	-0.696970,	-0.0418006,	0.223529,	-0.288889,	-1.00000,
 	1.00000,	0.500000,	-0.142857,	-0.0909091,	1.00000,	0.920000,	0.235700,	-0.00809194,	-0.607843,	0.286174,	-0.223529,	-0.800000,	-1.00000,
 	1.00000,	0.250000,	-0.428571,	-0.0909091,	1.00000,	0.850323,	-0.390765,	-0.336461,	-0.771836,	-0.221865,	-0.270588,	-0.688889,	-1.00000,
 	1.00000,	0.750000,	0.142857,	-0.0909091,	1.00000,	0.850323,	-0.390765,	-0.336461,	-0.771836,	-0.151125,	-0.294118,	-0.600000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	-0.0909091,	-0.333333,	0.870968,	0.0110269,	-0.133810,	-0.547237,	0.118971,	-0.341176,	0.00000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.0909091,	0.666667,	-0.104516,	-0.518263,	-0.470154,	-0.985740,	-0.459807,	0.764706,	-0.488889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.0909091,	-1.00000,	0.850323,	-0.364576,	-0.319339,	-0.732620,	0.189711,	-0.764706,	0.00000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.0909091,	-1.00000,	0.850323,	-0.364576,	-0.319339,	-0.732620,	0.0868167,	-0.435294,	0.111111,	-1.00000,
 	1.00000,	-0.500000,	0.142857,	-0.0909091,	0.333333,	0.868387,	-0.359063,	-0.474141,	-0.746881,	0.0932476,	-0.458824,	-0.0888889,	-1.00000,
 	1.00000,	-0.500000,	0.142857,	-0.0909091,	0.333333,	0.868387,	-0.359063,	-0.474141,	-0.746881,	0.0932476,	-0.458824,	-0.0888889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.272727,	0.666667,	0.713548,	-0.814611,	-0.751613,	-0.875223,	-0.414791,	0.858824,	0.00000,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.454545,	1.00000,	0.829677,	-0.427981,	0.656855,	-0.796791,	0.0803859,	-0.129412,	-0.600000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	1.00000,	0.829677,	-0.427981,	0.656855,	-0.796791,	-0.0418006,	-0.105882,	0.111111,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.454545,	1.00000,	0.829677,	-0.427981,	0.656855,	-0.796791,	0.389068,	-0.529412,	-0.288889,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.454545,	1.00000,	0.901935,	-0.278429,	0.759587,	-0.647059,	-0.112540,	-0.294118,	-0.688889,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.454545,	1.00000,	0.901935,	-0.278429,	0.759587,	-0.647059,	0.459807,	-0.717647,	-0.600000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	1.00000,	0.901935,	-0.278429,	0.759587,	-0.647059,	0.485531,	-0.717647,	-0.488889,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	1.00000,	0.901935,	-0.278429,	0.759587,	-0.647059,	0.453376,	-0.694118,	-0.688889,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.454545,	1.00000,	-0.181935,	-0.689180,	0.638794,	-0.985740,	-0.356913,	0.482353,	0.311111,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	-0.333333,	0.907097,	-0.212267,	0.804152,	-0.686275,	0.421222,	-0.717647,	0.00000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.454545,	-0.333333,	0.907097,	-0.212267,	0.804152,	-0.686275,	0.125402,	-0.388235,	-0.688889,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.454545,	-0.333333,	0.870968,	-0.0792557,	0.898909,	-0.743316,	0.0482315,	-0.647059,	-0.488889,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.454545,	0.00000,	0.901935,	-0.344590,	0.715727,	-0.693405,	0.0546624,	-0.788235,	0.200000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.454545,	0.00000,	0.901935,	-0.344590,	0.715727,	-0.693405,	0.0932476,	-0.788235,	0.00000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	0.00000,	0.912258,	-0.187457,	0.819163,	-0.732620,	0.247588,	-0.717647,	-0.600000,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.454545,	0.00000,	0.912258,	-0.187457,	0.819163,	-0.732620,	0.247588,	-0.694118,	0.311111,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	0.00000,	0.912258,	-0.187457,	0.819163,	-0.732620,	0.0739550,	-0.552941,	0.511111,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.454545,	0.00000,	0.912258,	-0.187457,	0.819163,	-0.732620,	-0.0610932,	-0.694118,	-0.200000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	0.00000,	0.912258,	-0.187457,	0.819163,	-0.732620,	-0.0610932,	-0.694118,	-0.200000,	-1.00000,
 	1.00000,	-0.500000,	-0.142857,	0.454545,	0.00000,	0.858065,	-0.0640937,	0.911340,	-0.757576,	-0.311897,	-0.435294,	-0.488889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	0.00000,	0.790968,	-0.640248,	0.686408,	-0.807487,	-0.260450,	-0.0352941,	-0.688889,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.454545,	0.666667,	0.896774,	-0.302550,	0.744107,	-0.700535,	0.414791,	-0.717647,	-0.400000,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.454545,	0.666667,	0.896774,	-0.302550,	0.744107,	-0.700535,	0.408360,	-0.717647,	-0.400000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	0.666667,	0.896774,	-0.302550,	0.744107,	-0.700535,	0.221865,	-0.600000,	-0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	0.666667,	0.896774,	-0.302550,	0.744107,	-0.700535,	0.125402,	-0.529412,	-0.688889,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.454545,	0.666667,	0.896774,	-0.302550,	0.744107,	-0.700535,	0.369775,	-0.717647,	-0.200000,	-1.00000,
 	1.00000,	-0.500000,	-0.714286,	0.454545,	0.666667,	0.896774,	-0.302550,	0.744107,	-0.700535,	0.414791,	-0.717647,	-0.400000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	0.666667,	0.870968,	-0.150241,	0.846839,	-0.696970,	0.241158,	-0.694118,	-0.0888889,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.454545,	0.666667,	0.870968,	-0.150241,	0.846839,	-0.696970,	-0.0418006,	-0.388235,	-0.600000,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.454545,	-1.00000,	0.894194,	-0.403170,	0.672804,	-0.661319,	0.0225080,	-0.0823529,	-0.400000,	-1.00000,
 	1.00000,	-0.750000,	-0.714286,	0.454545,	-1.00000,	0.881290,	-0.260510,	0.773426,	-0.778966,	0.0160772,	-0.152941,	0.111111,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.454545,	-1.00000,	0.881290,	-0.260510,	0.773426,	-0.778966,	-0.511254,	0.670588,	-0.688889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	-1.00000,	0.881290,	-0.260510,	0.773426,	-0.778966,	0.0996785,	-0.317647,	-0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	-1.00000,	0.881290,	-0.260510,	0.773426,	-0.778966,	0.337621,	-0.552941,	-0.600000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.454545,	-1.00000,	0.881290,	-0.260510,	0.773426,	-0.778966,	0.318328,	-0.529412,	-0.600000,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.454545,	-1.00000,	0.881290,	-0.260510,	0.773426,	-0.778966,	0.170418,	-0.388235,	-0.688889,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.454545,	-1.00000,	0.881290,	-0.260510,	0.773426,	-0.778966,	0.0996785,	-0.317647,	-0.600000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.454545,	-1.00000,	0.889032,	-0.237767,	0.788202,	-0.768271,	-0.131833,	-0.152941,	-0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	-1.00000,	0.878710,	-0.110958,	0.874516,	-0.732620,	0.183280,	-0.482353,	-0.688889,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.454545,	-1.00000,	0.878710,	-0.110958,	0.874516,	-0.732620,	-0.118971,	-0.152941,	-0.0888889,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	-1.00000,	0.878710,	-0.110958,	0.874516,	-0.732620,	-0.356913,	0.200000,	0.00000,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.454545,	-1.00000,	0.878710,	-0.110958,	0.874516,	-0.732620,	-0.0610932,	-0.341176,	-0.400000,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.454545,	-1.00000,	0.878710,	-0.110958,	0.874516,	-0.732620,	0.228296,	-0.529412,	-0.600000,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.454545,	0.333333,	0.894194,	-0.325293,	0.729565,	-0.657754,	-0.491961,	0.411765,	-0.288889,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.454545,	0.333333,	0.894194,	-0.325293,	0.729565,	-0.657754,	-0.0225080,	-0.0117647,	-0.0888889,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.454545,	0.333333,	0.894194,	-0.325293,	0.729565,	-0.657754,	-0.318328,	0.152941,	-0.288889,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.454545,	0.333333,	0.894194,	-0.325293,	0.729565,	-0.657754,	-0.491961,	0.411765,	-0.288889,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.454545,	0.333333,	0.894194,	-0.325293,	0.729565,	-0.657754,	-0.151125,	-0.105882,	0.311111,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	0.333333,	0.894194,	-0.325293,	0.729565,	-0.657754,	0.183280,	-0.341176,	-0.288889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	0.333333,	0.894194,	-0.325293,	0.729565,	-0.657754,	0.131833,	-0.247059,	-0.488889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	0.333333,	0.894194,	-0.325293,	0.729565,	-0.657754,	0.0610932,	-0.176471,	-0.600000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.454545,	0.333333,	0.894194,	-0.325293,	0.729565,	-0.657754,	0.196141,	-0.529412,	0.00000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.454545,	0.333333,	0.894194,	-0.325293,	0.729565,	-0.657754,	0.196141,	-0.529412,	0.00000,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	0.333333,	0.904516,	-0.166782,	0.833705,	-0.636364,	-0.118971,	-0.0588235,	-0.288889,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.454545,	0.333333,	0.904516,	-0.166782,	0.833705,	-0.636364,	0.125402,	-0.435294,	-0.488889,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.454545,	0.333333,	0.904516,	-0.166782,	0.833705,	-0.636364,	0.215434,	-0.435294,	-0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	0.333333,	0.904516,	-0.166782,	0.833705,	-0.636364,	0.0418006,	-0.364706,	-0.600000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.454545,	0.333333,	0.904516,	-0.166782,	0.833705,	-0.636364,	-0.0289389,	-0.294118,	-0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	0.333333,	0.793548,	-0.627154,	0.699074,	-0.586453,	-0.163987,	0.152941,	-0.400000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.454545,	-0.666667,	0.889032,	-0.237767,	0.788202,	-0.768271,	-0.118971,	-0.105882,	-0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	-0.666667,	0.889032,	-0.237767,	0.788202,	-0.768271,	0.215434,	-0.529412,	-0.488889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	-0.666667,	0.889032,	-0.237767,	0.788202,	-0.768271,	0.118971,	-0.294118,	-0.400000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.454545,	-0.666667,	0.868387,	-0.0957960,	0.886244,	-0.554367,	-0.118971,	-0.458824,	0.111111,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.454545,	-0.666667,	0.868387,	-0.0957960,	0.886244,	-0.554367,	-0.0868167,	-0.717647,	-0.288889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	0.666667,	0.870968,	-0.357684,	0.727454,	-0.700535,	-0.0610932,	-0.247059,	0.00000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.454545,	1.00000,	0.865806,	0.896623,	0.916735,	-0.746881,	-0.254019,	0.458824,	0.600000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	1.00000,	0.865806,	0.896623,	0.916735,	-0.746881,	-0.254019,	0.458824,	0.600000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.0909091,	-0.333333,	0.889032,	-0.0868367,	0.202299,	-0.714795,	-0.228296,	0.0117647,	-0.200000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.272727,	1.00000,	0.891613,	0.392833,	0.540049,	-0.711230,	-0.472669,	0.411765,	-0.888889,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.272727,	0.00000,	0.963871,	0.525155,	0.620030,	-0.504456,	0.163987,	-0.364706,	-0.488889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	0.333333,	0.847742,	0.991041,	0.987569,	-0.736185,	-0.479100,	0.482353,	-0.200000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	0.666667,	0.870968,	-0.357684,	0.727454,	-0.700535,	-0.151125,	-0.0117647,	0.00000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	-1.00000,	0.894194,	0.419021,	0.559048,	-0.707665,	0.215434,	-0.0823529,	-0.600000,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.272727,	0.666667,	0.935484,	0.585114,	0.658731,	-0.700535,	0.266881,	-0.364706,	-0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.636364,	0.00000,	0.863226,	-0.877326,	-0.946757,	-0.714795,	-0.581994,	-0.152941,	0.200000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	-1.00000,	1.00000,	-1.00000,	-1.00000,	-0.616512,	-1.00000,	-0.807074,	1.00000,	-0.888889,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.0909091,	-0.333333,	0.935484,	-0.309442,	0.0575818,	-0.575758,	0.0996785,	-0.435294,	0.511111,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.00000,	0.858065,	0.330117,	0.489621,	-0.757576,	-0.0996785,	0.129412,	-0.488889,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	-0.333333,	0.974194,	0.492764,	0.599859,	-0.358289,	0.672026,	-0.670588,	-0.688889,	-1.00000,
 	1.00000,	1.00000,	0.142857,	0.272727,	0.00000,	0.881290,	0.704342,	0.749502,	-0.775401,	0.176849,	0.0117647,	-0.488889,	-1.00000,
 	1.00000,	0.750000,	-0.428571,	0.272727,	0.666667,	0.881290,	0.879394,	0.902662,	-0.725490,	0.228296,	-0.317647,	-0.0888889,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	1.00000,	0.881290,	0.241902,	0.419256,	-0.729055,	0.202572,	-0.176471,	-0.600000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.454545,	1.00000,	0.852903,	-0.341144,	0.741761,	-0.593583,	0.183280,	-0.0588235,	0.111111,	-1.00000,
 	1.00000,	0.00000,	-0.142857,	-0.636364,	0.00000,	0.863226,	-0.877326,	-0.946757,	-0.714795,	-0.395498,	-0.223529,	0.111111,	-1.00000,
 	1.00000,	0.250000,	-0.428571,	0.272727,	0.333333,	0.963871,	0.556857,	0.639029,	-0.572193,	0.356913,	-0.552941,	-0.400000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.272727,	0.333333,	0.963871,	0.556857,	0.639029,	-0.572193,	0.356913,	-0.552941,	-0.400000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	-0.818182,	-1.00000,	0.703226,	-0.942109,	-0.881787,	-0.853832,	-0.659164,	0.317647,	0.311111,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.454545,	0.333333,	0.868387,	-0.378360,	0.712677,	-0.743316,	0.189711,	-0.270588,	-0.488889,	-1.00000,
 	1.00000,	-1.00000,	-0.714286,	0.454545,	1.00000,	0.865806,	0.896623,	0.916735,	-0.746881,	0.266881,	-0.341176,	-0.200000,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	-0.636364,	-0.666667,	0.927742,	-0.904204,	-0.958485,	-0.593583,	-0.163987,	-0.905882,	0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.818182,	-1.00000,	0.687742,	-0.975879,	-0.908995,	-0.921569,	-0.800643,	0.247059,	-0.688889,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	-0.818182,	1.00000,	0.710968,	-0.945555,	-0.885071,	-0.875223,	-0.491961,	0.105882,	-0.688889,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.454545,	1.00000,	0.852903,	-0.341144,	0.741761,	-0.593583,	0.170418,	-0.0588235,	0.00000,	-1.00000,
 	1.00000,	0.00000,	0.142857,	0.272727,	1.00000,	0.881290,	0.241902,	0.419256,	-0.729055,	0.421222,	-0.576471,	-0.288889,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.272727,	0.666667,	0.935484,	0.585114,	0.658731,	-0.700535,	0.524116,	-0.600000,	-0.400000,	-1.00000,
 	1.00000,	1.00000,	-0.142857,	-0.0909091,	-0.333333,	0.925161,	-0.666437,	-0.320277,	-0.500891,	0.659164,	-0.552941,	-0.0888889,	-1.00000,
 	1.00000,	1.00000,	-0.142857,	-0.0909091,	-0.333333,	0.925161,	-0.666437,	-0.320277,	-0.500891,	0.659164,	-0.552941,	-0.0888889,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.454545,	0.00000,	0.868387,	-0.399724,	0.697666,	-0.704100,	0.324759,	-0.270588,	-0.200000,	-1.00000,
 	1.00000,	1.00000,	1.00000,	0.272727,	0.333333,	0.963871,	0.556857,	0.639029,	-0.572193,	0.466238,	-0.505882,	-0.200000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.00000,	0.858065,	0.330117,	0.489621,	-0.757576,	0.228296,	-0.388235,	-0.288889,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.454545,	-0.333333,	0.785806,	-0.423156,	0.682186,	-0.868093,	0.260450,	-0.552941,	-0.600000,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.272727,	-0.666667,	0.958710,	0.454170,	0.578515,	-0.661319,	0.652733,	-0.717647,	-0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.454545,	0.666667,	0.765161,	1.00000,	1.00000,	-0.857398,	-0.0482315,	0.223529,	0.00000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	-0.818182,	0.666667,	0.703226,	-0.951068,	-0.889527,	-0.896613,	-0.228296,	-0.270588,	-0.200000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.454545,	0.333333,	0.847742,	0.991041,	0.987569,	-0.736185,	0.138264,	-0.317647,	-0.400000,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.0909091,	-0.666667,	0.899355,	-0.344590,	0.0374106,	-0.568627,	0.363344,	-0.623529,	0.111111,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	-0.818182,	0.333333,	0.687742,	-0.957271,	-0.894687,	-0.903743,	-0.196141,	-0.364706,	-0.488889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	-0.818182,	0.333333,	0.700645,	-0.985527,	-0.916266,	-0.882353,	-0.614148,	-0.105882,	1.00000,	-1.00000,
 	1.00000,	1.00000,	-0.428571,	0.0909091,	-1.00000,	0.899355,	-0.372846,	0.0184121,	-0.650624,	0.324759,	-0.717647,	-0.0888889,	-1.00000,
 	1.00000,	0.500000,	-0.142857,	0.272727,	0.666667,	0.935484,	0.585114,	0.658731,	-0.700535,	0.556270,	-0.576471,	-0.288889,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.272727,	1.00000,	0.932903,	0.612681,	0.677495,	-0.639929,	0.408360,	-0.176471,	-0.200000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.00000,	0.963871,	0.525155,	0.620030,	-0.504456,	0.627010,	-0.717647,	0.00000,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.0909091,	-0.666667,	0.909677,	0.123363,	0.332004,	-0.682709,	0.549839,	-0.435294,	-0.400000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.636364,	-0.333333,	0.927742,	-0.888353,	-0.952152,	-0.647059,	-0.254019,	-0.788235,	0.200000,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	1.00000,	0.891613,	0.392833,	0.540049,	-0.711230,	0.459807,	-0.364706,	0.111111,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.272727,	1.00000,	0.881290,	0.241902,	0.419256,	-0.729055,	0.453376,	-0.505882,	-0.200000,	-1.00000,
 	1.00000,	0.750000,	0.714286,	0.272727,	-0.333333,	0.883871,	0.311509,	0.472968,	-0.721925,	0.543408,	-0.505882,	-0.0888889,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	-0.333333,	0.974194,	0.492764,	0.599859,	-0.358289,	0.839228,	-0.905882,	-0.0888889,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.0909091,	1.00000,	0.811613,	0.805651,	0.848247,	-0.814617,	0.742765,	-0.717647,	-0.288889,	-1.00000,
 	1.00000,	-1.00000,	-0.714286,	0.454545,	0.666667,	0.870968,	-0.357684,	0.727454,	-0.700535,	0.292605,	-0.223529,	-0.200000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.666667,	0.935484,	0.585114,	0.658731,	-0.700535,	0.588424,	-0.623529,	-0.288889,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	0.272727,	0.00000,	0.881290,	0.704342,	0.749502,	-0.775401,	0.170418,	-0.0352941,	-0.600000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.00000,	0.881290,	0.704342,	0.749502,	-0.775401,	0.170418,	-0.0352941,	-0.600000,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	-1.00000,	0.894194,	0.419021,	0.559048,	-0.707665,	0.652733,	-0.576471,	-0.600000,	-1.00000,
 	1.00000,	-1.00000,	-0.714286,	0.272727,	0.00000,	0.963871,	0.525155,	0.620030,	-0.504456,	0.543408,	-0.552941,	0.200000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	1.00000,	0.881290,	0.241902,	0.419256,	-0.729055,	0.440514,	-0.317647,	-0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	0.00000,	0.832258,	0.971744,	0.973496,	-0.757576,	0.106109,	-0.294118,	-0.288889,	-1.00000,
 	1.00000,	-1.00000,	-0.714286,	0.272727,	0.666667,	0.894194,	0.219159,	0.401196,	-0.657754,	0.356913,	-0.411765,	-0.200000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.00000,	0.963871,	0.525155,	0.620030,	-0.504456,	0.395498,	-0.458824,	0.400000,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	1.00000,	0.932903,	0.612681,	0.677495,	-0.639929,	0.202572,	0.200000,	0.00000,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.272727,	0.333333,	0.855484,	0.851826,	0.884133,	-0.803922,	0.286174,	-0.294118,	-0.288889,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.0909091,	0.666667,	0.860645,	-0.423846,	-0.135218,	-0.800357,	0.389068,	-0.152941,	-0.688889,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	-1.00000,	0.894194,	0.419021,	0.559048,	-0.707665,	0.581994,	-0.529412,	-0.800000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.666667,	0.824516,	0.740179,	0.783746,	-0.654189,	-0.228296,	0.364706,	-0.488889,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.272727,	0.666667,	0.935484,	0.585114,	0.658731,	-0.700535,	0.376206,	-0.105882,	-0.200000,	-1.00000,
 	1.00000,	-1.00000,	-0.714286,	0.454545,	0.333333,	0.868387,	-0.378360,	0.712677,	-0.743316,	0.0868167,	-0.270588,	-0.600000,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.454545,	0.333333,	0.847742,	0.991041,	0.987569,	-0.736185,	-0.0996785,	0.0117647,	-0.288889,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	-1.00000,	0.894194,	0.419021,	0.559048,	-0.707665,	0.498392,	-0.670588,	-0.688889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.454545,	-1.00000,	0.785806,	-0.835975,	-0.920957,	-0.868093,	-0.440514,	0.152941,	-0.400000,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.0909091,	0.333333,	0.858065,	-0.450034,	-0.154685,	-0.401070,	-0.189711,	0.482353,	0.688889,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.454545,	0.333333,	0.847742,	0.991041,	0.987569,	-0.736185,	-0.0996785,	0.0117647,	-0.288889,	-1.00000,
 	1.00000,	0.00000,	-0.142857,	0.272727,	1.00000,	0.943226,	-0.677464,	-0.782338,	-0.618538,	-0.0289389,	0.529412,	-0.0888889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.272727,	1.00000,	0.891613,	0.392833,	0.540049,	-0.711230,	0.0868167,	0.294118,	-0.600000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	-0.636364,	-0.333333,	0.927742,	-0.888353,	-0.952152,	-0.647059,	-0.569132,	-0.529412,	0.688889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.454545,	-0.333333,	0.832258,	0.955892,	0.961065,	-0.639929,	-0.466238,	0.458824,	-0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.272727,	1.00000,	0.881290,	0.241902,	0.419256,	-0.729055,	0.0996785,	0.0823529,	0.00000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.272727,	-0.333333,	0.974194,	0.492764,	0.599859,	-0.358289,	0.363344,	-0.200000,	0.111111,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.272727,	0.333333,	0.852903,	0.348725,	0.505805,	-0.418895,	-0.382637,	0.717647,	0.00000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.272727,	-1.00000,	0.878710,	0.634045,	0.695086,	-0.732620,	-0.00321543,	0.176471,	-0.200000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.272727,	0.00000,	0.824516,	0.827016,	0.865603,	-0.800357,	-0.0225080,	-0.0823529,	-0.400000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	0.00000,	0.881290,	0.704342,	0.749502,	-0.775401,	-0.0610932,	-0.0352941,	-0.400000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.0909091,	-1.00000,	0.958710,	0.0951068,	0.311833,	-0.404635,	0.00964630,	-0.223529,	-0.488889,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	0.00000,	0.881290,	0.704342,	0.749502,	-0.775401,	-0.0739550,	0.0352941,	-0.488889,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.272727,	-0.333333,	0.883871,	0.311509,	0.472968,	-0.721925,	0.138264,	-0.176471,	-0.200000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.666667,	0.935484,	0.585114,	0.658731,	-0.700535,	0.0739550,	0.152941,	0.00000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.272727,	0.666667,	0.881290,	0.879394,	0.902662,	-0.725490,	-0.144695,	0.341176,	0.688889,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.272727,	0.666667,	0.935484,	0.585114,	0.658731,	-0.700535,	0.0739550,	0.152941,	0.00000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	0.666667,	0.935484,	0.585114,	0.658731,	-0.700535,	0.0739550,	0.152941,	0.00000,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.454545,	1.00000,	0.865806,	0.896623,	0.916735,	-0.746881,	-0.209003,	0.435294,	0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.818182,	-0.666667,	0.455484,	-0.977257,	-0.980532,	-0.932264,	-0.845659,	0.576471,	0.311111,	-1.00000,
 	1.00000,	0.250000,	-0.428571,	-0.818182,	-0.666667,	0.455484,	-0.977257,	-0.980532,	-0.932264,	-0.813505,	0.458824,	0.111111,	-1.00000,
 	1.00000,	-0.750000,	-1.00000,	-0.818182,	0.666667,	0.569032,	-0.982771,	-0.982643,	-0.935829,	-0.845659,	0.0352941,	-0.888889,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.636364,	-1.00000,	0.767742,	-0.903515,	-0.931981,	-0.746881,	-0.485531,	-0.294118,	0.200000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	-0.636364,	-0.333333,	0.845161,	-0.880083,	-0.922130,	-0.739750,	-0.421222,	-0.388235,	0.111111,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	-0.636364,	0.00000,	0.873548,	-0.865610,	-0.916501,	-0.696970,	-0.286174,	-0.717647,	-0.288889,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	-0.454545,	1.00000,	0.865806,	-0.906961,	-0.958485,	-0.561497,	-0.260450,	-0.576471,	1.00000,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	-0.454545,	1.00000,	0.865806,	-0.906961,	-0.958485,	-0.561497,	-0.00964630,	-0.717647,	0.200000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	-0.272727,	0.333333,	0.829677,	-0.832529,	-0.845667,	-0.796791,	0.0160772,	-0.411765,	-0.200000,	-1.00000,
 	1.00000,	0.750000,	-0.714286,	-0.0909091,	-1.00000,	0.793548,	-0.344590,	-0.481412,	-0.832442,	-0.221865,	0.505882,	-0.200000,	-1.00000,
 	1.00000,	1.00000,	-0.428571,	-0.0909091,	0.666667,	0.852903,	-0.586492,	-0.426058,	-0.664884,	0.434084,	-0.176471,	-0.400000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	-0.0909091,	0.00000,	0.917419,	-0.292212,	-0.275712,	-0.614973,	0.556270,	-0.529412,	-0.488889,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	-0.0909091,	0.00000,	0.935484,	-0.168849,	-0.197139,	-0.358289,	0.318328,	-0.411765,	1.00000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.0909091,	0.00000,	0.930323,	-0.419711,	-0.0920605,	-0.647059,	0.607717,	-0.694118,	-0.800000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.0909091,	1.00000,	0.935484,	-0.309442,	-0.0254486,	-0.475936,	0.536977,	-0.294118,	-0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.0909091,	1.00000,	0.935484,	-0.309442,	-0.0254486,	-0.475936,	0.0289389,	0.576471,	-0.0888889,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.0909091,	-1.00000,	0.819355,	-0.291523,	-0.00621555,	-0.771836,	0.311897,	-0.0117647,	0.00000,	-1.00000,
 	1.00000,	1.00000,	1.00000,	0.0909091,	0.00000,	0.922581,	-0.219159,	0.294945,	-0.661319,	0.800643,	-0.764706,	-0.0888889,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.0909091,	0.00000,	0.922581,	-0.219159,	0.294945,	-0.661319,	0.800643,	-0.835294,	0.00000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	1.00000,	0.966452,	-0.109580,	0.358508,	-0.497326,	0.363344,	-0.411765,	0.200000,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	1.00000,	0.966452,	-0.109580,	0.358508,	-0.497326,	0.852090,	-0.717647,	0.111111,	-1.00000,
 	1.00000,	-0.750000,	-0.142857,	0.272727,	1.00000,	0.966452,	-0.109580,	0.358508,	-0.497326,	0.987138,	-0.764706,	-0.200000,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	-1.00000,	0.969032,	-0.0737422,	0.380087,	-0.240642,	0.826367,	-0.694118,	-0.288889,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.272727,	-0.666667,	0.971613,	-0.0337698,	0.402369,	-0.368984,	0.408360,	-0.341176,	0.311111,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.272727,	-0.666667,	0.971613,	-0.0337698,	0.402369,	-0.368984,	0.556270,	-0.552941,	-0.288889,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.272727,	-0.666667,	0.971613,	-0.0337698,	0.402369,	-0.368984,	0.106109,	0.317647,	0.600000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.272727,	-0.333333,	0.971613,	-0.0337698,	0.402369,	-0.368984,	0.183280,	0.0117647,	-0.800000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.272727,	-0.333333,	0.971613,	-0.0337698,	0.402369,	-0.368984,	0.704180,	-0.576471,	-0.200000,	-1.00000,
 	1.00000,	-0.250000,	-0.428571,	0.272727,	0.00000,	0.989677,	0.0399724,	0.445291,	-0.508021,	0.942122,	-0.858824,	-0.0888889,	-1.00000,
 	1.00000,	-1.00000,	-0.714286,	0.272727,	0.333333,	0.992258,	0.0813232,	0.467574,	-0.597148,	0.942122,	-0.717647,	-0.600000,	-1.00000,
 	1.00000,	-1.00000,	-0.714286,	0.272727,	0.333333,	0.992258,	0.0813232,	0.467574,	-0.597148,	0.627010,	-0.670588,	-0.0888889,	-1.00000,
 	1.00000,	0.250000,	0.142857,	0.272727,	0.666667,	0.994839,	0.122674,	0.489621,	-0.500891,	0.839228,	-0.647059,	0.00000,	-1.00000,
 	1.00000,	0.250000,	0.142857,	0.272727,	-1.00000,	1.00000,	0.201930,	0.533716,	-0.401070,	0.395498,	-0.364706,	-0.600000,	-1.00000,
 	1.00000,	-0.250000,	-0.142857,	0.272727,	-1.00000,	1.00000,	0.201930,	0.533716,	-0.401070,	0.954984,	-0.741176,	-0.400000,	-1.00000,
 	1.00000,	-0.500000,	-0.428571,	0.272727,	-0.666667,	0.997419,	0.240524,	0.555764,	-0.490196,	0.935691,	-0.717647,	-0.600000,	-1.00000,
 	1.00000,	0.250000,	-0.142857,	0.272727,	-0.666667,	0.997419,	0.240524,	0.555764,	-0.490196,	1.00000,	-0.741176,	-0.488889,	-1.00000,
 	1.00000,	0.500000,	-0.142857,	0.272727,	-0.666667,	0.997419,	0.240524,	0.555764,	-0.490196,	0.614148,	0.129412,	0.00000,	1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	-0.666667,	0.997419,	0.240524,	0.555764,	-0.490196,	0.247588,	0.176471,	0.00000,	-0.750000,
 	1.00000,	0.500000,	-0.142857,	0.272727,	-0.666667,	0.997419,	0.240524,	0.555764,	-0.490196,	0.247588,	0.176471,	0.00000,	-0.750000,
 	1.00000,	-0.250000,	-0.428571,	0.272727,	-0.666667,	0.997419,	0.240524,	0.555764,	-0.490196,	0.189711,	0.270588,	0.00000,	-0.875000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	-0.333333,	0.956129,	-0.0468642,	0.597748,	-0.286988,	0.736334,	-0.647059,	0.00000,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.272727,	-0.333333,	0.956129,	-0.0468642,	0.597748,	-0.286988,	0.717042,	-0.670588,	0.00000,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.272727,	0.00000,	0.865806,	0.117161,	0.727454,	-0.639929,	0.575563,	-0.529412,	-0.688889,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.272727,	0.333333,	0.865806,	0.142660,	0.746687,	-0.746881,	0.0482315,	0.364706,	0.800000,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	0.333333,	0.865806,	0.142660,	0.746687,	-0.746881,	0.524116,	-0.388235,	-0.288889,	-1.00000,
 	1.00000,	-1.00000,	-1.00000,	0.272727,	0.333333,	0.865806,	0.142660,	0.746687,	-0.746881,	0.524116,	-0.388235,	-0.288889,	-1.00000,
 	1.00000,	0.00000,	-0.428571,	0.272727,	0.333333,	0.865806,	0.142660,	0.746687,	-0.746881,	0.215434,	0.317647,	0.600000,	-0.562500,
 	1.00000,	0.250000,	-0.142857,	0.272727,	0.333333,	0.865806,	0.142660,	0.746687,	-0.746881,	0.0289389,	0.105882,	0.111111,	-1.00000,
 	1.00000,	0.750000,	0.142857,	0.272727,	1.00000,	0.623226,	-0.616816,	0.542629,	-0.932264,	0.646302,	-0.529412,	-0.488889,	-1.00000,
 	1.00000,	-0.250000,	-0.714286,	0.272727,	1.00000,	0.623226,	-0.616816,	0.542629,	-0.932264,	0.646302,	-0.600000,	-0.488889,	-1.00000,
 	1.00000,	-0.750000,	-0.428571,	0.272727,	1.00000,	0.623226,	-0.616816,	0.542629,	-0.932264,	0.266881,	0.317647,	0.200000,	-1.00000,
 	1.00000,	0.500000,	-0.428571,	0.272727,	1.00000,	0.623226,	-0.616816,	0.542629,	-0.932264,	0.221865,	0.294118,	0.400000,	-1.00000,
 	1.00000,	-1.00000,	-0.428571,	0.272727,	0.666667,	0.953548,	-0.00137836,	0.423244,	-0.597148,	0.504823,	-0.364706,	-0.200000,	-1.00000,
 	1.00000,	0.250000,	-0.714286,	0.818182,	-0.666667,	0.569032,	-0.986906,	-0.768266,	-0.960784,	-0.382637,	-0.623529,	-0.0888889,	-1.00000) 
 scaled y = 
MatrixD(0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.307485,
 	0.357674,
 	0.385262,
 	0.438255,
 	0.476234,
 	0.536493,
 	0.570980,
 	0.641854,
 	0.667829,
 	0.672944,
 	0.727549,
 	0.751416,
 	0.783902,
 	0.858662,
 	0.887891,
 	0.900161,
 	0.900161,
 	0.940007,
 	0.959350,
 	0.966984,
 	0.970779,
 	0.989541,
 	1.01160,
 	1.06471,
 	1.07841,
 	1.08181,
 	1.10194,
 	1.14422,
 	1.19089,
 	1.25562,
 	1.26130,
 	1.26695,
 	1.27257,
 	1.30563,
 	1.31909,
 	1.40364,
 	1.50408,
 	1.71019,
 	1.72455,
 	1.73871,
 	1.77156,
 	1.82938,
 	1.84530,
 	1.86253,
 	1.99877,
 	2.05796,
 	2.07443,
 	2.08443,
 	2.10291,
 	2.11626,
 	2.12823,
 	2.22354,
 	2.23109,
 	2.27006,
 	2.27316,
 	2.34277,
 	2.39880,
 	2.39971,
 	2.47906,
 	2.48989,
 	2.50471,
 	2.51122,
 	2.52813,
 	2.57261,
 	2.64262,
 	2.68785,
 	2.70738,
 	2.74535,
 	2.80033,
 	2.90142,
 	3.00717,
 	3.19499,
 	3.22803,
 	3.29584,
 	3.30064,
 	3.34463,
 	3.38980,
 	3.38980,
 	3.41707,
 	3.44426,
 	3.48799,
 	3.49226,
 	3.49863,
 	3.60767,
 	3.63363,
 	3.63811,
 	3.65610,
 	3.90298,
 	3.91940,
 	4.08261,
 	4.17592,
 	4.28082,
 	4.49413,
 	4.56622,
 	4.64813,
 	4.66965,
 	5.04909,
 	5.28564,
 	5.30797,
 	5.36542,
 	6.99562,
 	0.00000,
 	0.00000,
 	0.00000,
 	2.40964,
 	0.00000,
 	1.35325,
 	0.565314,
 	0.0861777,
 	0.559616,
 	0.00000,
 	1.24415,
 	0.518794,
 	0.215111,
 	0.190620,
 	0.924259,
 	2.42834,
 	0.00000,
 	2.19944,
 	0.518794,
 	0.00000,
 	0.867100,
 	2.28747,
 	1.45862,
 	1.65823,
 	0.940007,
 	2.02022,
 	0.582216,
 	0.157004,
 	0.00000,
 	0.00000,
 	1.68640,
 	0.418710,
 	2.32923,
 	1.40854,
 	2.30058,
 	2.50062,
 	1.85317,
 	2.93651,
 	2.46215,
 	3.13680,
 	2.37676,
 	2.32923,
 	3.24921,
 	0.00000,
 	0.741937,
 	3.22843,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	2.19722,
 	1.29198,
 	4.47107,
 	2.02419,
 	0.00000,
 	0.641854,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	1.50851,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.343590,
 	1.82132,
 	0.00000,
 	0.00000,
 	0.00000,
 	2.72720,
 	0.00000,
 	0.00000,
 	0.947789,
 	0.00000,
 	0.00000,
 	1.56444,
 	0.00000,
 	1.68825,
 	3.56558,
 	2.10535,
 	0.698135,
 	1.15688,
 	1.69010,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	1.46557,
 	2.02551,
 	2.81181,
 	2.50307,
 	1.14103,
 	0.00000,
 	0.00000,
 	0.00000,
 	4.04375,
 	2.13771,
 	0.904218,
 	1.59534,
 	0.00000,
 	0.00000,
 	1.15688,
 	1.96009,
 	1.92132,
 	3.37383,
 	0.00000,
 	0.00000,
 	0.970779,
 	1.54969,
 	2.11746,
 	1.10856,
 	1.00063,
 	1.94162,
 	2.64333,
 	0.815365,
 	0.00000,
 	0.00000,
 	2.21047,
 	0.737164,
 	1.59737,
 	0.418710,
 	1.36864,
 	1.89462,
 	3.04595,
 	1.01160,
 	0.00000,
 	2.61301,
 	0.00000,
 	2.48989,
 	0.00000,
 	0.00000,
 	0.00000,
 	2.96011,
 	3.69759,
 	0.00000,
 	5.16838,
 	0.00000,
 	0.00000,
 	2.16677,
 	2.85244,
 	1.92571,
 	3.78123,
 	2.57870,
 	2.83321,
 	3.24220,
 	0.00000,
 	3.39249,
 	0.00000,
 	2.39425,
 	3.43978,
 	4.27333,
 	0.00000,
 	0.00000,
 	3.96613,
 	1.53471,
 	1.53256,
 	0.00000,
 	0.00000,
 	2.21485,
 	1.78339,
 	0.00000,
 	0.00000,
 	1.95161,
 	0.00000,
 	1.59939,
 	0.00000,
 	2.17475,
 	0.00000,
 	0.00000,
 	1.72633,
 	0.966984,
 	0.00000,
 	0.00000,
 	6.61644,
 	2.08194,
 	0.00000,
 	1.23547,
 	1.39872,
 	5.22982,
 	0.00000,
 	1.98787,
 	0.542324,
 	1.78507,
 	0.00000,
 	0.00000,
 	1.20896,
 	0.00000,
 	1.43508,
 	0.00000,
 	1.99606,
 	0.00000,
 	2.79362,
 	0.00000,
 	0.00000,
 	0.431782,
 	0.00000,
 	2.00553,
 	0.285179,
 	0.00000,
 	0.802002,
 	1.47018,
 	0.00000,
 	2.39425,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	2.00553,
 	2.37118,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	4.42784,
 	1.46326,
 	1.07841,
 	0.00000,
 	0.00000,
 	1.54969,
 	1.85473,
 	1.14422,
 	2.05924,
 	1.43031,
 	1.87947,
 	2.02946,
 	4.12923,
 	0.00000,
 	3.67579,
 	1.07841,
 	4.26718,
 	2.40514,
 	1.43270,
 	1.01523,
 	2.12346,
 	1.16627,
 	5.63311,
 	1.32176,
 	0.00000,
 	0.828552,
 	0.00000,
 	3.31164,
 	1.12168,
 	1.09861,
 	2.85647,
 	3.86493,
 	0.00000,
 	0.00000,
 	0.00000,
 	0.00000,
 	3.79144,
 	2.26072,
 	0.00000,
 	1.32708,
 	2.75239,
 	3.72666,
 	2.46979,
 	0.00000,
 	0.00000,
 	0.00000,
 	1.08181,
 	3.92375,
 	1.91692,
 	0.00000,
 	0.00000,
 	0.00000,
 	1.15373,
 	0.357674,
 	0.00000,
 	2.00687,
 	4.01259,
 	2.49815,
 	0.00000,
 	0.00000)
auto_optimize: etaI = (2.5E-4,0.004)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 2.5E-4, result = (996.7930569678412,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 4.84375E-4, result = (994.6303962844197,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 7.1875E-4, result = (992.7673853317431,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 9.53125E-4, result = (991.0575030400653,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.0011875, result = (989.493313123214,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.001421875, result = (988.0472668321971,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.00165625, result = (986.6926974434426,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.001890625, result = (985.3972011257898,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.002125, result = (984.2449376230694,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.0023593750000000004, result = (983.1267209902479,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.0025937499999999997, result = (982.0987037137379,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.002828125, result = (981.1800089068021,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.0030625, result = (980.1639679819134,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.0032968750000000003, result = (979.2076148720038,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.0035312499999999997, result = (978.3126058140589,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.003765625, result = (977.4554977159797,400)
optimize3: bSize = 20, nB = 25
auto_optimize: eta = 0.004, result = (976.5384008415205,400)
ending epoch = (976.5384008415205,400)

REPORT
    ----------------------------------------------------------------------------
    modelName  mn  = NeuralNet_3L_tanh
    ----------------------------------------------------------------------------
    hparameter hp  = HyperParameter (HashMap(lambda -> (0.01,0.01), maxEpochs -> (400,400), eta -> (0.1,0.1), nu -> (0.9,0.9), upLimit -> (4,4), beta -> (0.9,0.9), bSize -> (20,20)))
    ----------------------------------------------------------------------------
    features   fn  = Array(intercept, X, Y, month, day, FFMC, DMC, DC, ISI, temp, RH, wind, rain)
    ----------------------------------------------------------------------------
    parameter  bb  = Array(b.w = 
MatrixD(0.154655,	0.176003,	0.0282809,	0.184998,	0.0935605,	0.0223891,	0.132288,	0.263115,	0.250277,	0.190661,	0.122818,	0.0392687,	0.0911462,	0.150225,	0.225320,	0.212524,	0.263640,	0.0866950,	0.133722,	0.117058,	0.166216,	0.137149,	0.0685724,	0.0674218,	0.00168986,	0.151417,	0.183020,
 	0.0695412,	0.0153519,	0.245404,	0.115560,	0.266019,	0.222588,	0.0783610,	0.217282,	0.0746325,	0.101717,	0.245499,	-0.0156295,	0.207455,	0.0113061,	0.144953,	0.194456,	0.145685,	0.0571499,	0.174613,	0.0313889,	0.190620,	0.148105,	0.0820055,	0.0418248,	0.138890,	0.282058,	0.209293,
 	0.138928,	0.210683,	0.228379,	0.128825,	0.289927,	0.0480899,	0.251109,	0.139119,	0.0708474,	0.186546,	0.0504093,	0.00989333,	0.100619,	0.222350,	0.105809,	-0.0408250,	-0.0272990,	0.0950870,	0.114940,	0.171801,	0.142830,	0.191653,	0.101271,	0.181255,	0.236637,	0.196061,	0.258844,
 	0.352413,	0.104640,	0.277933,	0.0285377,	0.0383414,	0.318236,	0.223579,	0.0624158,	0.187547,	0.342578,	0.164404,	0.0557624,	0.000228446,	0.236721,	0.0618357,	0.248118,	0.139347,	0.201986,	0.137311,	0.0737591,	0.132832,	0.226215,	0.159348,	0.0654108,	0.148177,	0.256841,	0.218726,
 	0.0705388,	0.181624,	0.239104,	0.169779,	0.182683,	0.0748853,	-0.0145023,	0.131437,	0.000967967,	0.114966,	0.0810636,	0.199125,	0.198951,	0.0110805,	0.0535500,	0.0705076,	0.0384797,	0.205385,	0.229805,	0.137576,	0.250539,	0.190348,	0.0928408,	0.211764,	0.152629,	0.218035,	0.251296,
 	0.145300,	0.0969785,	0.210458,	0.218858,	0.267852,	0.115435,	0.0771999,	0.00793597,	0.167118,	0.213127,	0.0331146,	0.239294,	0.183024,	0.217410,	0.266818,	0.196596,	0.187925,	0.251761,	0.128552,	0.121054,	-0.000347014,	0.170233,	0.0614681,	0.190597,	0.152803,	0.180068,	0.0294693,
 	0.207407,	0.210343,	0.0267823,	0.0870950,	0.118952,	0.0398446,	0.0854192,	0.0487003,	0.0618245,	0.244573,	0.0156550,	0.0483355,	0.156860,	0.128968,	0.0175050,	0.282530,	0.127113,	0.110151,	0.256940,	0.133899,	0.226440,	0.176640,	0.166601,	0.221670,	0.171042,	0.205416,	0.117718,
 	0.0654136,	0.212029,	0.0803587,	0.0689036,	0.314315,	5.81656e-05,	0.0263625,	0.162931,	-0.0573839,	0.0944796,	0.246574,	0.236903,	0.329158,	0.135104,	0.227187,	0.153088,	0.163018,	0.104653,	0.168507,	0.0868785,	-0.0347055,	0.0401984,	0.0799374,	0.102798,	0.0931854,	0.0117780,	0.0910218,
 	0.154885,	0.106257,	0.260075,	0.0251065,	0.102528,	0.0697611,	-0.0526234,	0.132266,	-0.0335471,	0.0285368,	0.156511,	0.0977462,	0.272451,	0.158321,	0.00666583,	-0.0725237,	0.00351716,	0.00957928,	0.0504417,	0.0815993,	0.0727422,	0.237635,	0.0557028,	0.194285,	0.163723,	-0.0589542,	0.142172,
 	0.219513,	0.270219,	0.187505,	0.249310,	0.00392336,	0.00288399,	0.0181106,	0.246342,	0.140968,	0.133789,	0.252109,	0.139567,	0.118894,	0.184566,	0.0465067,	0.125342,	0.105921,	0.199174,	0.0777998,	0.188833,	0.108866,	0.128964,	0.0800432,	0.195712,	0.0390794,	0.0543535,	0.0719487,
 	-0.0188539,	0.253427,	0.0105362,	0.247593,	0.315157,	0.0324851,	0.0378728,	0.0954055,	0.153593,	-0.0308453,	0.200381,	0.304499,	0.383844,	0.0285351,	0.0840374,	0.151554,	0.0601974,	0.0635731,	0.219353,	0.183181,	0.172038,	0.147216,	0.182738,	0.269068,	0.141410,	0.219896,	0.0368401,
 	0.222336,	0.233911,	0.0787777,	0.112288,	0.0227819,	0.182118,	0.119049,	0.228072,	0.180192,	0.101004,	0.0972168,	0.0275645,	0.104322,	0.145491,	0.0438777,	0.258690,	0.187765,	0.287374,	0.150153,	0.108376,	0.332129,	0.266463,	0.0580980,	0.157809,	0.192967,	0.287022,	0.210353,
 	0.128054,	0.229642,	0.210918,	0.0669565,	0.275449,	0.0618609,	0.0495452,	0.233840,	0.126315,	0.238358,	0.0342075,	0.179699,	0.207485,	0.288655,	0.00406136,	0.0474052,	0.153187,	0.0446566,	0.113215,	0.241114,	0.0337113,	0.216082,	0.174410,	0.0273744,	0.101360,	0.0964464,	0.239914) 
 b.b = VectorD(0.0889499,	0.124305,	0.0182545,	0.130893,	0.0664867,	0.00932148,	0.0834675,	0.178809,	0.168859,	0.115607,	0.0867369,	0.0388031,	0.0760590,	0.0960777,	0.159126,	0.140731,	0.179801,	0.0542998,	0.0931189,	0.0835592,	0.113442,	0.0930826,	0.0479817,	0.0553975,	0.00131591,	0.102159,	0.122061), b.w = 
MatrixD(0.193374,
 	-0.0413078,
 	0.0324949,
 	-0.0669887,
 	-0.233318,
 	0.194797,
 	0.179744,
 	0.0372853,
 	0.187825,
 	0.179182,
 	-0.0868460,
 	-0.233669,
 	-0.310030,
 	0.0802503,
 	0.0275323,
 	0.232243,
 	0.158176,
 	0.100029,
 	-0.00299137,
 	-0.0477583,
 	0.151660,
 	0.0665385,
 	-0.00616203,
 	-0.148948,
 	-0.0216558,
 	0.212168,
 	0.131558) 
 b.b = VectorD(0.722145))
    ----------------------------------------------------------------------------
    fitMap     qof = 
		rSq 	 -> VectorD(0.0322694) 
		rSqBar 	 -> VectorD(0.00730812) 
		sst 	 -> VectorD(1009.10) 
		sse 	 -> VectorD(976.538) 
		mse0 	 -> VectorD(1.88886) 
		rmse 	 -> VectorD(1.37436) 
		mae 	 -> VectorD(1.13308) 
		dfm 	 -> VectorD(13.0000) 
		df 	 -> VectorD(504.000) 
		fStat 	 -> VectorD(1.29278) 
		aic 	 -> VectorD(-869.990) 
		bic 	 -> VectorD(-810.517) 
		mape 	 -> VectorD(Infinity) 
		smape 	 -> VectorD(128.971) 

    ----------------------------------------------------------------------------
        
Run + title
--------------------
| Cross-Validation |
--------------------
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (709.987392122349,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.193374,
 	-0.0413078,
 	0.0324949,
 	-0.0669887,
 	-0.233318,
 	0.194797,
 	0.179744,
 	0.0372853,
 	0.187825,
 	0.179182,
 	-0.0868460,
 	-0.233669,
 	-0.310030,
 	0.0802503,
 	0.0275323,
 	0.232243,
 	0.158176,
 	0.100029,
 	-0.00299137,
 	-0.0477583,
 	0.151660,
 	0.0665385,
 	-0.00616203,
 	-0.148948,
 	-0.0216558,
 	0.212168,
 	0.131558) 
 b.b = VectorD(0.722145)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.00416500,
 	-0.0300661,
 	260.341,
 	261.426,
 	2.53811,
 	1.59315,
 	1.28160,
 	13.0000,
 	504.000,
 	-0.160804,
 	-168.606,
 	-131.719,
 	Infinity,
 	124.297)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (804.6055562021406,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.193374,
 	-0.0413078,
 	0.0324949,
 	-0.0669887,
 	-0.233318,
 	0.194797,
 	0.179744,
 	0.0372853,
 	0.187825,
 	0.179182,
 	-0.0868460,
 	-0.233669,
 	-0.310030,
 	0.0802503,
 	0.0275323,
 	0.232243,
 	0.158176,
 	0.100029,
 	-0.00299137,
 	-0.0477583,
 	0.151660,
 	0.0665385,
 	-0.00616203,
 	-0.148948,
 	-0.0216558,
 	0.212168,
 	0.131558) 
 b.b = VectorD(0.722145)
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.0188952,
 	-0.00641112,
 	165.033,
 	161.914,
 	1.57198,
 	1.25379,
 	1.04048,
 	13.0000,
 	504.000,
 	0.746659,
 	-142.263,
 	-105.377,
 	Infinity,
 	128.299)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (770.0323000573849,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.193374,
 	-0.0413078,
 	0.0324949,
 	-0.0669887,
 	-0.233318,
 	0.194797,
 	0.179744,
 	0.0372853,
 	0.187825,
 	0.179182,
 	-0.0868460,
 	-0.233669,
 	-0.310030,
 	0.0802503,
 	0.0275323,
 	0.232243,
 	0.158176,
 	0.100029,
 	-0.00299137,
 	-0.0477583,
 	0.151660,
 	0.0665385,
 	-0.00616203,
 	-0.148948,
 	-0.0216558,
 	0.212168,
 	0.131558) 
 b.b = VectorD(0.722145)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0589447,
 	0.0346714,
 	210.791,
 	198.366,
 	1.92589,
 	1.38776,
 	1.15817,
 	13.0000,
 	504.000,
 	2.42838,
 	-151.913,
 	-115.027,
 	Infinity,
 	124.503)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (795.3025452116268,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.193374,
 	-0.0413078,
 	0.0324949,
 	-0.0669887,
 	-0.233318,
 	0.194797,
 	0.179744,
 	0.0372853,
 	0.187825,
 	0.179182,
 	-0.0868460,
 	-0.233669,
 	-0.310030,
 	0.0802503,
 	0.0275323,
 	0.232243,
 	0.158176,
 	0.100029,
 	-0.00299137,
 	-0.0477583,
 	0.151660,
 	0.0665385,
 	-0.00616203,
 	-0.148948,
 	-0.0216558,
 	0.212168,
 	0.131558) 
 b.b = VectorD(0.722145)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.0805422,
 	-0.108413,
 	153.587,
 	165.957,
 	1.61124,
 	1.26934,
 	1.08537,
 	13.0000,
 	504.000,
 	-2.88981,
 	-143.334,
 	-106.447,
 	Infinity,
 	129.273)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (778.0705967039511,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.193374,
 	-0.0413078,
 	0.0324949,
 	-0.0669887,
 	-0.233318,
 	0.194797,
 	0.179744,
 	0.0372853,
 	0.187825,
 	0.179182,
 	-0.0868460,
 	-0.233669,
 	-0.310030,
 	0.0802503,
 	0.0275323,
 	0.232243,
 	0.158176,
 	0.100029,
 	-0.00299137,
 	-0.0477583,
 	0.151660,
 	0.0665385,
 	-0.00616203,
 	-0.148948,
 	-0.0216558,
 	0.212168,
 	0.131558) 
 b.b = VectorD(0.722145)
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.0517807,
 	0.0273227,
 	189.018,
 	179.231,
 	1.74010,
 	1.31913,
 	1.08401,
 	13.0000,
 	504.000,
 	2.11713,
 	-146.847,
 	-109.961,
 	Infinity,
 	139.402)
-----------------------------------------------
| showQofStatTable: Statistical Table for QoF |
-----------------------------------------------
|        name |   num |        min |        max |       mean |      stdev |   interval |
----------------------------------------------------------------------------------------
|         rSq |     5 |     -0.081 |      0.059 |      0.009 |      0.056 |      0.070 |
|      rSqBar |     5 |     -0.108 |      0.035 |     -0.017 |      0.058 |      0.072 |
|         sst |     5 |    153.587 |    260.341 |    195.754 |     42.323 |     52.561 |
|         sse |     5 |    161.914 |    261.426 |    193.379 |     40.612 |     50.436 |
|        mse0 |     5 |      1.572 |      2.538 |      1.877 |      0.394 |      0.490 |
|        rmse |     5 |      1.254 |      1.593 |      1.365 |      0.138 |      0.171 |
|         mae |     5 |      1.040 |      1.282 |      1.130 |      0.095 |      0.118 |
|         dfm |     5 |     13.000 |     13.000 |     13.000 |      0.000 |      0.000 |
|          df |     5 |    504.000 |    504.000 |    504.000 |      0.000 |      0.000 |
|       fStat |     5 |     -2.890 |      2.428 |      0.448 |      2.139 |      2.657 |
|         aic |     5 |   -168.606 |   -142.263 |   -150.593 |     10.751 |     13.351 |
|         bic |     5 |   -131.719 |   -105.377 |   -113.706 |     10.751 |     13.351 |
|        mape |     5 | 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.000 |   Infinity |   Infinity |        NaN |        NaN |
|       smape |     5 |    124.297 |    139.402 |    129.155 |      6.144 |      7.630 |
----------------------------------------------------------------------------------------
----------------------------------------
| Feature Selection Technique: Forward |
----------------------------------------
-------------------------------------------------------------------------------------
| forwardSelAll: (l = 0) INITIAL variable (0, intercept) => cols = LinkedHashSet(0) |
-------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (1006.4738319694013,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1007.0509052666912,400)
optimize3: bSize = 20, nB = 25
ending epoch = (997.8866500468903,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1009.4026447387911,400)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
optimize3: bSize = 20, nB = 25
ending epoch = (1006.5479671323254,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1004.4324226511715,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1004.3622882420831,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1009.5354820378078,400)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
optimize3: bSize = 20, nB = 25
ending epoch = (1008.3618871360233,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1006.860335760907,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1004.9347293765126,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1009.1141856378059,400)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (730.307410085897,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.477055,
 	0.367401,
 	0.000812390,
 	0.330008,
 	0.162928) 
 b.b = VectorD(0.282416)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0391684,
 	-0.0432040,
 	260.341,
 	270.538,
 	2.62659,
 	1.62067,
 	1.29849,
 	2.00000,
 	515.000,
 	-9.70570,
 	-192.599,
 	-184.695,
 	Infinity,
 	127.459)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (831.0083636057021,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.501288,
 	0.397364,
 	0.0403976,
 	0.359628,
 	0.195355) 
 b.b = VectorD(0.314836)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0135626,
 	-0.0174988,
 	165.033,
 	167.271,
 	1.62399,
 	1.27436,
 	1.05004,
 	2.00000,
 	515.000,
 	-3.44564,
 	-165.848,
 	-157.944,
 	Infinity,
 	127.586)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (787.1213554435712,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.489134,
 	0.384839,
 	0.0379040,
 	0.339169,
 	0.183646) 
 b.b = VectorD(0.296926)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(-0.000758176,
 	-0.00464462,
 	210.791,
 	210.951,
 	2.04807,
 	1.43111,
 	1.20311,
 	2.00000,
 	515.000,
 	-0.195083,
 	-177.163,
 	-169.259,
 	Infinity,
 	127.493)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (833.7411426240647,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.498711,
 	0.415611,
 	0.120778,
 	0.382526,
 	0.244174) 
 b.b = VectorD(0.295155)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.0813948,
 	-0.0855944,
 	153.587,
 	166.088,
 	1.61251,
 	1.26985,
 	1.08009,
 	2.00000,
 	515.000,
 	-19.3816,
 	-165.542,
 	-157.637,
 	Infinity,
 	127.753)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (811.5507637500003,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.520642,
 	0.401015,
 	0.0160565,
 	0.328425,
 	0.165302) 
 b.b = VectorD(0.346064)
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.00911025,
 	0.00526213,
 	189.018,
 	187.296,
 	1.81841,
 	1.34848,
 	1.13143,
 	2.00000,
 	515.000,
 	2.36746,
 	-171.035,
 	-163.131,
 	Infinity,
 	139.574)
-------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 1) ADD variable (3, month) => cols = LinkedHashSet(0, 3) @ 0.007273394274819878 |
-------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (991.9092221371562,400)
optimize3: bSize = 20, nB = 25
ending epoch = (997.2539340576625,400)
optimize3: bSize = 20, nB = 25
ending epoch = (998.1953936950786,400)
optimize3: bSize = 20, nB = 25
ending epoch = (998.0615793807962,400)
optimize3: bSize = 20, nB = 25
ending epoch = (998.6161216690247,400)
optimize3: bSize = 20, nB = 25
ending epoch = (1000.6992998098871,400)
optimize3: bSize = 20, nB = 25
ending epoch = (999.1083991666902,400)
optimize3: bSize = 20, nB = 25
ending epoch = (999.6977052116326,400)
optimize3: bSize = 20, nB = 25
ending epoch = (997.9408138498877,400)
optimize3: bSize = 20, nB = 25
ending epoch = (992.9422051942137,400)
optimize3: bSize = 20, nB = 25
ending epoch = (997.5440342008445,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (724.3347614066365,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.348659,
 	0.265929,
 	-0.123404,
 	0.362165,
 	0.147184,
 	-0.000257279,
 	0.253983) 
 b.b = VectorD(0.343245)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0385419,
 	-0.0446035,
 	260.341,
 	270.375,
 	2.62500,
 	1.62019,
 	1.29828,
 	3.00000,
 	514.000,
 	-6.35845,
 	-190.670,
 	-180.131,
 	Infinity,
 	127.052)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (828.4085259397705,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.378802,
 	0.289043,
 	-0.168065,
 	0.389144,
 	0.136166,
 	-0.0147940,
 	0.274141) 
 b.b = VectorD(0.377695)
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.00493793,
 	-0.000869829,
 	165.033,
 	164.218,
 	1.59435,
 	1.26267,
 	1.04838,
 	3.00000,
 	514.000,
 	0.850230,
 	-163.004,
 	-152.465,
 	Infinity,
 	127.658)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (785.2274215383284,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.370463,
 	0.281336,
 	-0.193391,
 	0.384200,
 	0.122504,
 	-0.0216998,
 	0.269528) 
 b.b = VectorD(0.349899)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0145069,
 	0.00875501,
 	210.791,
 	207.733,
 	2.01683,
 	1.42015,
 	1.19023,
 	3.00000,
 	514.000,
 	2.52211,
 	-174.345,
 	-163.806,
 	Infinity,
 	126.921)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (821.0766488139741,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.437393,
 	0.355121,
 	-0.0708855,
 	0.412526,
 	0.149652,
 	0.0278930,
 	0.326224) 
 b.b = VectorD(0.325908)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.144254,
 	-0.150932,
 	153.587,
 	175.743,
 	1.70624,
 	1.30623,
 	1.11384,
 	3.00000,
 	514.000,
 	-21.5996,
 	-166.007,
 	-155.469,
 	Infinity,
 	129.226)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (807.2943840864965,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.381995,
 	0.294875,
 	-0.164887,
 	0.399192,
 	0.149815,
 	0.00734038,
 	0.288822) 
 b.b = VectorD(0.377808)
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.0191358,
 	0.0134110,
 	189.018,
 	185.401,
 	1.80001,
 	1.34164,
 	1.11826,
 	3.00000,
 	514.000,
 	3.34257,
 	-168.525,
 	-157.986,
 	Infinity,
 	139.600)
------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 2) ADD variable (1, X) => cols = LinkedHashSet(0, 3, 1) @ 0.011300107453238062 |
------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (992.1685369060235,400)
optimize3: bSize = 20, nB = 25
ending epoch = (991.569303177484,400)
optimize3: bSize = 20, nB = 25
ending epoch = (991.7591656671299,400)
optimize3: bSize = 20, nB = 25
ending epoch = (991.4321196645928,400)
optimize3: bSize = 20, nB = 25
ending epoch = (991.3004171739369,400)
optimize3: bSize = 20, nB = 25
ending epoch = (991.8480695901743,400)
optimize3: bSize = 20, nB = 25
ending epoch = (992.168051206859,400)
optimize3: bSize = 20, nB = 25
ending epoch = (989.6720187664336,400)
optimize3: bSize = 20, nB = 25
ending epoch = (987.548437450145,400)
optimize3: bSize = 20, nB = 25
ending epoch = (992.021347960907,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (719.7372727012116,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.248577,
 	0.227328,
 	0.0268456,
 	0.247750,
 	0.145162,
 	0.0292022,
 	0.204788,
 	0.339742,
 	0.339716) 
 b.b = VectorD(0.252416)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0380366,
 	-0.0461304,
 	260.341,
 	270.244,
 	2.62372,
 	1.61979,
 	1.29690,
 	4.00000,
 	513.000,
 	-4.69944,
 	-188.720,
 	-175.546,
 	Infinity,
 	127.069)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (822.9424612333956,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.258612,
 	0.235228,
 	0.00732208,
 	0.253236,
 	0.174098,
 	0.0556273,
 	0.237726,
 	0.355549,
 	0.342660) 
 b.b = VectorD(0.292646)
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.00107557,
 	-0.00671331,
 	165.033,
 	164.855,
 	1.60054,
 	1.26512,
 	1.05448,
 	4.00000,
 	513.000,
 	0.138090,
 	-161.133,
 	-147.959,
 	Infinity,
 	128.115)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (781.2492993959289,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.243342,
 	0.226016,
 	0.00681726,
 	0.243319,
 	0.174879,
 	0.0579572,
 	0.233075,
 	0.331769,
 	0.328642) 
 b.b = VectorD(0.276594)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0199176,
 	0.0122756,
 	210.791,
 	206.593,
 	2.00575,
 	1.41625,
 	1.17391,
 	4.00000,
 	513.000,
 	2.60634,
 	-172.058,
 	-158.885,
 	Infinity,
 	126.206)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (816.1005590685702,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.314651,
 	0.271448,
 	0.0848388,
 	0.269170,
 	0.209481,
 	0.120848,
 	0.260252,
 	0.369293,
 	0.375102) 
 b.b = VectorD(0.263979)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.134271,
 	-0.143115,
 	153.587,
 	174.209,
 	1.69135,
 	1.30052,
 	1.10184,
 	4.00000,
 	513.000,
 	-15.1818,
 	-163.581,
 	-150.408,
 	Infinity,
 	129.629)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (805.9672039759366,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.271944,
 	0.254446,
 	0.0154728,
 	0.245366,
 	0.113107,
 	0.0138131,
 	0.212593,
 	0.309653,
 	0.372870) 
 b.b = VectorD(0.314510)
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.0337127,
 	0.0261783,
 	189.018,
 	182.646,
 	1.77326,
 	1.33164,
 	1.10883,
 	4.00000,
 	513.000,
 	4.47450,
 	-165.790,
 	-152.616,
 	Infinity,
 	139.219)
--------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 3) ADD variable (11, wind) => cols = LinkedHashSet(0, 3, 1, 11) @ 0.013727965601746162 |
--------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (987.5398703527956,400)
optimize3: bSize = 20, nB = 25
ending epoch = (987.1093500565703,400)
optimize3: bSize = 20, nB = 25
ending epoch = (987.3802324140414,400)
optimize3: bSize = 20, nB = 25
ending epoch = (986.2703778228092,400)
optimize3: bSize = 20, nB = 25
ending epoch = (989.8275690571498,400)
optimize3: bSize = 20, nB = 25
ending epoch = (988.8099529638091,400)
optimize3: bSize = 20, nB = 25
ending epoch = (987.0870779766119,400)
optimize3: bSize = 20, nB = 25
ending epoch = (989.1345710955259,400)
optimize3: bSize = 20, nB = 25
ending epoch = (986.1301204590816,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (719.4181430012139,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.348123,
 	0.203316,
 	0.0718962,
 	0.202639,
 	0.0361478,
 	0.0352789,
 	0.249098,
 	0.345746,
 	0.284600,
 	0.204511,
 	0.0357959) 
 b.b = VectorD(0.373191)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0349623,
 	-0.0450693,
 	260.341,
 	269.443,
 	2.61595,
 	1.61739,
 	1.29288,
 	5.00000,
 	512.000,
 	-3.45920,
 	-186.537,
 	-170.729,
 	Infinity,
 	126.790)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (822.003276926896,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.371396,
 	0.229146,
 	0.0988389,
 	0.215993,
 	0.0331519,
 	0.0593806,
 	0.286053,
 	0.356516,
 	0.303223,
 	0.197177,
 	0.0130130) 
 b.b = VectorD(0.401436)
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.000945119,
 	-0.00881128,
 	165.033,
 	164.877,
 	1.60074,
 	1.26521,
 	1.05328,
 	5.00000,
 	512.000,
 	0.0968718,
 	-159.127,
 	-143.318,
 	Infinity,
 	127.999)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (780.0077965388274,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.362643,
 	0.228986,
 	0.100666,
 	0.207785,
 	0.0329511,
 	0.0649396,
 	0.284209,
 	0.350070,
 	0.296883,
 	0.177095,
 	0.00634230) 
 b.b = VectorD(0.387807)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0182568,
 	0.00866947,
 	210.791,
 	206.943,
 	2.00915,
 	1.41745,
 	1.17518,
 	5.00000,
 	512.000,
 	1.90426,
 	-170.154,
 	-154.345,
 	Infinity,
 	126.215)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (814.5831298621573,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.368118,
 	0.235624,
 	0.127103,
 	0.268683,
 	0.116086,
 	0.119257,
 	0.281325,
 	0.418794,
 	0.324977,
 	0.242585,
 	0.0867917) 
 b.b = VectorD(0.393594)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.146958,
 	-0.158159,
 	153.587,
 	176.158,
 	1.71027,
 	1.30777,
 	1.10710,
 	5.00000,
 	512.000,
 	-13.1203,
 	-162.084,
 	-146.275,
 	Infinity,
 	129.778)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (805.3334504761856,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.369514,
 	0.184802,
 	0.0800155,
 	0.204020,
 	0.00836329,
 	0.0518914,
 	0.232807,
 	0.402240,
 	0.278950,
 	0.172331,
 	0.0206593) 
 b.b = VectorD(0.422461)
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.0347077,
 	0.0252811,
 	189.018,
 	182.458,
 	1.77143,
 	1.33095,
 	1.10864,
 	5.00000,
 	512.000,
 	3.68186,
 	-163.735,
 	-147.927,
 	Infinity,
 	139.220)
-----------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 4) ADD variable (12, rain) => cols = LinkedHashSet(0, 3, 1, 11, 12) @ 0.01322090342562221 |
-----------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (986.9633238648062,400)
optimize3: bSize = 20, nB = 25
ending epoch = (986.3906698964254,400)
optimize3: bSize = 20, nB = 25
ending epoch = (986.8344695565137,400)
optimize3: bSize = 20, nB = 25
ending epoch = (985.7573717677309,400)
optimize3: bSize = 20, nB = 25
ending epoch = (988.05991563292,400)
optimize3: bSize = 20, nB = 25
ending epoch = (987.3144062957784,400)
optimize3: bSize = 20, nB = 25
ending epoch = (985.974593875082,400)
optimize3: bSize = 20, nB = 25
ending epoch = (985.6564268075683,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (718.1655530311401,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.297127,
 	0.191546,
 	-0.216633,
 	0.179288,
 	0.0816723,
 	-0.0247403,
 	0.0628526,
 	0.449920,
 	0.229885,
 	0.290834,
 	0.0230070,
 	-0.208666,
 	-0.00758855) 
 b.b = VectorD(0.426295)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0329256,
 	-0.0450539,
 	260.341,
 	268.913,
 	2.61081,
 	1.61580,
 	1.29050,
 	6.00000,
 	511.000,
 	-2.71478,
 	-184.407,
 	-165.964,
 	Infinity,
 	126.856)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (820.7198050176974,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.320654,
 	0.222136,
 	-0.234345,
 	0.181273,
 	0.0903372,
 	-0.0559659,
 	0.0542637,
 	0.477131,
 	0.234923,
 	0.318341,
 	0.0186226,
 	-0.256765,
 	0.00719630) 
 b.b = VectorD(0.454298)
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.00753668,
 	-0.00411651,
 	165.033,
 	163.789,
 	1.59018,
 	1.26102,
 	1.05201,
 	6.00000,
 	511.000,
 	0.646748,
 	-156.837,
 	-138.394,
 	Infinity,
 	128.075)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (779.8010369766499,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.310287,
 	0.228369,
 	-0.216508,
 	0.173755,
 	0.0928416,
 	-0.0613429,
 	0.0654803,
 	0.475361,
 	0.232612,
 	0.322260,
 	0.0327436,
 	-0.248922,
 	0.0242306) 
 b.b = VectorD(0.452680)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0264788,
 	0.0150480,
 	210.791,
 	205.210,
 	1.99233,
 	1.41150,
 	1.16998,
 	6.00000,
 	511.000,
 	2.31645,
 	-167.700,
 	-149.257,
 	Infinity,
 	126.025)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (808.9212161934646,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.404764,
 	0.281811,
 	-0.288606,
 	0.247847,
 	0.147925,
 	0.00816533,
 	0.113483,
 	0.518279,
 	0.269869,
 	0.328617,
 	0.00472679,
 	-0.253513,
 	-0.00288039) 
 b.b = VectorD(0.466840)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.161165,
 	-0.174799,
 	153.587,
 	178.340,
 	1.73146,
 	1.31585,
 	1.11235,
 	6.00000,
 	511.000,
 	-11.8208,
 	-160.654,
 	-142.210,
 	Infinity,
 	130.233)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (796.8479835165919,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.355955,
 	0.236120,
 	-0.379610,
 	0.165905,
 	0.118845,
 	-0.0265246,
 	0.0623160,
 	0.494267,
 	0.207232,
 	0.297270,
 	-0.0345341,
 	-0.281618,
 	-0.0691875) 
 b.b = VectorD(0.484155)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.00206853,
 	-0.0138345,
 	189.018,
 	189.409,
 	1.83892,
 	1.35607,
 	1.13598,
 	6.00000,
 	511.000,
 	-0.175806,
 	-163.557,
 	-145.113,
 	Infinity,
 	140.057)
--------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 5) ADD variable (10, RH) => cols = LinkedHashSet(0, 3, 1, 11, 12, 10) @ 0.011764761867314677 |
--------------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (985.6734043656381,400)
optimize3: bSize = 20, nB = 25
ending epoch = (985.1636588439526,400)
optimize3: bSize = 20, nB = 25
ending epoch = (987.1390840804638,400)
optimize3: bSize = 20, nB = 25
ending epoch = (983.3586593122544,400)
optimize3: bSize = 20, nB = 25
ending epoch = (986.9661225265336,400)
optimize3: bSize = 20, nB = 25
ending epoch = (986.0803359301981,400)
optimize3: bSize = 20, nB = 25
ending epoch = (986.7262846463473,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (716.2291213685825,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0723609,
 	0.190368,
 	-0.170898,
 	0.0643361,
 	-0.0183927,
 	-0.129887,
 	0.0271378,
 	0.290291,
 	0.210803,
 	0.365936,
 	0.185059,
 	-0.214709,
 	-0.131943,
 	0.184134,
 	0.289156) 
 b.b = VectorD(0.424459)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0336909,
 	-0.0478788,
 	260.341,
 	269.112,
 	2.61274,
 	1.61640,
 	1.29201,
 	7.00000,
 	510.000,
 	-2.37462,
 	-182.504,
 	-161.427,
 	Infinity,
 	126.899)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (816.1220686408993,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.100923,
 	0.197626,
 	-0.214515,
 	0.0745148,
 	-0.0332363,
 	-0.141777,
 	0.0433608,
 	0.285480,
 	0.241278,
 	0.374322,
 	0.215073,
 	-0.245453,
 	-0.158268,
 	0.208753,
 	0.316383) 
 b.b = VectorD(0.444236)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.00965372,
 	-0.0235117,
 	165.033,
 	166.626,
 	1.61773,
 	1.27190,
 	1.05973,
 	7.00000,
 	510.000,
 	-0.696617,
 	-155.563,
 	-134.485,
 	Infinity,
 	128.617)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (778.7575891951413,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.102015,
 	0.183230,
 	-0.215043,
 	0.0917602,
 	-0.0305851,
 	-0.122426,
 	0.0543695,
 	0.274548,
 	0.250503,
 	0.344697,
 	0.206855,
 	-0.238320,
 	-0.159832,
 	0.190747,
 	0.307138) 
 b.b = VectorD(0.441040)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0309682,
 	0.0176677,
 	210.791,
 	204.263,
 	1.98314,
 	1.40824,
 	1.16464,
 	7.00000,
 	510.000,
 	2.32836,
 	-165.457,
 	-144.379,
 	Infinity,
 	126.010)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (807.0936086063704,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.131469,
 	0.285598,
 	-0.234350,
 	0.0810647,
 	-0.0212240,
 	-0.183056,
 	0.0340703,
 	0.344430,
 	0.225210,
 	0.390998,
 	0.221052,
 	-0.297068,
 	-0.187998,
 	0.236644,
 	0.370705) 
 b.b = VectorD(0.429126)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.153453,
 	-0.169284,
 	153.587,
 	177.155,
 	1.71996,
 	1.31147,
 	1.11114,
 	7.00000,
 	510.000,
 	-9.69274,
 	-158.331,
 	-137.253,
 	Infinity,
 	130.590)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (795.5623450702974,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0677229,
 	0.237797,
 	-0.285384,
 	0.0527086,
 	-0.0642253,
 	-0.213922,
 	-0.0104680,
 	0.304306,
 	0.194333,
 	0.365360,
 	0.175822,
 	-0.355113,
 	-0.232584,
 	0.189907,
 	0.330356) 
 b.b = VectorD(0.436844)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.0102056,
 	-0.0240711,
 	189.018,
 	190.947,
 	1.85386,
 	1.36156,
 	1.14021,
 	7.00000,
 	510.000,
 	-0.736037,
 	-161.957,
 	-140.879,
 	Infinity,
 	140.323)
-----------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 6) ADD variable (6, DMC) => cols = LinkedHashSet(0, 3, 1, 11, 12, 10, 6) @ 0.012135342162264529 |
-----------------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (983.3739816450474,400)
optimize3: bSize = 20, nB = 25
ending epoch = (983.3579089453021,400)
optimize3: bSize = 20, nB = 25
ending epoch = (986.0083262445364,400)
optimize3: bSize = 20, nB = 25
ending epoch = (985.1861500813607,400)
optimize3: bSize = 20, nB = 25
ending epoch = (984.6434502420483,400)
optimize3: bSize = 20, nB = 25
ending epoch = (985.9839492034422,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (715.8315441110337,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.144519,
 	0.0286751,
 	-0.00683467,
 	0.296015,
 	0.0326759,
 	-0.219750,
 	-0.0969243,
 	0.170696,
 	0.314375,
 	0.140022,
 	-0.0873700,
 	-0.248430,
 	-0.120095,
 	-0.0387549,
 	0.188079,
 	0.0712988,
 	0.333402) 
 b.b = VectorD(0.378938)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0342654,
 	-0.0505210,
 	260.341,
 	269.262,
 	2.61419,
 	1.61685,
 	1.29450,
 	8.00000,
 	509.000,
 	-2.10791,
 	-180.544,
 	-156.831,
 	Infinity,
 	127.095)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (815.3093822686748,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.153960,
 	0.0518223,
 	-0.00185213,
 	0.304213,
 	0.0631036,
 	-0.272955,
 	-0.0902329,
 	0.194009,
 	0.335738,
 	0.169971,
 	-0.0729230,
 	-0.286807,
 	-0.110018,
 	-0.0581181,
 	0.194122,
 	0.0919899,
 	0.355961) 
 b.b = VectorD(0.395653)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0143840,
 	-0.0303272,
 	165.033,
 	167.406,
 	1.62531,
 	1.27487,
 	1.06309,
 	8.00000,
 	509.000,
 	-0.902206,
 	-153.769,
 	-130.056,
 	Infinity,
 	128.851)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (778.9093523163078,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.135636,
 	0.0552279,
 	0.00670798,
 	0.292020,
 	0.0618390,
 	-0.269358,
 	-0.0874670,
 	0.188377,
 	0.322714,
 	0.169046,
 	-0.0853523,
 	-0.277950,
 	-0.106122,
 	-0.0555173,
 	0.190842,
 	0.0842620,
 	0.343868) 
 b.b = VectorD(0.398362)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0326022,
 	0.0173975,
 	210.791,
 	203.919,
 	1.97980,
 	1.40705,
 	1.16352,
 	8.00000,
 	509.000,
 	2.14422,
 	-163.367,
 	-139.654,
 	Infinity,
 	125.728)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (806.8309358740846,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.189303,
 	0.0195419,
 	-0.0176997,
 	0.384443,
 	0.0638488,
 	-0.327877,
 	-0.128747,
 	0.197712,
 	0.380169,
 	0.195717,
 	-0.0731504,
 	-0.291420,
 	-0.0546698,
 	-0.0333448,
 	0.262526,
 	0.146937,
 	0.356306) 
 b.b = VectorD(0.395328)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.161866,
 	-0.180128,
 	153.587,
 	178.448,
 	1.73250,
 	1.31625,
 	1.11708,
 	8.00000,
 	509.000,
 	-8.86397,
 	-156.671,
 	-132.958,
 	Infinity,
 	131.004)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (795.6294412206533,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.151582,
 	-0.0365541,
 	-0.0638536,
 	0.339877,
 	0.0114510,
 	-0.392077,
 	-0.159977,
 	0.162255,
 	0.339930,
 	0.138185,
 	-0.109390,
 	-0.317262,
 	-0.0928011,
 	-0.0698007,
 	0.238826,
 	0.106024,
 	0.336910) 
 b.b = VectorD(0.405176)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.0126208,
 	-0.0285362,
 	189.018,
 	191.404,
 	1.85829,
 	1.36319,
 	1.14551,
 	8.00000,
 	509.000,
 	-0.792989,
 	-160.077,
 	-136.364,
 	Infinity,
 	140.670)
--------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 7) ADD variable (4, day) => cols = LinkedHashSet(0, 3, 1, 11, 12, 10, 6, 4) @ 0.010195302442966514 |
--------------------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (984.9501621267756,400)
optimize3: bSize = 20, nB = 25
ending epoch = (985.9770685331861,400)
optimize3: bSize = 20, nB = 25
ending epoch = (985.7486399057104,400)
optimize3: bSize = 20, nB = 25
ending epoch = (984.2146574473018,400)
optimize3: bSize = 20, nB = 25
ending epoch = (986.1988938430922,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (715.1728693905636,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.166131,
 	0.0692432,
 	-0.182854,
 	0.175249,
 	-0.176389,
 	-0.213131,
 	0.0670529,
 	0.166153,
 	0.213866,
 	0.318628,
 	-0.0626153,
 	-0.316222,
 	0.0852403,
 	0.153651,
 	-0.0168456,
 	0.154006,
 	0.203729,
 	-0.0616880,
 	0.164348) 
 b.b = VectorD(0.370453)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0343378,
 	-0.0526627,
 	260.341,
 	269.281,
 	2.61438,
 	1.61690,
 	1.29452,
 	9.00000,
 	508.000,
 	-1.87384,
 	-178.532,
 	-152.185,
 	Infinity,
 	127.094)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (813.7100401906132,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.180018,
 	0.0753543,
 	-0.188302,
 	0.214698,
 	-0.206174,
 	-0.221325,
 	0.100949,
 	0.160917,
 	0.216418,
 	0.340520,
 	-0.0851590,
 	-0.359337,
 	0.113300,
 	0.170414,
 	-0.0469718,
 	0.183859,
 	0.229631,
 	-0.0737981,
 	0.189203) 
 b.b = VectorD(0.369066)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0125841,
 	-0.0305236,
 	165.033,
 	167.109,
 	1.62242,
 	1.27374,
 	1.06148,
 	9.00000,
 	508.000,
 	-0.701476,
 	-151.697,
 	-125.350,
 	Infinity,
 	128.505)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (776.8757608288371,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.150664,
 	0.0758701,
 	-0.186951,
 	0.235269,
 	-0.206830,
 	-0.215379,
 	0.0825340,
 	0.158150,
 	0.206807,
 	0.341695,
 	-0.0838816,
 	-0.372717,
 	0.120846,
 	0.150364,
 	-0.0513466,
 	0.187357,
 	0.227470,
 	-0.0734154,
 	0.186373) 
 b.b = VectorD(0.355300)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0349875,
 	0.0178908,
 	210.791,
 	203.416,
 	1.97491,
 	1.40532,
 	1.16350,
 	9.00000,
 	508.000,
 	2.04645,
 	-161.233,
 	-134.886,
 	Infinity,
 	125.561)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (805.2891513055785,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.189440,
 	0.111183,
 	-0.191168,
 	0.250314,
 	-0.217184,
 	-0.232081,
 	0.0956304,
 	0.209169,
 	0.210158,
 	0.377465,
 	-0.0747641,
 	-0.441662,
 	0.137991,
 	0.211545,
 	-0.0441184,
 	0.223858,
 	0.245037,
 	-0.0895812,
 	0.274772) 
 b.b = VectorD(0.345630)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.152988,
 	-0.173414,
 	153.587,
 	177.084,
 	1.71926,
 	1.31121,
 	1.11285,
 	9.00000,
 	508.000,
 	-7.48950,
 	-154.317,
 	-127.970,
 	Infinity,
 	131.013)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (790.879795047777,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.145357,
 	0.0613595,
 	-0.210275,
 	0.224858,
 	-0.246089,
 	-0.245445,
 	0.0331465,
 	0.179231,
 	0.184259,
 	0.361292,
 	-0.131381,
 	-0.514563,
 	0.105543,
 	0.180300,
 	-0.0830649,
 	0.196891,
 	0.225816,
 	-0.129874,
 	0.238415) 
 b.b = VectorD(0.339255)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.0182636,
 	-0.0363037,
 	189.018,
 	192.470,
 	1.86864,
 	1.36698,
 	1.14607,
 	9.00000,
 	508.000,
 	-1.01239,
 	-158.358,
 	-132.011,
 	Infinity,
 	140.170)
----------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 8) ADD variable (8, ISI) => cols = LinkedHashSet(0, 3, 1, 11, 12, 10, 6, 4, 8) @ 0.00738280517659462 |
----------------------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (982.5350403286374,400)
optimize3: bSize = 20, nB = 25
ending epoch = (984.8137406808215,400)
optimize3: bSize = 20, nB = 25
ending epoch = (983.811157890142,400)
optimize3: bSize = 20, nB = 25
ending epoch = (984.5551263682561,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (713.9692979815563,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.238259,
 	0.0377793,
 	-0.231360,
 	-0.00878059,
 	0.0514123,
 	-0.187179,
 	-0.175401,
 	0.119649,
 	0.388658,
 	0.203375,
 	-0.00677346,
 	-0.0478974,
 	-0.241464,
 	0.124718,
 	0.0206106,
 	0.0577280,
 	0.320562,
 	-0.0530707,
 	0.00222004,
 	-0.0728208,
 	0.114727) 
 b.b = VectorD(0.437697)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0364115,
 	-0.0568535,
 	260.341,
 	269.821,
 	2.61962,
 	1.61852,
 	1.29254,
 	10.0000,
 	507.000,
 	-1.78121,
 	-176.707,
 	-147.725,
 	Infinity,
 	126.990)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (812.8687829622144,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.283556,
 	0.0349379,
 	-0.217214,
 	-0.00934376,
 	0.0493455,
 	-0.191481,
 	-0.206679,
 	0.115445,
 	0.459203,
 	0.208292,
 	-0.0436350,
 	-0.0562308,
 	-0.299836,
 	0.140912,
 	-0.0270149,
 	0.0488682,
 	0.321308,
 	-0.0729023,
 	-0.00746855,
 	-0.0930060,
 	0.156390) 
 b.b = VectorD(0.434983)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0169410,
 	-0.0369990,
 	165.033,
 	167.828,
 	1.62940,
 	1.27648,
 	1.06142,
 	10.0000,
 	507.000,
 	-0.844598,
 	-149.873,
 	-120.891,
 	Infinity,
 	128.514)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (776.7250659727092,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.280027,
 	0.0526824,
 	-0.212280,
 	-0.0285831,
 	0.0749302,
 	-0.207447,
 	-0.214899,
 	0.134025,
 	0.456827,
 	0.172952,
 	-0.0208728,
 	-0.0582382,
 	-0.299113,
 	0.119318,
 	-0.00710692,
 	0.0657527,
 	0.298998,
 	-0.0799456,
 	0.00281589,
 	-0.0991455,
 	0.159673) 
 b.b = VectorD(0.445473)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0375663,
 	0.0185834,
 	210.791,
 	202.873,
 	1.96964,
 	1.40344,
 	1.16180,
 	10.0000,
 	507.000,
 	1.97895,
 	-159.093,
 	-130.111,
 	Infinity,
 	125.632)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (804.2798516547998,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.301913,
 	0.0534758,
 	-0.243687,
 	-0.0125130,
 	0.0684074,
 	-0.242537,
 	-0.250402,
 	0.127388,
 	0.513977,
 	0.230586,
 	0.0162830,
 	-0.0129389,
 	-0.350181,
 	0.172856,
 	-0.0135085,
 	0.0510046,
 	0.400205,
 	-0.118605,
 	0.0379742,
 	-0.0893459,
 	0.144770) 
 b.b = VectorD(0.450037)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.153904,
 	-0.176664,
 	153.587,
 	177.225,
 	1.72063,
 	1.31173,
 	1.11563,
 	10.0000,
 	507.000,
 	-6.76221,
 	-152.345,
 	-123.363,
 	Infinity,
 	131.259)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (790.1393773240168,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.271930,
 	0.0384354,
 	-0.251495,
 	-0.0435634,
 	0.0348154,
 	-0.299632,
 	-0.272654,
 	0.117119,
 	0.490400,
 	0.187410,
 	-0.0152526,
 	-0.0545789,
 	-0.396202,
 	0.130094,
 	-0.0413527,
 	0.0198930,
 	0.373311,
 	-0.169201,
 	-0.00902825,
 	-0.105926,
 	0.105606) 
 b.b = VectorD(0.438912)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.0152677,
 	-0.0352927,
 	189.018,
 	191.904,
 	1.86314,
 	1.36497,
 	1.14330,
 	10.0000,
 	507.000,
 	-0.762430,
 	-156.207,
 	-127.225,
 	Infinity,
 	139.941)
-----------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 9) ADD variable (2, Y) => cols = LinkedHashSet(0, 3, 1, 11, 12, 10, 6, 4, 8, 2) @ 0.00712227798843712 |
-----------------------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (984.6821792301738,400)
optimize3: bSize = 20, nB = 25
ending epoch = (984.1224602928991,400)
optimize3: bSize = 20, nB = 25
ending epoch = (984.1077616656115,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (714.5717618437101,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0440057,
 	0.0305578,
 	-0.184956,
 	0.213415,
 	-0.0304831,
 	-0.157156,
 	0.0761149,
 	0.290438,
 	0.365883,
 	0.241394,
 	0.0129851,
 	-0.174465,
 	-0.119495,
 	0.0544979,
 	0.129128,
 	0.0453341,
 	0.174327,
 	-0.0617917,
 	-0.0614080,
 	-0.170380,
 	-0.0827721,
 	0.0461898,
 	-0.0468187) 
 b.b = VectorD(0.442545)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0365869,
 	-0.0591214,
 	260.341,
 	269.866,
 	2.62006,
 	1.61866,
 	1.29326,
 	11.0000,
 	506.000,
 	-1.62359,
 	-174.688,
 	-143.071,
 	Infinity,
 	127.033)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (814.0779733061896,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0315773,
 	0.0288792,
 	-0.198637,
 	0.230625,
 	-0.0433807,
 	-0.183782,
 	0.0898231,
 	0.300468,
 	0.415768,
 	0.247534,
 	0.0246006,
 	-0.223638,
 	-0.140619,
 	0.0926061,
 	0.155486,
 	0.0321331,
 	0.182853,
 	-0.0899368,
 	-0.0590475,
 	-0.200652,
 	-0.0791813,
 	0.0287776,
 	-0.0627431) 
 b.b = VectorD(0.435282)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0111801,
 	-0.0331623,
 	165.033,
 	166.878,
 	1.62017,
 	1.27286,
 	1.05898,
 	11.0000,
 	506.000,
 	-0.508600,
 	-147.635,
 	-116.019,
 	Infinity,
 	128.380)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (776.7752321139077,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0439126,
 	0.0101582,
 	-0.211233,
 	0.229725,
 	-0.0379046,
 	-0.189398,
 	0.0846891,
 	0.289416,
 	0.440120,
 	0.246488,
 	0.0350347,
 	-0.201469,
 	-0.152221,
 	0.0870392,
 	0.155969,
 	0.00121643,
 	0.177159,
 	-0.0948393,
 	-0.0561162,
 	-0.199718,
 	-0.101508,
 	0.0206424,
 	-0.0607223) 
 b.b = VectorD(0.445278)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0337098,
 	0.0127035,
 	210.791,
 	203.685,
 	1.97753,
 	1.40625,
 	1.16377,
 	11.0000,
 	506.000,
 	1.60475,
 	-157.304,
 	-125.687,
 	Infinity,
 	125.785)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (804.1683291355305,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0208817,
 	0.0246964,
 	-0.206119,
 	0.246576,
 	-0.0624637,
 	-0.238169,
 	0.149816,
 	0.349306,
 	0.466478,
 	0.303152,
 	0.0625461,
 	-0.270312,
 	-0.145267,
 	0.0918721,
 	0.216961,
 	0.0237142,
 	0.207587,
 	-0.0880127,
 	-0.0993654,
 	-0.228584,
 	-0.0882712,
 	0.0727815,
 	-0.0557020) 
 b.b = VectorD(0.441710)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.168668,
 	-0.194074,
 	153.587,
 	179.492,
 	1.74264,
 	1.32009,
 	1.12325,
 	11.0000,
 	506.000,
 	-6.63895,
 	-150.949,
 	-119.332,
 	Infinity,
 	131.665)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (791.153298618913,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.000297714,
 	0.00533302,
 	-0.237093,
 	0.212888,
 	-0.0848885,
 	-0.270888,
 	0.116253,
 	0.327645,
 	0.446185,
 	0.259329,
 	0.0417542,
 	-0.302989,
 	-0.191147,
 	0.0532126,
 	0.163808,
 	-0.0140080,
 	0.156555,
 	-0.110634,
 	-0.131331,
 	-0.262346,
 	-0.139881,
 	0.0285937,
 	-0.109512) 
 b.b = VectorD(0.418159)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.0159666,
 	-0.0380528,
 	189.018,
 	192.036,
 	1.86443,
 	1.36544,
 	1.14483,
 	11.0000,
 	506.000,
 	-0.722921,
 	-154.244,
 	-122.627,
 	Infinity,
 	139.835)
--------------------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 10) ADD variable (9, temp) => cols = LinkedHashSet(0, 3, 1, 11, 12, 10, 6, 4, 8, 2, 9) @ 0.0035676515580737034 |
--------------------------------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (987.3897682707606,400)
optimize3: bSize = 20, nB = 25
ending epoch = (987.0710394745088,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (714.9893946800883,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.134070,
 	0.0234746,
 	-0.164141,
 	-0.0305075,
 	0.0141967,
 	-0.136764,
 	0.0505639,
 	0.222073,
 	0.346843,
 	0.152333,
 	-0.0500682,
 	-0.107251,
 	-0.0795902,
 	0.0350692,
 	0.205376,
 	0.147487,
 	0.315812,
 	0.121785,
 	-0.104289,
 	-0.0825885,
 	0.0905999,
 	0.0394383,
 	0.0160563,
 	-0.201302,
 	-0.182771) 
 b.b = VectorD(0.454305)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0404868,
 	-0.0652112,
 	260.341,
 	270.882,
 	2.62992,
 	1.62170,
 	1.29661,
 	12.0000,
 	505.000,
 	-1.63752,
 	-172.896,
 	-138.644,
 	Infinity,
 	127.045)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (811.9646182286612,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.181179,
 	0.0167320,
 	-0.171091,
 	-0.0795958,
 	0.0112768,
 	-0.169698,
 	0.0807532,
 	0.244163,
 	0.406946,
 	0.201111,
 	-0.0577996,
 	-0.132238,
 	-0.0740767,
 	0.0281097,
 	0.207768,
 	0.153702,
 	0.357241,
 	0.0985309,
 	-0.167227,
 	-0.132547,
 	0.0937375,
 	0.0412837,
 	0.0184761,
 	-0.239033,
 	-0.178427) 
 b.b = VectorD(0.451032)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0191953,
 	-0.0434138,
 	165.033,
 	168.201,
 	1.63301,
 	1.27789,
 	1.06656,
 	12.0000,
 	505.000,
 	-0.792590,
 	-146.005,
 	-111.754,
 	Infinity,
 	128.246)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (775.5122559511007,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.178905,
 	0.0174323,
 	-0.188600,
 	-0.0962448,
 	0.0305337,
 	-0.198742,
 	0.0804620,
 	0.238314,
 	0.412146,
 	0.224599,
 	-0.0674749,
 	-0.136462,
 	-0.0382354,
 	0.0156875,
 	0.229908,
 	0.145757,
 	0.341126,
 	0.113798,
 	-0.173191,
 	-0.110469,
 	0.128034,
 	0.0430146,
 	0.0351621,
 	-0.272791,
 	-0.188267) 
 b.b = VectorD(0.463996)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0400030,
 	0.0171912,
 	210.791,
 	202.359,
 	1.96465,
 	1.40166,
 	1.15929,
 	12.0000,
 	505.000,
 	1.75361,
 	-154.951,
 	-120.699,
 	Infinity,
 	125.327)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (801.9187571551159,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.204447,
 	0.0194342,
 	-0.198865,
 	-0.110041,
 	0.0498210,
 	-0.182453,
 	0.119566,
 	0.290186,
 	0.472486,
 	0.262166,
 	-0.0397657,
 	-0.142226,
 	-0.0361873,
 	0.0193113,
 	0.251649,
 	0.146980,
 	0.384940,
 	0.184294,
 	-0.193606,
 	-0.178281,
 	0.180222,
 	0.0491904,
 	0.0446839,
 	-0.310467,
 	-0.222970) 
 b.b = VectorD(0.473472)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.156259,
 	-0.183734,
 	153.587,
 	177.586,
 	1.72414,
 	1.31307,
 	1.11625,
 	12.0000,
 	505.000,
 	-5.68721,
 	-148.463,
 	-114.212,
 	Infinity,
 	131.710)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (784.0167182201664,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.178085,
 	-0.00997625,
 	-0.238853,
 	-0.176294,
 	0.0205494,
 	-0.245579,
 	0.0894289,
 	0.272275,
 	0.465197,
 	0.268477,
 	-0.0614561,
 	-0.175523,
 	-0.0430263,
 	-0.000301678,
 	0.235872,
 	0.105549,
 	0.364263,
 	0.171997,
 	-0.246711,
 	-0.209984,
 	0.197475,
 	0.0136941,
 	0.0434533,
 	-0.379427,
 	-0.258955) 
 b.b = VectorD(0.457753)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.0256363,
 	-0.0500079,
 	189.018,
 	193.864,
 	1.88217,
 	1.37192,
 	1.14494,
 	12.0000,
 	505.000,
 	-1.05189,
 	-152.726,
 	-118.474,
 	Infinity,
 	140.294)
----------------------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 11) ADD variable (7, DC) => cols = LinkedHashSet(0, 3, 1, 11, 12, 10, 6, 4, 8, 2, 9, 7) @ -0.0014118119285244646 |
----------------------------------------------------------------------------------------------------------------------------------------
optimize3: bSize = 20, nB = 25
ending epoch = (986.9996770366735,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (715.0383961935113,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0787957,
 	-0.0265856,
 	-0.137696,
 	0.0234031,
 	-0.0238563,
 	0.0316288,
 	0.205406,
 	0.204002,
 	0.278744,
 	0.233102,
 	0.0659248,
 	-0.182053,
 	-0.166780,
 	0.0794050,
 	0.0834111,
 	0.108386,
 	0.196117,
 	-0.166652,
 	0.0251094,
 	0.0186714,
 	0.0972314,
 	-0.0143573,
 	0.0820195,
 	-0.192208,
 	-0.182345,
 	0.127030,
 	0.171257) 
 b.b = VectorD(0.363485)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(-0.0405383,
 	-0.0673776,
 	260.341,
 	270.895,
 	2.63005,
 	1.62174,
 	1.29571,
 	13.0000,
 	504.000,
 	-1.51041,
 	-170.901,
 	-134.014,
 	Infinity,
 	127.029)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (812.2113435366823,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0615243,
 	-0.0606441,
 	-0.198717,
 	-0.00266613,
 	0.0158246,
 	0.0472582,
 	0.228176,
 	0.190161,
 	0.274443,
 	0.289269,
 	0.0704451,
 	-0.202479,
 	-0.167857,
 	0.0629635,
 	0.105606,
 	0.145553,
 	0.215799,
 	-0.231586,
 	0.0687933,
 	-0.00173644,
 	0.122661,
 	-0.0361026,
 	0.114942,
 	-0.243245,
 	-0.227545,
 	0.174980,
 	0.200820) 
 b.b = VectorD(0.365146)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(-0.0140822,
 	-0.0402391,
 	165.033,
 	167.357,
 	1.62482,
 	1.27469,
 	1.06219,
 	13.0000,
 	504.000,
 	-0.538375,
 	-143.783,
 	-106.897,
 	Infinity,
 	128.170)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (775.2243431972078,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0671347,
 	-0.0975311,
 	-0.191820,
 	0.0121273,
 	0.0139853,
 	0.0471257,
 	0.231221,
 	0.179726,
 	0.289673,
 	0.324310,
 	0.0779777,
 	-0.208049,
 	-0.166303,
 	0.0568682,
 	0.120863,
 	0.166568,
 	0.230767,
 	-0.230173,
 	0.0725952,
 	-0.00958324,
 	0.130887,
 	-0.0550122,
 	0.111600,
 	-0.248094,
 	-0.250537,
 	0.193553,
 	0.192069) 
 b.b = VectorD(0.374232)
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.0404126,
 	0.0156613,
 	210.791,
 	202.273,
 	1.96381,
 	1.40136,
 	1.15906,
 	13.0000,
 	504.000,
 	1.63275,
 	-152.928,
 	-116.042,
 	Infinity,
 	125.287)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (800.9026575974234,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.0497534,
 	-0.0895110,
 	-0.214552,
 	0.0332663,
 	0.0541964,
 	0.0592793,
 	0.282603,
 	0.236806,
 	0.303511,
 	0.329817,
 	0.140107,
 	-0.248118,
 	-0.163031,
 	0.0442611,
 	0.143901,
 	0.163650,
 	0.233309,
 	-0.289396,
 	0.0996490,
 	0.00351348,
 	0.192796,
 	-0.0591427,
 	0.136956,
 	-0.285657,
 	-0.281959,
 	0.251256,
 	0.264105) 
 b.b = VectorD(0.377992)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(-0.156615,
 	-0.186448,
 	153.587,
 	177.641,
 	1.72467,
 	1.31327,
 	1.11672,
 	13.0000,
 	504.000,
 	-5.24967,
 	-146.477,
 	-109.591,
 	Infinity,
 	131.599)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 103
DEBUG @ PredictorMV.validate: test set size = 103
optimize3: bSize = 20, nB = 20
ending epoch = (783.5580164960503,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(0.00809919,
 	-0.133817,
 	-0.273866,
 	0.0164821,
 	0.0393535,
 	0.0231083,
 	0.282400,
 	0.230399,
 	0.302273,
 	0.335322,
 	0.110092,
 	-0.297024,
 	-0.203511,
 	0.0182804,
 	0.144653,
 	0.146533,
 	0.234173,
 	-0.344046,
 	0.0840173,
 	-0.0194024,
 	0.211734,
 	-0.112155,
 	0.121188,
 	-0.331647,
 	-0.340089,
 	0.247623,
 	0.252625) 
 b.b = VectorD(0.384887)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(-0.0196850,
 	-0.0459864,
 	189.018,
 	192.739,
 	1.87125,
 	1.36794,
 	1.14049,
 	13.0000,
 	504.000,
 	-0.748438,
 	-150.431,
 	-113.545,
 	Infinity,
 	140.209)
--------------------------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 12) ADD variable (5, FFMC) => cols = LinkedHashSet(0, 3, 1, 11, 12, 10, 6, 4, 8, 2, 9, 7, 5) @ -0.003326197242491169 |
--------------------------------------------------------------------------------------------------------------------------------------------
k = 13, n = 13
Run + title
x-axis: minX = 0.0, maxX = 12.0
y-axis: minY = -5.0, maxY = 3.0
rSq = 
MatrixD(1.11137,	0.727339,	-2.51547,
 	1.70372,	1.13001,	-2.88430,
 	2.13587,	1.37280,	-2.35203,
 	2.27642,	1.32209,	-2.56021,
 	2.32336,	1.17648,	-3.24288,
 	2.55107,	1.21353,	-3.52069,
 	2.55114,	1.01953,	-3.81069,
 	2.46624,	0.738281,	-3.66371,
 	2.63269,	0.712228,	-3.69916,
 	2.47683,	0.356765,	-3.97384,
 	2.18318,	-0.141181,	-4.03148,
 	2.19025,	-0.332620,	-3.81016)
