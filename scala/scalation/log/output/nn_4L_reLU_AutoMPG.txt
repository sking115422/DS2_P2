readFileIntoArray: C:\Users\spenc\Desktop\UGA_projects\data_science\DS2_P2\scala\scalation\data\auto_mpg_fixed_cleaned.csv
load: read 99 data rows so far ...
load: read 199 data rows so far ...
load: read 299 data rows so far ...
load: read in an 392-by-8 matrix from auto_mpg_fixed_cleaned.csv
ox_fname = Array(intercept, cylinders, displacement, horsepower, weight, acceleration, modelyear)
--------------------------------------
| NeuralNet_XL for AutoMPG with reLU |
--------------------------------------
auto_optimize: etaI = (2.5E-4,0.004)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 2.5E-4, result = (4131.395490610036,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 4.84375E-4, result = (4128.970310465444,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 7.1875E-4, result = (4102.865126356249,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 9.53125E-4, result = (4160.091596390137,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.0011875, result = (4157.4792135826265,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.001421875, result = (4291.073013298229,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.00165625, result = (4372.423921682408,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.001890625, result = (4416.118652724971,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.002125, result = (4396.5687684767145,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.0023593750000000004, result = (4396.753857960906,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.0025937499999999997, result = (4360.914960035863,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.002828125, result = (4061.189189711385,365)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.0030625, result = (4061.189189711385,-3)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.0032968750000000003, result = (4061.189189711385,370)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.0035312499999999997, result = (4061.189189711385,-3)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.003765625, result = (4061.189189711385,288)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.004, result = (4061.189189711385,-3)
ending epoch = (4061.189189711385,365)

REPORT
    ----------------------------------------------------------------------------
    modelName  mn  = NeuralNet_XL_reLU_reLU
    ----------------------------------------------------------------------------
    hparameter hp  = HyperParameter (HashMap(lambda -> (0.01,0.01), maxEpochs -> (400,400), eta -> (0.1,0.1), nu -> (0.9,0.9), upLimit -> (4,4), beta -> (0.9,0.9), bSize -> (20,20)))
    ----------------------------------------------------------------------------
    features   fn  = Array(intercept, cylinders, displacement, horsepower, weight, acceleration, modelyear)
    ----------------------------------------------------------------------------
    parameter  bb  = Array(b.w = 
MatrixD(0.534693,	0.495076,	0.294402,	0.406283,	0.314571,	0.0924643,	0.382736,	0.625963,	0.555849,	0.491012,	0.332229,	0.333073,	0.266986,	0.434481,	0.502277,
 	0.121310,	0.176765,	-0.0327813,	0.0644469,	-0.0145868,	0.125180,	0.0475703,	-0.0873980,	-0.119486,	-0.119354,	0.0890475,	0.0433024,	-0.0792833,	-0.114222,	0.194170,
 	-0.0300766,	0.164638,	0.124507,	-0.0606318,	0.116343,	-0.0328903,	-0.0505302,	0.149497,	-0.143145,	0.163634,	-0.108259,	-0.0509488,	0.0716847,	0.00175139,	-0.0923516,
 	0.0221806,	-0.207710,	0.00431650,	0.0616458,	-0.118539,	-0.0269734,	0.00931147,	0.105474,	-0.0162354,	-0.00560072,	0.114316,	0.0305834,	0.00663103,	0.164362,	-0.131264,
 	0.00240111,	-0.197386,	-0.210112,	0.0546653,	-0.243288,	-0.0851381,	-0.152204,	-0.105077,	-0.277312,	-0.352462,	-0.264701,	-0.272321,	-0.103369,	-0.0913057,	-0.151688,
 	0.0600126,	-0.118888,	0.0431110,	0.187091,	-0.000971894,	0.196014,	0.124781,	-0.105864,	-0.0627063,	-0.250586,	-0.0746177,	0.0632689,	0.0297977,	-0.194761,	-0.138785,
 	0.316768,	0.184508,	0.151127,	0.0473567,	0.152514,	-0.0189164,	0.165618,	0.00988490,	0.0815400,	0.103468,	0.0674836,	0.0392206,	0.213432,	0.179610,	0.0887449) 
 b.b = VectorD(0.432471,	0.398611,	0.262944,	0.321522,	0.217039,	0.0304276,	0.293647,	0.487061,	0.391609,	0.363106,	0.262117,	0.293061,	0.220389,	0.343123,	0.387905), b.w = 
MatrixD(0.150818,	0.120965,	-0.0158358,	0.129298,	0.0449981,	-0.00739949,	0.101068,
 	0.274731,	0.249883,	0.206220,	0.129755,	0.0108747,	0.0557839,	0.170061,
 	0.171405,	0.179732,	0.219128,	0.0663613,	0.0922864,	0.0838254,	0.125587,
 	0.0839002,	0.0216581,	0.00443391,	-0.0408170,	0.0895356,	0.143651,	-0.00479022,
 	0.577498,	0.725079,	0.384392,	0.746318,	0.631182,	0.278390,	0.628828,
 	0.693996,	0.644824,	0.574612,	0.627281,	0.718822,	0.290825,	0.644293,
 	0.302369,	0.237905,	0.102911,	0.314129,	0.145229,	0.209684,	0.261600,
 	0.0956092,	0.0707297,	0.115469,	0.256072,	0.178684,	0.135341,	0.202619,
 	0.707339,	0.541552,	0.466056,	0.506450,	0.604380,	0.333596,	0.471799,
 	0.328373,	0.148862,	0.0420427,	0.210563,	0.281478,	0.153730,	0.101914,
 	0.0427158,	0.124541,	0.103408,	0.181810,	0.155207,	0.187092,	0.111123,
 	0.272544,	0.309353,	0.251211,	0.348805,	0.315008,	0.148089,	0.335013,
 	0.0919500,	0.138424,	0.253455,	0.193633,	0.0475213,	0.102354,	0.297182,
 	0.192407,	0.148656,	0.0462542,	0.183912,	0.0249237,	0.156128,	0.0649630,
 	0.206152,	0.175776,	0.0856235,	0.114655,	0.197015,	0.169426,	0.146932) 
 b.b = VectorD(0.568741,	0.473646,	0.130717,	0.500402,	0.312991,	0.132178,	0.416819), b.w = 
MatrixD(1.41628,
 	1.29431,
 	0.838215,
 	1.32906,
 	1.21512,
 	0.624895,
 	1.19628) 
 b.b = VectorD(1.38596))
    ----------------------------------------------------------------------------
    fitMap     qof = 
		rSq 	 -> VectorD(0.820097) 
		rSqBar 	 -> VectorD(0.816826) 
		sst 	 -> VectorD(23819.0) 
		sse 	 -> VectorD(4285.10) 
		mse0 	 -> VectorD(10.9314) 
		rmse 	 -> VectorD(3.30626) 
		mae 	 -> VectorD(2.49636) 
		dfm 	 -> VectorD(7.00000) 
		df 	 -> VectorD(385.000) 
		fStat 	 -> VectorD(250.721) 
		aic 	 -> VectorD(-1009.00) 
		bic 	 -> VectorD(-977.229) 
		mape 	 -> VectorD(11.0826) 
		smape 	 -> VectorD(11.0230) 

    ----------------------------------------------------------------------------
        
Run + title
--------------------
| Cross-Validation |
--------------------
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3320.986331406199,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.838559,
 	0.835623,
 	4731.23,
 	763.817,
 	9.79252,
 	3.12930,
 	2.30059,
 	7.00000,
 	385.000,
 	285.681,
 	-183.842,
 	-164.988,
 	10.2259,
 	10.3854)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3363.006871476134,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.792867,
 	0.789101,
 	4472.51,
 	926.404,
 	11.8770,
 	3.44630,
 	2.83337,
 	7.00000,
 	385.000,
 	210.530,
 	-191.368,
 	-172.514,
 	13.6550,
 	12.5324)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3108.7063104102463,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.775418,
 	0.771335,
 	4664.26,
 	1047.51,
 	13.4296,
 	3.66464,
 	2.76197,
 	7.00000,
 	385.000,
 	189.900,
 	-196.973,
 	-178.120,
 	12.9850,
 	12.3473)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3427.2566823159855,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.806998,
 	0.803489,
 	3962.82,
 	764.831,
 	9.80552,
 	3.13138,
 	2.45342,
 	7.00000,
 	385.000,
 	229.972,
 	-183.889,
 	-165.035,
 	11.6670,
 	11.0886)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3145.1756842091772,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.837456,
 	0.834501,
 	5671.58,
 	921.880,
 	11.8190,
 	3.43787,
 	2.57583,
 	7.00000,
 	385.000,
 	283.370,
 	-191.158,
 	-172.305,
 	10.9214,
 	11.1775)
-----------------------------------------------
| showQofStatTable: Statistical Table for QoF |
-----------------------------------------------
|        name |   num |        min |        max |       mean |      stdev |   interval |
----------------------------------------------------------------------------------------
|         rSq |     5 |      0.775 |      0.839 |      0.810 |      0.028 |      0.034 |
|      rSqBar |     5 |      0.771 |      0.836 |      0.807 |      0.028 |      0.035 |
|         sst |     5 |   3962.818 |   5671.580 |   4700.481 |    620.767 |    770.935 |
|         sse |     5 |    763.817 |   1047.508 |    884.888 |    121.047 |    150.329 |
|        mse0 |     5 |      9.793 |     13.430 |     11.345 |      1.552 |      1.927 |
|        rmse |     5 |      3.129 |      3.665 |      3.362 |      0.230 |      0.286 |
|         mae |     5 |      2.301 |      2.833 |      2.585 |      0.219 |      0.272 |
|         dfm |     5 |      7.000 |      7.000 |      7.000 |      0.000 |      0.000 |
|          df |     5 |    385.000 |    385.000 |    385.000 |      0.000 |      0.000 |
|       fStat |     5 |    189.900 |    285.681 |    239.890 |     43.147 |     53.585 |
|         aic |     5 |   -196.973 |   -183.842 |   -189.446 |      5.603 |      6.958 |
|         bic |     5 |   -178.120 |   -164.988 |   -170.592 |      5.603 |      6.958 |
|        mape |     5 |     10.226 |     13.655 |     11.891 |      1.421 |      1.764 |
|       smape |     5 |     10.385 |     12.532 |     11.506 |      0.908 |      1.128 |
----------------------------------------------------------------------------------------
----------------------------------------
| Feature Selection Technique: Forward |
----------------------------------------
-------------------------------------------------------------------------------------
| forwardSelAll: (l = 0) INITIAL variable (0, intercept) => cols = LinkedHashSet(0) |
-------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (9452.397136760888,400)
optimize: bSize = 20, nB = 19
ending epoch = (8001.431933851429,400)
optimize: bSize = 20, nB = 19
ending epoch = (7940.890279902171,400)
optimize: bSize = 20, nB = 19
ending epoch = (7039.306046042943,400)
optimize: bSize = 20, nB = 19
ending epoch = (19557.90742849854,400)
optimize: bSize = 20, nB = 19
ending epoch = (15362.45334160069,311)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5665.436209714975,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.726595,
 	0.725193,
 	4731.23,
 	1293.54,
 	16.5839,
 	4.07233,
 	2.93468,
 	2.00000,
 	390.000,
 	518.227,
 	-214.300,
 	-207.230,
 	12.5257,
 	12.5661)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5628.310337710495,307)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.719242,
 	0.717802,
 	4472.51,
 	1255.70,
 	16.0987,
 	4.01231,
 	3.19462,
 	2.00000,
 	390.000,
 	499.547,
 	-213.237,
 	-206.167,
 	14.0591,
 	13.8407)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5247.185347013608,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.629460,
 	0.627560,
 	4664.26,
 	1728.29,
 	22.1576,
 	4.70719,
 	3.48205,
 	2.00000,
 	390.000,
 	331.259,
 	-226.517,
 	-219.447,
 	14.9246,
 	14.0487)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5193.680968091221,294)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.698054,
 	0.696505,
 	3962.82,
 	1196.56,
 	15.3405,
 	3.91669,
 	3.06050,
 	2.00000,
 	390.000,
 	450.810,
 	-211.575,
 	-204.505,
 	13.9615,
 	13.4684)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5480.037453958616,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.732532,
 	0.731161,
 	5671.58,
 	1516.96,
 	19.4483,
 	4.41002,
 	2.93359,
 	2.00000,
 	390.000,
 	534.060,
 	-220.579,
 	-213.509,
 	10.8892,
 	11.1852)
------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 1) ADD variable (4, weight) => cols = LinkedHashSet(0, 4) @ 0.7056753684899751 |
------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (6974.838928690162,255)
optimize: bSize = 20, nB = 19
ending epoch = (6951.800642426929,400)
optimize: bSize = 20, nB = 19
ending epoch = (6581.880880959894,400)
optimize: bSize = 20, nB = 19
ending epoch = (7039.955587575311,82)
optimize: bSize = 20, nB = 19
ending epoch = (4310.642192916787,284)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3510.6892486267816,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.839095,
 	0.837854,
 	4731.23,
 	761.280,
 	9.76000,
 	3.12410,
 	2.27644,
 	3.00000,
 	389.000,
 	676.191,
 	-191.781,
 	-182.355,
 	9.94161,
 	9.98256)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3460.129912003382,202)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.823001,
 	0.821635,
 	4472.51,
 	791.633,
 	10.1491,
 	3.18577,
 	2.61618,
 	3.00000,
 	389.000,
 	602.915,
 	-193.167,
 	-183.740,
 	12.4245,
 	11.6743)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3338.194363312927,107)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.811659,
 	0.810206,
 	4664.26,
 	878.472,
 	11.2625,
 	3.35596,
 	2.43652,
 	3.00000,
 	389.000,
 	558.800,
 	-197.130,
 	-187.703,
 	11.2944,
 	11.2573)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3338.194363312927,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.815940,
 	0.814520,
 	3962.82,
 	729.398,
 	9.35126,
 	3.05798,
 	2.46014,
 	3.00000,
 	389.000,
 	574.812,
 	-190.326,
 	-180.899,
 	11.6764,
 	11.2990)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3150.564148843925,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.804822,
 	0.803317,
 	5671.58,
 	1106.97,
 	14.1919,
 	3.76721,
 	2.70728,
 	3.00000,
 	389.000,
 	534.685,
 	-207.558,
 	-198.131,
 	10.9228,
 	11.4833)
-----------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 2) ADD variable (6, modelyear) => cols = LinkedHashSet(0, 4, 6) @ 0.818272960779384 |
-----------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (4539.049448358347,400)
optimize: bSize = 20, nB = 19
ending epoch = (4434.514184107144,400)
optimize: bSize = 20, nB = 19
ending epoch = (4306.343813305463,178)
optimize: bSize = 20, nB = 19
ending epoch = (3561.81419133389,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2995.6732955843195,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.874271,
 	0.872974,
 	4731.23,
 	594.856,
 	7.62635,
 	2.76159,
 	1.92898,
 	4.00000,
 	388.000,
 	674.498,
 	-180.285,
 	-168.501,
 	8.21541,
 	8.21487)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2747.4736814662265,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.829307,
 	0.827547,
 	4472.51,
 	763.429,
 	9.78755,
 	3.12851,
 	2.54764,
 	4.00000,
 	388.000,
 	471.270,
 	-189.875,
 	-178.091,
 	11.5487,
 	11.0563)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2697.825187353219,71)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.844247,
 	0.842641,
 	4664.26,
 	726.472,
 	9.31374,
 	3.05184,
 	2.23857,
 	4.00000,
 	388.000,
 	525.781,
 	-187.772,
 	-175.989,
 	10.0629,
 	9.70247)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2697.825187353219,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.854680,
 	0.853182,
 	3962.82,
 	575.875,
 	7.38302,
 	2.71717,
 	2.05359,
 	4.00000,
 	388.000,
 	570.494,
 	-179.205,
 	-167.421,
 	9.30263,
 	9.11431)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2670.221365851664,130)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.864526,
 	0.863130,
 	5671.58,
 	768.349,
 	9.85063,
 	3.13857,
 	2.26301,
 	4.00000,
 	388.000,
 	619.007,
 	-190.155,
 	-178.371,
 	9.12100,
 	9.18771)
------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 3) ADD variable (5, acceleration) => cols = LinkedHashSet(0, 4, 6, 5) @ 0.8537667161129155 |
------------------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (4396.0063541469235,166)
optimize: bSize = 20, nB = 19
ending epoch = (4351.1423368944415,148)
optimize: bSize = 20, nB = 19
ending epoch = (4367.689953835064,25)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3581.871137415741,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.836329,
 	0.834214,
 	4731.23,
 	774.366,
 	9.92777,
 	3.15084,
 	2.32864,
 	5.00000,
 	387.000,
 	395.500,
 	-188.418,
 	-174.278,
 	10.4220,
 	10.5126)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3495.0595057906685,96)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.807897,
 	0.805415,
 	4472.51,
 	859.182,
 	11.0152,
 	3.31891,
 	2.73915,
 	5.00000,
 	387.000,
 	325.510,
 	-192.249,
 	-178.109,
 	12.9465,
 	12.1873)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3369.4241436049742,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.795161,
 	0.792514,
 	4664.26,
 	955.423,
 	12.2490,
 	3.49986,
 	2.63044,
 	5.00000,
 	387.000,
 	300.457,
 	-196.597,
 	-182.457,
 	12.6000,
 	12.5718)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3629.8383593363233,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.807490,
 	0.805003,
 	3962.82,
 	762.881,
 	9.78053,
 	3.12738,
 	2.47125,
 	5.00000,
 	387.000,
 	324.658,
 	-187.899,
 	-173.759,
 	11.7624,
 	11.2357)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3161.4688681376156,192)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.820919,
 	0.818606,
 	5671.58,
 	1015.67,
 	13.0214,
 	3.60852,
 	2.60846,
 	5.00000,
 	387.000,
 	354.807,
 	-199.318,
 	-185.178,
 	10.8338,
 	11.1546)
---------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 4) ADD variable (2, displacement) => cols = LinkedHashSet(0, 4, 6, 5, 2) @ 0.8149781720960706 |
---------------------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (4174.683106753514,218)
optimize: bSize = 20, nB = 19
ending epoch = (4064.1518538774503,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2867.5919310353347,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.860230,
 	0.858058,
 	4731.23,
 	661.283,
 	8.47799,
 	2.91170,
 	1.99307,
 	6.00000,
 	386.000,
 	395.948,
 	-180.509,
 	-164.012,
 	8.42956,
 	8.61020)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2763.819876926301,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.828209,
 	0.825538,
 	4472.51,
 	768.339,
 	9.85050,
 	3.13855,
 	2.51400,
 	6.00000,
 	386.000,
 	310.152,
 	-185.892,
 	-169.395,
 	11.5941,
 	11.1406)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2577.902652426553,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.863657,
 	0.861537,
 	4664.26,
 	635.941,
 	8.15310,
 	2.85536,
 	2.14685,
 	6.00000,
 	386.000,
 	407.514,
 	-179.235,
 	-162.738,
 	9.71018,
 	9.45033)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2864.7787916341454,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.866630,
 	0.864557,
 	3962.82,
 	528.521,
 	6.77591,
 	2.60306,
 	1.88823,
 	6.00000,
 	386.000,
 	418.034,
 	-173.833,
 	-157.336,
 	8.59137,
 	8.40374)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2679.7593534283305,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.855612,
 	0.853368,
 	5671.58,
 	818.907,
 	10.4988,
 	3.24019,
 	2.30915,
 	6.00000,
 	386.000,
 	381.226,
 	-188.435,
 	-171.938,
 	9.03851,
 	9.35713)
----------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 5) ADD variable (3, horsepower) => cols = LinkedHashSet(0, 4, 6, 5, 2, 3) @ 0.8334206140476664 |
----------------------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (4418.543629145117,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3493.652035545713,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.848116,
 	0.845354,
 	4731.23,
 	718.599,
 	9.21281,
 	3.03526,
 	2.26810,
 	7.00000,
 	385.000,
 	307.118,
 	-181.528,
 	-162.675,
 	10.1122,
 	10.1222)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3091.4445041536533,169)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.822206,
 	0.818974,
 	4472.51,
 	795.185,
 	10.1947,
 	3.19291,
 	2.59219,
 	7.00000,
 	385.000,
 	254.347,
 	-185.234,
 	-166.380,
 	12.0402,
 	11.4503)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3151.1685754824425,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.818045,
 	0.814737,
 	4664.26,
 	848.685,
 	10.8806,
 	3.29857,
 	2.46188,
 	7.00000,
 	385.000,
 	247.273,
 	-187.822,
 	-168.968,
 	11.2956,
 	11.0159)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (3151.696745917886,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.843837,
 	0.840998,
 	3962.82,
 	618.846,
 	7.93393,
 	2.81672,
 	2.18955,
 	7.00000,
 	385.000,
 	297.196,
 	-176.702,
 	-157.848,
 	9.96127,
 	9.64086)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2843.220583514831,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.839454,
 	0.836535,
 	5671.58,
 	910.550,
 	11.6737,
 	3.41668,
 	2.49742,
 	7.00000,
 	385.000,
 	287.581,
 	-190.815,
 	-171.961,
 	10.2462,
 	10.6027)
------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 6) ADD variable (1, cylinders) => cols = LinkedHashSet(0, 4, 6, 5, 2, 3, 1) @ 0.8267987453174798 |
------------------------------------------------------------------------------------------------------------------------
k = 7, n = 7
Run + title
x-axis: minX = 0.0, maxX = 6.0
y-axis: minY = 70.0, maxY = 86.0
rSq = 
MatrixD(70.7177,	70.5675,	70.1176,
 	81.9664,	81.8273,	81.8903,
 	85.5259,	85.3767,	85.3406,
 	81.7338,	81.4978,	81.3559,
 	83.5970,	83.3421,	85.4868,
 	82.9892,	82.6799,	83.4332)
