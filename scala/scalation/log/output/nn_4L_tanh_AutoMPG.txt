readFileIntoArray: C:\Users\spenc\Desktop\UGA_projects\data_science\DS2_P2\scala\scalation\data\auto_mpg_fixed_cleaned.csv
load: read 99 data rows so far ...
load: read 199 data rows so far ...
load: read 299 data rows so far ...
load: read in an 392-by-8 matrix from auto_mpg_fixed_cleaned.csv
--------------------------------------
| NeuralNet_XL for AutoMPG with tanh |
--------------------------------------
auto_optimize: etaI = (0.025,0.4)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.025, result = (3034.600697333873,160)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.0484375, result = (3034.600697333873,-3)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.071875, result = (2501.877492956184,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.0953125, result = (2438.195895708693,79)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.11875, result = (2438.195895708693,-3)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.1421875, result = (2461.2283199396907,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.165625, result = (2243.935599146946,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.1890625, result = (2309.6986753105916,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.2125, result = (2141.622051404363,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.2359375, result = (2354.7159464826,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.259375, result = (2100.359830021584,376)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.2828125, result = (2100.359830021584,-3)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.30625, result = (2100.359830021584,-3)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.3296875, result = (2100.359830021584,-3)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.353125, result = (2302.439800684513,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.3765625, result = (2361.3583684479904,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.4, result = (2100.359830021584,152)
ending epoch = (2100.359830021584,376)

REPORT
    ----------------------------------------------------------------------------
    modelName  mn  = NeuralNet_XL_sigmoid_sigmoid
    ----------------------------------------------------------------------------
    hparameter hp  = HyperParameter (HashMap(lambda -> (0.01,0.01), maxEpochs -> (400,400), eta -> (0.1,0.1), nu -> (0.9,0.9), upLimit -> (4,4), beta -> (0.9,0.9), bSize -> (20,20)))
    ----------------------------------------------------------------------------
    features   fn  = Array(intercept, cylinders, displacement, horsepower, weight, acceleration, modelyear)
    ----------------------------------------------------------------------------
    parameter  bb  = Array(b.w = 
MatrixD(1.18682,	3.39823,	-1.68625,	0.319577,	-2.44006,	-1.36592,	-0.422782,	0.206254,	-2.96398,	4.94901,	-0.567608,	-1.13985,	-4.92610,	2.82267,	0.00681994,
 	-1.88659,	-7.88245,	0.690343,	3.82920,	-0.345978,	2.47698,	2.42896,	-4.29694,	3.38281,	-2.62655,	2.94321,	1.94345,	0.585815,	-1.34113,	1.56895,
 	2.37466,	0.474975,	-0.414619,	-2.84405,	0.319052,	-3.74367,	-2.91200,	-0.459803,	-4.44544,	-6.83790,	-4.07091,	-2.77174,	0.0523414,	0.737710,	-1.59093,
 	2.49412,	-1.20597,	-2.69972,	-1.65342,	-7.91041,	-5.27968,	-3.79501,	7.29552,	-7.87159,	0.562296,	-4.59006,	-4.46947,	-3.37941,	-1.81108,	-2.65208,
 	4.57378,	-1.97949,	-2.23248,	-4.16866,	-4.77283,	-4.81378,	-5.55888,	3.93268,	-4.19144,	-8.75542,	-6.34089,	-4.98270,	-3.01282,	-3.35370,	-6.14450,
 	0.0999980,	-4.67185,	-0.620500,	-1.06372,	4.29295,	2.20003,	-0.0554453,	-4.34113,	4.75014,	-11.1012,	0.407949,	0.990281,	0.0285826,	-4.78158,	-3.21550,
 	-0.259737,	1.09298,	9.28740,	-8.76796,	5.72501,	0.820901,	0.566959,	1.73481,	1.86599,	-1.75669,	0.720477,	1.32664,	15.4828,	2.97341,	1.16420) 
 b.b = VectorD(0.389669,	4.07241,	-0.320712,	1.27961,	-1.90118,	-0.655609,	0.222436,	-1.11596,	-2.15062,	5.96210,	0.198626,	-0.479855,	-4.51098,	3.45900,	0.577741), b.w = 
MatrixD(-1.38591,	-3.96612,	-2.65692,	-2.40084,	-3.04489,	-3.06777,	-3.37718,
 	2.93776,	6.87498,	-3.51957,	3.73240,	-2.76381,	-0.247965,	-0.0123352,
 	2.53543,	3.49353,	1.78533,	3.04971,	2.79849,	1.41565,	2.44678,
 	2.83372,	3.46772,	-1.17747,	3.49234,	-1.46023,	2.05853,	3.51903,
 	1.02714,	3.95813,	1.27156,	0.886933,	3.08493,	-0.499487,	1.85551,
 	1.00938,	1.18709,	3.11971,	1.06773,	1.67508,	1.36880,	1.06701,
 	1.25860,	0.491086,	1.25046,	1.65665,	1.09658,	2.21859,	0.742441,
 	-0.605921,	-0.771746,	-3.75433,	-2.83149,	-2.66386,	-3.58022,	-1.29495,
 	1.31641,	2.40829,	5.63271,	1.15303,	2.75714,	1.03256,	1.58378,
 	1.41220,	3.45166,	-3.51938,	0.0810642,	2.42778,	5.38200,	4.67740,
 	1.07735,	0.609723,	1.92095,	1.49018,	1.55238,	2.47683,	1.08748,
 	1.15326,	1.13237,	1.83027,	1.37280,	1.57605,	1.36209,	1.01192,
 	2.03246,	1.17769,	3.59100,	1.89708,	6.95463,	2.04882,	6.13795,
 	4.78959,	-1.99002,	-1.16551,	1.70403,	-1.72939,	-0.597510,	-1.51466,
 	1.44454,	1.30573,	-1.43841,	1.53651,	0.957591,	1.86154,	1.08028) 
 b.b = VectorD(-0.603247,	-4.19850,	-4.19704,	-0.680918,	-5.07268,	-2.70743,	-4.13192), b.w = 
MatrixD(6.43537,
 	4.14538,
 	8.98093,
 	5.20435,
 	4.32012,
 	3.79847,
 	3.72774) 
 b.b = VectorD(8.53372))
    ----------------------------------------------------------------------------
    fitMap     qof = 
		rSq 	 -> VectorD(0.915512) 
		rSqBar 	 -> VectorD(0.913976) 
		sst 	 -> VectorD(23819.0) 
		sse 	 -> VectorD(2012.42) 
		mse0 	 -> VectorD(5.13371) 
		rmse 	 -> VectorD(2.26577) 
		mae 	 -> VectorD(1.65887) 
		dfm 	 -> VectorD(7.00000) 
		df 	 -> VectorD(385.000) 
		fStat 	 -> VectorD(595.981) 
		aic 	 -> VectorD(-860.847) 
		bic 	 -> VectorD(-829.077) 
		mape 	 -> VectorD(7.19899) 
		smape 	 -> VectorD(7.05710) 

    ----------------------------------------------------------------------------
        
Run + title
--------------------
| Cross-Validation |
--------------------
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1303.9578899694027,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.870149,
 	0.867788,
 	4731.23,
 	614.357,
 	7.87637,
 	2.80649,
 	1.86388,
 	7.00000,
 	385.000,
 	368.561,
 	-179.364,
 	-160.510,
 	7.57440,
 	7.54742)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1242.6481261074277,275)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.884706,
 	0.882609,
 	4472.51,
 	515.656,
 	6.61098,
 	2.57118,
 	1.98304,
 	7.00000,
 	385.000,
 	422.039,
 	-169.726,
 	-150.873,
 	8.96982,
 	8.55316)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1242.6481261074277,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.925434,
 	0.924079,
 	4664.26,
 	347.794,
 	4.45889,
 	2.11161,
 	1.49626,
 	7.00000,
 	385.000,
 	682.605,
 	-153.335,
 	-134.481,
 	6.34873,
 	6.16028)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1242.6481261074277,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.917702,
 	0.916205,
 	3962.82,
 	326.134,
 	4.18120,
 	2.04480,
 	1.51524,
 	7.00000,
 	385.000,
 	613.300,
 	-151.220,
 	-132.366,
 	6.86887,
 	6.63137)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1242.6481261074277,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.949107,
 	0.948182,
 	5671.58,
 	288.643,
 	3.70055,
 	1.92368,
 	1.40233,
 	7.00000,
 	385.000,
 	1025.70,
 	-147.559,
 	-128.705,
 	5.87306,
 	5.82389)
-----------------------------------------------
| showQofStatTable: Statistical Table for QoF |
-----------------------------------------------
|        name |   num |        min |        max |       mean |      stdev |   interval |
----------------------------------------------------------------------------------------
|         rSq |     5 |      0.870 |      0.949 |      0.909 |      0.032 |      0.040 |
|      rSqBar |     5 |      0.868 |      0.948 |      0.908 |      0.032 |      0.040 |
|         sst |     5 |   3962.818 |   5671.580 |   4700.481 |    620.767 |    770.935 |
|         sse |     5 |    288.643 |    614.357 |    418.517 |    139.815 |    173.637 |
|        mse0 |     5 |      3.701 |      7.876 |      5.366 |      1.793 |      2.226 |
|        rmse |     5 |      1.924 |      2.806 |      2.292 |      0.378 |      0.470 |
|         mae |     5 |      1.402 |      1.983 |      1.652 |      0.255 |      0.316 |
|         dfm |     5 |      7.000 |      7.000 |      7.000 |      0.000 |      0.000 |
|          df |     5 |    385.000 |    385.000 |    385.000 |      0.000 |      0.000 |
|       fStat |     5 |    368.561 |   1025.701 |    622.441 |    260.258 |    323.217 |
|         aic |     5 |   -179.364 |   -147.559 |   -160.241 |     13.653 |     16.955 |
|         bic |     5 |   -160.510 |   -128.705 |   -141.387 |     13.653 |     16.955 |
|        mape |     5 |      5.873 |      8.970 |      7.127 |      1.208 |      1.501 |
|       smape |     5 |      5.824 |      8.553 |      6.943 |      1.109 |      1.377 |
----------------------------------------------------------------------------------------
----------------------------------------
| Feature Selection Technique: Forward |
----------------------------------------
-------------------------------------------------------------------------------------
| forwardSelAll: (l = 0) INITIAL variable (0, intercept) => cols = LinkedHashSet(0) |
-------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (8965.611883121403,400)
optimize: bSize = 20, nB = 19
ending epoch = (7254.231387136392,400)
optimize: bSize = 20, nB = 19
ending epoch = (7626.475395715401,400)
optimize: bSize = 20, nB = 19
ending epoch = (7010.663276398029,400)
optimize: bSize = 20, nB = 19
ending epoch = (18608.44047235689,299)
optimize: bSize = 20, nB = 19
ending epoch = (14564.120680326801,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5647.833790823244,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.727402,
 	0.726004,
 	4731.23,
 	1289.72,
 	16.5349,
 	4.06631,
 	2.86905,
 	2.00000,
 	390.000,
 	520.340,
 	-214.122,
 	-207.052,
 	12.2872,
 	12.2353)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5586.535960704193,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.709261,
 	0.707770,
 	4472.51,
 	1300.33,
 	16.6709,
 	4.08301,
 	3.24437,
 	2.00000,
 	390.000,
 	475.705,
 	-214.430,
 	-207.360,
 	15.2615,
 	14.0296)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5331.49823622202,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.651394,
 	0.649606,
 	4664.26,
 	1625.99,
 	20.8460,
 	4.56574,
 	3.21317,
 	2.00000,
 	390.000,
 	364.371,
 	-223.887,
 	-216.817,
 	13.2148,
 	12.9826)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5614.171224842967,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.694633,
 	0.693067,
 	3962.82,
 	1210.11,
 	15.5143,
 	3.93882,
 	3.01603,
 	2.00000,
 	390.000,
 	443.576,
 	-211.810,
 	-204.740,
 	13.3305,
 	13.2461)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5455.455884734012,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.762329,
 	0.761110,
 	5671.58,
 	1347.97,
 	17.2817,
 	4.15713,
 	2.79346,
 	2.00000,
 	390.000,
 	625.461,
 	-215.814,
 	-208.744,
 	10.3725,
 	10.6358)
------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 1) ADD variable (4, weight) => cols = LinkedHashSet(0, 4) @ 0.7141505438459886 |
------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (6345.378612497852,400)
optimize: bSize = 20, nB = 19
ending epoch = (6381.708282669126,288)
optimize: bSize = 20, nB = 19
ending epoch = (5827.104198622314,400)
optimize: bSize = 20, nB = 19
ending epoch = (6377.055307325258,400)
optimize: bSize = 20, nB = 19
ending epoch = (3086.576363861142,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2299.228493938302,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.846578,
 	0.845394,
 	4731.23,
 	725.877,
 	9.30612,
 	3.05059,
 	2.20440,
 	3.00000,
 	389.000,
 	715.495,
 	-190.858,
 	-181.431,
 	9.65016,
 	9.52051)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2464.8808949847166,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.867077,
 	0.866052,
 	4472.51,
 	594.501,
 	7.62181,
 	2.76076,
 	2.16053,
 	3.00000,
 	389.000,
 	845.834,
 	-181.914,
 	-172.487,
 	10.2385,
 	9.58225)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2204.607754289634,140)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.852800,
 	0.851665,
 	4664.26,
 	686.580,
 	8.80231,
 	2.96687,
 	2.13381,
 	3.00000,
 	389.000,
 	751.220,
 	-188.183,
 	-178.756,
 	8.75055,
 	8.71701)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2204.607754289634,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.879951,
 	0.879025,
 	3962.82,
 	475.732,
 	6.09913,
 	2.46964,
 	1.76280,
 	3.00000,
 	389.000,
 	950.448,
 	-173.828,
 	-164.401,
 	8.03258,
 	8.00121)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2218.3286698282345,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.863776,
 	0.862725,
 	5671.58,
 	772.607,
 	9.90522,
 	3.14726,
 	2.31573,
 	3.00000,
 	389.000,
 	822.194,
 	-194.040,
 	-184.613,
 	9.19272,
 	9.43451)
------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 2) ADD variable (6, modelyear) => cols = LinkedHashSet(0, 4, 6) @ 0.8781819388219997 |
------------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (3342.4525267653908,63)
optimize: bSize = 20, nB = 19
ending epoch = (2893.691476061652,400)
optimize: bSize = 20, nB = 19
ending epoch = (2802.9177665966313,400)
optimize: bSize = 20, nB = 19
ending epoch = (2752.1875917698735,383)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2005.0622393792476,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.877005,
 	0.875737,
 	4731.23,
 	581.920,
 	7.46051,
 	2.73139,
 	1.86804,
 	4.00000,
 	388.000,
 	691.647,
 	-179.192,
 	-167.408,
 	8.16241,
 	8.08251)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1750.2738279113714,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.857795,
 	0.856328,
 	4472.51,
 	636.016,
 	8.15405,
 	2.85553,
 	2.24966,
 	4.00000,
 	388.000,
 	585.112,
 	-183.132,
 	-171.348,
 	10.1510,
 	9.72626)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1691.695227696339,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.886304,
 	0.885132,
 	4664.26,
 	530.309,
 	6.79883,
 	2.60746,
 	1.84430,
 	4.00000,
 	388.000,
 	756.150,
 	-175.432,
 	-163.649,
 	7.71819,
 	7.59799)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1711.9509915688875,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.865066,
 	0.863675,
 	3962.82,
 	534.717,
 	6.85535,
 	2.61827,
 	1.86329,
 	4.00000,
 	388.000,
 	621.872,
 	-175.753,
 	-163.970,
 	8.44686,
 	8.05549)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1613.1330233790966,327)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.941689,
 	0.941088,
 	5671.58,
 	330.714,
 	4.23992,
 	2.05911,
 	1.55887,
 	4.00000,
 	388.000,
 	1566.50,
 	-160.894,
 	-149.110,
 	6.55547,
 	6.57304)
-----------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 3) ADD variable (5, acceleration) => cols = LinkedHashSet(0, 4, 6, 5) @ 0.885131290832601 |
-----------------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (2791.160431547023,400)
optimize: bSize = 20, nB = 19
ending epoch = (3132.583432172174,84)
optimize: bSize = 20, nB = 19
ending epoch = (2583.976130995536,268)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1787.6567731727182,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.867083,
 	0.865366,
 	4731.23,
 	628.861,
 	8.06232,
 	2.83942,
 	1.86825,
 	5.00000,
 	387.000,
 	504.919,
 	-181.174,
 	-167.034,
 	8.02794,
 	8.02090)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1646.51761981475,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.847206,
 	0.845232,
 	4472.51,
 	683.374,
 	8.76121,
 	2.95993,
 	2.22653,
 	5.00000,
 	387.000,
 	429.164,
 	-185.421,
 	-171.280,
 	9.98825,
 	9.63093)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1561.5109378239797,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.890617,
 	0.889204,
 	4664.26,
 	510.189,
 	6.54089,
 	2.55752,
 	1.80692,
 	5.00000,
 	387.000,
 	630.207,
 	-171.929,
 	-157.789,
 	7.64196,
 	7.51876)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1534.352728405433,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.866954,
 	0.865235,
 	3962.82,
 	527.235,
 	6.75943,
 	2.59989,
 	1.81917,
 	5.00000,
 	387.000,
 	504.356,
 	-173.257,
 	-159.117,
 	8.19041,
 	7.88469)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1518.5237776132808,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.908239,
 	0.907054,
 	5671.58,
 	520.428,
 	6.67215,
 	2.58305,
 	1.81991,
 	5.00000,
 	387.000,
 	766.099,
 	-172.727,
 	-158.586,
 	7.43596,
 	7.52247)
------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 4) ADD variable (1, cylinders) => cols = LinkedHashSet(0, 4, 6, 5, 1) @ 0.8929308754389919 |
------------------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (2671.5275266559083,400)
optimize: bSize = 20, nB = 19
ending epoch = (2372.150827056474,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1614.9002046395804,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.872463,
 	0.870480,
 	4731.23,
 	603.409,
 	7.73601,
 	2.78137,
 	1.85467,
 	6.00000,
 	386.000,
 	440.094,
 	-178.648,
 	-162.151,
 	7.57608,
 	7.62841)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1409.5726320280635,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.851857,
 	0.849554,
 	4472.51,
 	662.573,
 	8.49453,
 	2.91454,
 	2.25320,
 	6.00000,
 	386.000,
 	369.931,
 	-183.898,
 	-167.401,
 	10.1246,
 	9.77741)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1314.258538531742,378)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.879752,
 	0.877883,
 	4664.26,
 	560.867,
 	7.19060,
 	2.68153,
 	1.95589,
 	6.00000,
 	386.000,
 	470.673,
 	-174.874,
 	-158.377,
 	8.30074,
 	8.08222)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1314.258538531742,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.909397,
 	0.907988,
 	3962.82,
 	359.045,
 	4.60314,
 	2.14549,
 	1.59276,
 	6.00000,
 	386.000,
 	645.721,
 	-156.967,
 	-140.470,
 	7.42345,
 	7.13841)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1314.258538531742,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.953288,
 	0.952561,
 	5671.58,
 	264.933,
 	3.39658,
 	1.84298,
 	1.29638,
 	6.00000,
 	386.000,
 	1312.89,
 	-148.617,
 	-132.120,
 	5.43484,
 	5.45921)
----------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 5) ADD variable (3, horsepower) => cols = LinkedHashSet(0, 4, 6, 5, 1, 3) @ 0.9056779374582535 |
----------------------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (2347.4430668398622,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1514.6350785025504,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.870702,
 	0.868351,
 	4731.23,
 	611.738,
 	7.84279,
 	2.80050,
 	1.88204,
 	7.00000,
 	385.000,
 	370.375,
 	-177.128,
 	-158.274,
 	7.83295,
 	7.83084)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1336.1743754047232,298)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.862558,
 	0.860059,
 	4472.51,
 	614.712,
 	7.88092,
 	2.80730,
 	2.15023,
 	7.00000,
 	385.000,
 	345.169,
 	-177.387,
 	-158.534,
 	9.79741,
 	9.34175)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1336.1743754047232,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.922095,
 	0.920679,
 	4664.26,
 	363.367,
 	4.65856,
 	2.15837,
 	1.54195,
 	7.00000,
 	385.000,
 	650.991,
 	-155.474,
 	-136.620,
 	6.68541,
 	6.52183)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1300.0936176004623,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.876362,
 	0.874114,
 	3962.82,
 	489.956,
 	6.28149,
 	2.50629,
 	1.86616,
 	7.00000,
 	385.000,
 	389.846,
 	-166.511,
 	-147.657,
 	8.56327,
 	8.27856)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1245.1717581034236,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.927408,
 	0.926088,
 	5671.58,
 	411.712,
 	5.27836,
 	2.29747,
 	1.63754,
 	7.00000,
 	385.000,
 	702.658,
 	-159.689,
 	-140.835,
 	6.71190,
 	6.75768)
---------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 6) ADD variable (2, displacement) => cols = LinkedHashSet(0, 4, 6, 5, 1, 3, 2) @ 0.9033591711372168 |
---------------------------------------------------------------------------------------------------------------------------
k = 7, n = 7
Run + title
x-axis: minX = 0.0, maxX = 6.0
y-axis: minY = 70.0, maxY = 91.0
rSq = 
MatrixD(71.5609,	71.4151,	70.9004,
 	87.9114,	87.8182,	86.2036,
 	88.6303,	88.5131,	88.5572,
 	89.4297,	89.2931,	87.6020,
 	90.7122,	90.5678,	89.3351,
 	90.5085,	90.3359,	89.1825)
