readFileIntoArray: C:\Users\spenc\Desktop\UGA_projects\data_science\DS2_P2\scala\scalation\data\auto_mpg_fixed_cleaned.csv
load: read 99 data rows so far ...
load: read 199 data rows so far ...
load: read 299 data rows so far ...
load: read in an 392-by-8 matrix from auto_mpg_fixed_cleaned.csv
ox_fname = Array(intercept, cylinders, displacement, horsepower, weight, acceleration, modelyear)
-----------------------------------------
| NeuralNet_XL for AutoMPG with sigmoid |
-----------------------------------------
auto_optimize: etaI = (0.025,0.4)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.025, result = (2903.9130514972194,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.0484375, result = (2568.5335274441254,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.071875, result = (2533.561623164931,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.0953125, result = (2486.0463433418254,251)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.11875, result = (2486.0463433418254,-3)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.1421875, result = (2311.511007425564,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.165625, result = (2364.501687980223,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.1890625, result = (2451.101982916063,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.2125, result = (2240.677983541223,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.2359375, result = (2240.677983541223,236)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.259375, result = (2240.677983541223,-3)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.2828125, result = (2240.677983541223,-3)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.30625, result = (2143.0544908661104,400)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.3296875, result = (1972.292857042343,198)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.353125, result = (1972.292857042343,-3)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.3765625, result = (1972.292857042343,-3)
optimize: bSize = 20, nB = 19
auto_optimize: eta = 0.4, result = (2536.7919034410847,400)
ending epoch = (1972.292857042343,198)

REPORT
    ----------------------------------------------------------------------------
    modelName  mn  = NeuralNet_XL_sigmoid_sigmoid
    ----------------------------------------------------------------------------
    hparameter hp  = HyperParameter (HashMap(lambda -> (0.01,0.01), maxEpochs -> (400,400), eta -> (0.1,0.1), nu -> (0.9,0.9), upLimit -> (4,4), beta -> (0.9,0.9), bSize -> (20,20)))
    ----------------------------------------------------------------------------
    features   fn  = Array(intercept, cylinders, displacement, horsepower, weight, acceleration, modelyear)
    ----------------------------------------------------------------------------
    parameter  bb  = Array(b.w = 
MatrixD(-1.59227,	3.95292,	-4.10353,	1.21439,	-2.61298,	-0.816961,	-0.686923,	0.592220,	-1.45424,	7.29707,	-0.237157,	-0.918562,	-4.95089,	1.54728,	-0.121914,
 	-6.78161,	-4.94383,	2.50528,	4.74975,	2.67910,	2.25877,	2.15313,	-1.50476,	-0.0539916,	-7.22174,	3.02668,	2.10470,	-2.46832,	-3.34709,	1.16871,
 	2.68583,	-0.640304,	2.08195,	-1.82041,	0.606357,	-4.31881,	-1.47449,	1.11288,	-6.46449,	-9.75071,	-4.50806,	-3.16563,	3.41390,	-3.73931,	-1.84391,
 	5.09528,	-1.24135,	-4.33349,	-5.21753,	-7.62956,	-6.16660,	-2.86272,	5.95973,	-8.42039,	2.96471,	-5.37297,	-4.96699,	-12.5248,	-2.06864,	-2.56503,
 	9.18442,	-1.38859,	-3.71821,	-5.09706,	-5.32949,	-6.41835,	-6.73092,	5.13651,	-8.98345,	-8.38487,	-7.49526,	-6.20106,	-4.96777,	0.817482,	-5.45980,
 	-0.557982,	-7.37461,	0.0981247,	0.192065,	3.35357,	3.40673,	-1.10534,	-0.679533,	6.11469,	-14.0021,	2.26907,	2.04182,	7.17763,	-0.466610,	-1.79110,
 	-0.277798,	-0.957900,	14.4118,	-11.3378,	5.42638,	1.21292,	3.19736,	-7.40346,	1.73415,	-2.35371,	0.881098,	2.39429,	11.8859,	6.83357,	1.58713) 
 b.b = VectorD(-0.563140,	4.65402,	-4.38912,	0.835297,	-3.34421,	-1.32853,	-1.58467,	0.537705,	-1.90925,	6.66484,	-0.929671,	-1.45015,	-5.90777,	1.71473,	-0.794705), b.w = 
MatrixD(-0.441892,	2.08606,	-4.36334,	-2.51959,	-3.47375,	-2.25202,	-3.31677,
 	4.98768,	1.44366,	-2.86006,	3.20212,	-1.09893,	-3.66801,	-1.71993,
 	2.06493,	1.54946,	1.55164,	1.72148,	5.69028,	4.95658,	2.86672,
 	4.24328,	-0.596722,	-1.03391,	5.07584,	-2.60242,	4.21017,	4.10672,
 	1.21737,	2.34521,	2.02056,	1.91657,	1.24052,	2.24053,	4.05882,
 	1.18288,	-0.120390,	3.67524,	1.55512,	1.96824,	2.33417,	3.49249,
 	1.67408,	1.39389,	-0.507334,	1.98268,	2.08384,	1.35176,	1.29875,
 	-1.14157,	-3.21549,	-2.59122,	-3.14406,	-3.58600,	-1.71197,	-2.17027,
 	1.71251,	-0.305322,	6.42710,	1.63042,	3.74051,	2.32929,	2.82752,
 	2.10002,	9.19772,	-4.52042,	-2.56202,	6.30702,	6.36319,	5.08980,
 	1.22400,	-0.346313,	2.95984,	1.90484,	1.96672,	2.46673,	3.19282,
 	1.32428,	0.962043,	2.14181,	1.91156,	1.97534,	1.50967,	2.74230,
 	1.39661,	6.88312,	2.83284,	2.18290,	0.646737,	2.48600,	6.20589,
 	6.52478,	0.240565,	-3.31476,	4.24060,	-3.30576,	-1.13664,	-0.634970,
 	1.85138,	0.822279,	-0.450920,	1.95564,	1.18607,	0.180795,	0.652985) 
 b.b = VectorD(0.350116,	-5.16568,	-7.86079,	-1.06615,	-8.35602,	-2.92450,	-3.76012), b.w = 
MatrixD(7.61842,
 	5.34277,
 	8.50294,
 	5.36832,
 	5.24499,
 	3.12152,
 	2.56428) 
 b.b = VectorD(7.67793))
    ----------------------------------------------------------------------------
    fitMap     qof = 
		rSq 	 -> VectorD(0.914915) 
		rSqBar 	 -> VectorD(0.913368) 
		sst 	 -> VectorD(23819.0) 
		sse 	 -> VectorD(2026.63) 
		mse0 	 -> VectorD(5.16998) 
		rmse 	 -> VectorD(2.27376) 
		mae 	 -> VectorD(1.66216) 
		dfm 	 -> VectorD(7.00000) 
		df 	 -> VectorD(385.000) 
		fStat 	 -> VectorD(591.415) 
		aic 	 -> VectorD(-862.632) 
		bic 	 -> VectorD(-830.862) 
		mape 	 -> VectorD(7.30672) 
		smape 	 -> VectorD(7.05542) 

    ----------------------------------------------------------------------------
        
Run + title
--------------------
| Cross-Validation |
--------------------
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1286.290383940121,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.886410,
 	0.884345,
 	4731.23,
 	537.421,
 	6.89002,
 	2.62488,
 	1.81318,
 	7.00000,
 	385.000,
 	429.197,
 	-172.658,
 	-153.804,
 	7.11347,
 	7.21373)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1165.9971921349477,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.886170,
 	0.884101,
 	4472.51,
 	509.105,
 	6.52699,
 	2.55480,
 	2.04425,
 	7.00000,
 	385.000,
 	428.178,
 	-169.740,
 	-150.886,
 	9.23844,
 	8.92231)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1138.6419051008052,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.930284,
 	0.929016,
 	4664.26,
 	325.173,
 	4.16889,
 	2.04179,
 	1.41978,
 	7.00000,
 	385.000,
 	733.915,
 	-150.782,
 	-131.928,
 	5.97822,
 	5.81868)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1138.6419051008052,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.921934,
 	0.920514,
 	3962.82,
 	309.363,
 	3.96619,
 	1.99153,
 	1.46188,
 	7.00000,
 	385.000,
 	649.528,
 	-149.152,
 	-130.298,
 	6.70111,
 	6.49191)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1138.6419051008052,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.955370,
 	0.954559,
 	5671.58,
 	253.121,
 	3.24514,
 	1.80143,
 	1.26579,
 	7.00000,
 	385.000,
 	1177.36,
 	-143.355,
 	-124.501,
 	5.20689,
 	5.19686)
-----------------------------------------------
| showQofStatTable: Statistical Table for QoF |
-----------------------------------------------
|        name |   num |        min |        max |       mean |      stdev |   interval |
----------------------------------------------------------------------------------------
|         rSq |     5 |      0.886 |      0.955 |      0.916 |      0.030 |      0.037 |
|      rSqBar |     5 |      0.884 |      0.955 |      0.915 |      0.030 |      0.038 |
|         sst |     5 |   3962.818 |   5671.580 |   4700.481 |    620.767 |    770.935 |
|         sse |     5 |    253.121 |    537.421 |    386.837 |    127.779 |    158.689 |
|        mse0 |     5 |      3.245 |      6.890 |      4.959 |      1.638 |      2.034 |
|        rmse |     5 |      1.801 |      2.625 |      2.203 |      0.365 |      0.454 |
|         mae |     5 |      1.266 |      2.044 |      1.601 |      0.319 |      0.396 |
|         dfm |     5 |      7.000 |      7.000 |      7.000 |      0.000 |      0.000 |
|          df |     5 |    385.000 |    385.000 |    385.000 |      0.000 |      0.000 |
|       fStat |     5 |    428.178 |   1177.363 |    683.636 |    307.187 |    381.498 |
|         aic |     5 |   -172.658 |   -143.355 |   -157.137 |     13.170 |     16.356 |
|         bic |     5 |   -153.804 |   -124.501 |   -138.284 |     13.170 |     16.356 |
|        mape |     5 |      5.207 |      9.238 |      6.848 |      1.521 |      1.889 |
|       smape |     5 |      5.197 |      8.922 |      6.729 |      1.439 |      1.787 |
----------------------------------------------------------------------------------------
----------------------------------------
| Feature Selection Technique: Forward |
----------------------------------------
-------------------------------------------------------------------------------------
| forwardSelAll: (l = 0) INITIAL variable (0, intercept) => cols = LinkedHashSet(0) |
-------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (8888.64949040654,143)
optimize: bSize = 20, nB = 19
ending epoch = (7304.496294493792,400)
optimize: bSize = 20, nB = 19
ending epoch = (7203.638008000545,334)
optimize: bSize = 20, nB = 19
ending epoch = (6883.079738978065,400)
optimize: bSize = 20, nB = 19
ending epoch = (19403.669089965413,400)
optimize: bSize = 20, nB = 19
ending epoch = (14547.103119096537,249)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5696.152876168178,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.721122,
 	0.719692,
 	4731.23,
 	1319.44,
 	16.9159,
 	4.11289,
 	2.87518,
 	2.00000,
 	390.000,
 	504.231,
 	-214.979,
 	-207.909,
 	12.1311,
 	12.2485)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5294.915220268903,98)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.725165,
 	0.723756,
 	4472.51,
 	1229.20,
 	15.7590,
 	3.96976,
 	3.15069,
 	2.00000,
 	390.000,
 	514.517,
 	-212.303,
 	-205.233,
 	13.7221,
 	13.5450)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5047.531429469919,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.587863,
 	0.585750,
 	4664.26,
 	1922.31,
 	24.6450,
 	4.96438,
 	3.78424,
 	2.00000,
 	390.000,
 	278.144,
 	-232.859,
 	-225.789,
 	16.5642,
 	15.2042)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5652.713395097038,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.713264,
 	0.711794,
 	3962.82,
 	1136.28,
 	14.5677,
 	3.81677,
 	2.86929,
 	2.00000,
 	390.000,
 	485.069,
 	-209.547,
 	-202.477,
 	12.8503,
 	12.6899)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (5415.131102527959,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.741365,
 	0.740039,
 	5671.58,
 	1466.87,
 	18.8060,
 	4.33659,
 	2.83946,
 	2.00000,
 	390.000,
 	558.959,
 	-219.352,
 	-212.281,
 	10.3939,
 	10.9022)
------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 1) ADD variable (4, weight) => cols = LinkedHashSet(0, 4) @ 0.7201347555176554 |
------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (6276.9108890710695,346)
optimize: bSize = 20, nB = 19
ending epoch = (6374.775279154165,400)
optimize: bSize = 20, nB = 19
ending epoch = (5822.3555736285325,400)
optimize: bSize = 20, nB = 19
ending epoch = (6327.106628055659,400)
optimize: bSize = 20, nB = 19
ending epoch = (3024.9566699882826,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2311.687111718661,308)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.855557,
 	0.854443,
 	4731.23,
 	683.392,
 	8.76144,
 	2.95997,
 	2.17597,
 	3.00000,
 	389.000,
 	768.037,
 	-187.951,
 	-178.524,
 	9.75612,
 	9.33951)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2311.687111718661,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.866971,
 	0.865945,
 	4472.51,
 	594.974,
 	7.62788,
 	2.76186,
 	2.13906,
 	3.00000,
 	389.000,
 	845.058,
 	-181.943,
 	-172.516,
 	10.0745,
 	9.46219)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2302.5543428980523,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.858286,
 	0.857193,
 	4664.26,
 	660.989,
 	8.47422,
 	2.91105,
 	2.12571,
 	3.00000,
 	389.000,
 	785.324,
 	-186.429,
 	-177.002,
 	9.13008,
 	8.85819)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2243.416112010749,72)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.870988,
 	0.869993,
 	3962.82,
 	511.251,
 	6.55450,
 	2.56018,
 	2.00472,
 	3.00000,
 	389.000,
 	875.407,
 	-176.255,
 	-166.828,
 	9.51070,
 	9.09040)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2193.173233086597,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.862630,
 	0.861570,
 	5671.58,
 	779.107,
 	9.98855,
 	3.16047,
 	2.35955,
 	3.00000,
 	389.000,
 	814.253,
 	-194.454,
 	-185.027,
 	9.45544,
 	9.71139)
-----------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 2) ADD variable (6, modelyear) => cols = LinkedHashSet(0, 4, 6) @ 0.877613691891115 |
-----------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (2927.7998442260923,400)
optimize: bSize = 20, nB = 19
ending epoch = (3124.8168735651134,134)
optimize: bSize = 20, nB = 19
ending epoch = (2770.152478253627,365)
optimize: bSize = 20, nB = 19
ending epoch = (2862.375449665151,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2032.2004132340799,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.857148,
 	0.855675,
 	4731.23,
 	675.868,
 	8.66497,
 	2.94363,
 	2.07507,
 	4.00000,
 	388.000,
 	582.023,
 	-185.801,
 	-174.017,
 	8.96221,
 	8.72693)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2032.2004132340799,69)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.876393,
 	0.875118,
 	4472.51,
 	552.836,
 	7.08764,
 	2.66226,
 	2.11197,
 	4.00000,
 	388.000,
 	687.742,
 	-177.054,
 	-165.271,
 	9.82141,
 	9.28814)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2032.2004132340799,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.886562,
 	0.885393,
 	4664.26,
 	529.104,
 	6.78339,
 	2.60449,
 	1.86130,
 	4.00000,
 	388.000,
 	758.093,
 	-175.367,
 	-163.583,
 	7.80238,
 	7.66607)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2032.2004132340799,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.903859,
 	0.902868,
 	3962.82,
 	380.989,
 	4.88447,
 	2.21008,
 	1.75712,
 	4.00000,
 	388.000,
 	911.937,
 	-164.837,
 	-153.054,
 	7.93219,
 	7.77619)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1927.4030188260629,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.877876,
 	0.876617,
 	5671.58,
 	692.638,
 	8.87998,
 	2.97993,
 	2.14592,
 	4.00000,
 	388.000,
 	697.272,
 	-186.993,
 	-175.209,
 	8.50880,
 	8.60192)
--------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 3) ADD variable (1, cylinders) => cols = LinkedHashSet(0, 4, 6, 1) @ 0.883055548334721 |
--------------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (2892.8003022382113,400)
optimize: bSize = 20, nB = 19
ending epoch = (2731.151485976402,264)
optimize: bSize = 20, nB = 19
ending epoch = (2835.0077296683944,232)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (2111.0192465689142,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.876257,
 	0.874658,
 	4731.23,
 	585.459,
 	7.50589,
 	2.73969,
 	1.89393,
 	5.00000,
 	387.000,
 	548.088,
 	-177.363,
 	-163.223,
 	8.40335,
 	8.26086)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1856.8378172097887,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.849017,
 	0.847066,
 	4472.51,
 	675.273,
 	8.65734,
 	2.94234,
 	2.26395,
 	5.00000,
 	387.000,
 	435.241,
 	-183.723,
 	-169.582,
 	10.4874,
 	10.1461)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1631.1722799274412,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.873190,
 	0.871552,
 	4664.26,
 	591.474,
 	7.58300,
 	2.75372,
 	2.01298,
 	5.00000,
 	387.000,
 	532.963,
 	-177.789,
 	-163.649,
 	8.50208,
 	8.51287)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1551.5427845378956,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.882545,
 	0.881028,
 	3962.82,
 	465.451,
 	5.96733,
 	2.44281,
 	1.87534,
 	5.00000,
 	387.000,
 	581.578,
 	-168.866,
 	-154.726,
 	8.38566,
 	8.32888)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1547.4367458950708,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.911885,
 	0.910747,
 	5671.58,
 	499.750,
 	6.40705,
 	2.53122,
 	1.88720,
 	5.00000,
 	387.000,
 	800.999,
 	-171.294,
 	-157.154,
 	7.80676,
 	7.92782)
-------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 4) ADD variable (3, horsepower) => cols = LinkedHashSet(0, 4, 6, 1, 3) @ 0.8810189019122407 |
-------------------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (2658.0314212211406,317)
optimize: bSize = 20, nB = 19
ending epoch = (2344.5203224939046,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1643.9705389277747,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.876290,
 	0.874367,
 	4731.23,
 	585.302,
 	7.50387,
 	2.73932,
 	1.89614,
 	6.00000,
 	386.000,
 	455.699,
 	-177.067,
 	-160.570,
 	8.07966,
 	7.97563)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1488.5984449628102,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.850679,
 	0.848357,
 	4472.51,
 	667.843,
 	8.56208,
 	2.92610,
 	2.19533,
 	6.00000,
 	386.000,
 	366.504,
 	-184.404,
 	-167.907,
 	9.80812,
 	9.34704)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1430.7039867318244,102)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.908430,
 	0.907007,
 	4664.26,
 	427.105,
 	5.47570,
 	2.34002,
 	1.73430,
 	6.00000,
 	386.000,
 	638.228,
 	-163.004,
 	-146.507,
 	7.43448,
 	7.21513)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1430.7039867318244,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.896915,
 	0.895312,
 	3962.82,
 	408.509,
 	5.23730,
 	2.28851,
 	1.74933,
 	6.00000,
 	386.000,
 	559.744,
 	-161.351,
 	-144.854,
 	7.98858,
 	7.66511)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1430.7039867318244,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.945058,
 	0.944204,
 	5671.58,
 	311.607,
 	3.99496,
 	1.99874,
 	1.47321,
 	6.00000,
 	386.000,
 	1106.60,
 	-152.736,
 	-136.239,
 	6.26355,
 	6.20537)
------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 5) ADD variable (5, acceleration) => cols = LinkedHashSet(0, 4, 6, 1, 3, 5) @ 0.9054781611788858 |
------------------------------------------------------------------------------------------------------------------------
optimize: bSize = 20, nB = 19
ending epoch = (2429.624476313597,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1570.0868164191804,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.857083,
 	0.854485,
 	4731.23,
 	676.174,
 	8.66890,
 	2.94430,
 	1.86491,
 	7.00000,
 	385.000,
 	329.839,
 	-182.646,
 	-163.792,
 	7.66254,
 	7.74017)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1342.7206739197102,400)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.843650,
 	0.840807,
 	4472.51,
 	699.279,
 	8.96512,
 	2.99418,
 	2.18529,
 	7.00000,
 	385.000,
 	296.774,
 	-184.650,
 	-165.797,
 	9.75016,
 	9.38565)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1208.8297938001135,368)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.897325,
 	0.895458,
 	4664.26,
 	478.904,
 	6.13980,
 	2.47786,
 	1.81791,
 	7.00000,
 	385.000,
 	480.669,
 	-165.534,
 	-146.680,
 	7.71526,
 	7.55084)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1208.8297938001135,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.923237,
 	0.921841,
 	3962.82,
 	304.197,
 	3.89997,
 	1.97483,
 	1.47764,
 	7.00000,
 	385.000,
 	661.492,
 	-150.378,
 	-131.525,
 	6.82022,
 	6.60711)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 78
DEBUG @ PredictorMV.validate: test set size = 78
optimize: bSize = 20, nB = 15
ending epoch = (1208.8297938001135,-3)
DEBUG @ PredictorMV.validate: parameters b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.948537,
 	0.947601,
 	5671.58,
 	291.879,
 	3.74204,
 	1.93444,
 	1.40111,
 	7.00000,
 	385.000,
 	1013.72,
 	-149.310,
 	-130.456,
 	6.00219,
 	6.08655)
---------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 6) ADD variable (2, displacement) => cols = LinkedHashSet(0, 4, 6, 1, 3, 5, 2) @ 0.9031454268675112 |
---------------------------------------------------------------------------------------------------------------------------
k = 7, n = 7
Run + title
x-axis: minX = 0.0, maxX = 6.0
y-axis: minY = 69.0, maxY = 91.0
rSq = 
MatrixD(72.1563,	72.0135,	69.7756,
 	87.8550,	87.7614,	86.2886,
 	88.4249,	88.3056,	88.0367,
 	88.2537,	88.1019,	87.8579,
 	90.6925,	90.5478,	89.5474,
 	90.4875,	90.3145,	89.3966)
